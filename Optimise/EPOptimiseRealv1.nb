(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.1'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    223655,       6439]*)
(*NotebookOutlinePosition[    224353,       6463]*)
(*  CellTagsIndexPosition[    224309,       6459]*)
(*WindowFrame->Normal*)



Notebook[{
Cell[BoxData[
    \(\(BeginPackage["\<EPOptimise`\>", \
{"\<Statistics`NormalDistribution`\>"}];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(EPOptimise::usage = "\<EPOptimise[Objective Function, No Of \
Chromosomes, Iterations, Prob. of Crossover, Prob. of Mutation, Genes per \
Chrom., Start of range, End of range, Options (see EPOptimise[Options])]\n\
EPOptimise is a MAXIMISING Function!\>";\)\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Options = "\<EPOptimise supports 3 possible options: \
SelectionMethod, BreedingPool, ReinsertionMethod;\nSee EPOptimise[<Option \
Name>];\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("EPOptimise supports 3 possible options: SelectionMethod, BreedingPool, \
ReinsertionMethod;\nSee EPOptimise[<Option Name>];"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::SelectionMethod = "\<SelectionMethod specifies one of 4 \
methods for selecting the possible breeding population.\nThe options are:\n\
Roulette\nUniversal\nTruncation\nTournament\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("SelectionMethod specifies one of 4 methods for selecting the possible \
breeding population.\nThe options are:\nRoulette\nUniversal\nTruncation\n\
Tournament"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Roulette = "\<In the Roulette SelectionMethod The \
individuals are mapped to contiguous segments of a line, such that each \
individual's segment is equal in size to its fitness. A random number is \
generated and the individual whose segment spans the random number is \
selected. This is repeated to select the breeding population required.\>"\)], \
"Input",
  InitializationCell->True],

Cell[BoxData[
    \("In the Roulette SelectionMethod The individuals are mapped to \
contiguous segments of a line, such that each individual's segment is equal \
in size to its fitness. A random number is generated and the individual whose \
segment spans the random number is selected. This is repeated to select the \
breeding population required."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Universal = "\<In the Universal SelectionMethod the \
individuals are mapped to contiguous segments of a line, such that each \
individual's segment is equal in size to its fitness exactly as in Roulette \
selection. Here equally spaced pointers are placed over the line as many as \
there are individuals to be selected, and the breeding population thus \
chosen.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("In the Universal SelectionMethod the individuals are mapped to \
contiguous segments of a line, such that each individual's segment is equal \
in size to its fitness exactly as in Roulette selection. Here equally spaced \
pointers are placed over the line as many as there are individuals to be \
selected, and the breeding population thus chosen."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Truncation = "\<In Truncation selection individuals are \
sorted according to their fitness. Only the best individuals are selected for \
parents. The parameter for truncation selection is the TruncationThreshold. \
TruncationThreshold indicates the proportion of the population to be selected \
as parents and takes values ranging from 50%-10%. Individuals below the \
truncation threshold do not produce offspring.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("In Truncation selection individuals are sorted according to their \
fitness. Only the best individuals are selected for parents. The parameter \
for truncation selection is the TruncationThreshold. TruncationThreshold \
indicates the proportion of the population to be selected as parents and \
takes values ranging from 50%-10%. Individuals below the truncation threshold \
do not produce offspring."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::TruncationThreshold = "\<TruncationThreshold indicates the \
proportion of the population to be selected as parents in the Truncation \
SelectionMethod, and takes values ranging from 50%-10%.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("TruncationThreshold indicates the proportion of the population to be \
selected as parents in the Truncation SelectionMethod, and takes values \
ranging from 50%-10%."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Tournament = "\<In Tournament selection a number \
TournamentNumber of individuals is chosen randomly from the population and \
the best individual from this group is selected as a parent. This process is \
repeated as often as individuals must be chosen.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("In Tournament selection a number TournamentNumber of individuals is \
chosen randomly from the population and the best individual from this group \
is selected as a parent. This process is repeated as often as individuals \
must be chosen."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(EPOptimise::TournamentNumber\)\(=\)\("\<TournamentNumber is the \
number of individuals to be tested in each tournament round in the Tournament \
SelectionMethod.\>"\)\(\ \)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("TournamentNumber is the number of individuals to be tested in each \
tournament round in the Tournament SelectionMethod."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::BreedingPool = "\<The BreedingPool is the size of the \
breeding population at each iteration. This is the total possible breeding \
population, and not all individuals chosen will breed. See \
EPOptimise[Breeding].\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("The BreedingPool is the size of the breeding population at each \
iteration. This is the total possible breeding population, and not all \
individuals chosen will breed. See EPOptimise[Breeding]."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Breeding = "\<When breeding individuals, the breeding \
population is chosen using the SelectionMethod variable and the BreedingPool \
size. The chance of these individuals then breeding is determined randomly \
using the Crossover Probability. The breeding is then performed using one of \
the CrossoverMethod's (Not yet implemented), and reinsertion of the resulting \
offspring is performed according to the ReinsertionMethod.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("When breeding individuals, the breeding population is chosen using the \
SelectionMethod variable and the BreedingPool size. The chance of these \
individuals then breeding is determined randomly using the Crossover \
Probability. The breeding is then performed using one of the \
CrossoverMethod's (Not yet implemented), and reinsertion of the resulting \
offspring is performed according to the ReinsertionMethod."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::ReinsertionMethod = "\<ReinsertionMethod specifies the \
algorithm for reinserting the offspring back into the main population. It is \
dependant on the choice of BreedingPool relative to the population size. The \
methods are:\nBreedingPool = Population Size  \[Rule]  Pure\nBreedingPool < \
Population Size  \[Rule]  Elitist or Uniform\nBreedingPool > Population Size  \
\[Rule]  Fitness\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("ReinsertionMethod specifies the algorithm for reinserting the \
offspring back into the main population. It is dependant on the choice of \
BreedingPool relative to the population size. The methods are:\nBreedingPool \
= Population Size  \[Rule]  Pure\nBreedingPool < Population Size  \[Rule]  \
Elitist or Uniform\nBreedingPool > Population Size  \[Rule]  Fitness"\)], \
"Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Pure = "\<In Pure reinsertion the parents are completely \
replaced with their offspring. Because not all parents reproduce (see \
EPOptimise[Breeding]), some offspring are clones of their parents.\>"\)], \
"Input",
  InitializationCell->True],

Cell[BoxData[
    \("In Pure reinsertion the parents are completely replaced with their \
offspring. Because not all parents reproduce (see EPOptimise[Breeding]), some \
offspring are clones of their parents."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Elitist = "\<In Elitist reinsertion the worst parents are \
replaced by the offspring. Elitist reinsertion requires BreedingPool to be \
less than the population Size.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("In Elitist reinsertion the worst parents are replaced by the \
offspring. Elitist reinsertion requires BreedingPool to be less than the \
population Size."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Uniform = "\<In Uniform reinsertion the offspring randomly \
replace some of the parents. This is analogous to Pure reinsertion when \
BreedingPool < Population Size.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("In Uniform reinsertion the offspring randomly replace some of the \
parents. This is analogous to Pure reinsertion when BreedingPool < Population \
Size."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EPOptimise::Fitness = "\<In Fitness reinsertion the fittest offspring \
replace all of the parents. This requires BreedingPool > Population Size. The \
Fitness ReinsertionMethod has a penalty in terms of computational efficiency \
as the fitness of all offspring must be evaluated in addition to that \
required in evaluating the chosen SelectionMethod.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("In Fitness reinsertion the fittest offspring replace all of the \
parents. This requires BreedingPool > Population Size. The Fitness \
ReinsertionMethod has a penalty in terms of computational efficiency as the \
fitness of all offspring must be evaluated in addition to that required in \
evaluating the chosen SelectionMethod."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(GetIterationNumber::usage = "\<Returns Latest Iteration Number from \
EPOptimise.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("Returns Latest Iteration Number from EPOptimise."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Begin["\<`Private`\>"]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("EPOptimise`Private`"\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Clear[EPOptimise]\)], "Input"],

Cell[BoxData[
    \(EPOptimise[] := \(?EPOptimise\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(EPOptimise[help_] := 
      Print[ToExpression[
          Evaluate["\<EPOptimise::\>" <> ToString[help]]]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(PartitionAt[list_, lengths_] := 
      Block[{}, \[IndentingNewLine]totallengths = 
          Transpose[{Drop[FoldList[Plus, 1, lengths], \(-1\)], 
              Rest[FoldList[Plus, 0, lengths]]}]; \[IndentingNewLine]If[
          Fold[Plus, 0, lengths] =!= Length[list], 
          AppendTo[totallengths, 
            Length[list] - 
              Fold[Plus, 0, 
                lengths]]]; \[IndentingNewLine]\(list\[LeftDoubleBracket]
              Range[Sequence @@ #]\[RightDoubleBracket] &\) /@ 
          totallengths\[IndentingNewLine]]\)], "Input"],

Cell[BoxData[
    \(RandomUnion[no_] := 
      Block[{randlist = Range[no], rand, 
          randno}, \[IndentingNewLine]Table[\((rand = 
              Random[Integer, {1, Length[randlist]}]; 
            randno = randlist\[LeftDoubleBracket]rand\[RightDoubleBracket]; 
            randlist = Drop[randlist, {rand}]; 
            randno)\), {no}]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(RandomUnion[no_, subno_] := 
      Block[{randlist = Range[no], rand, 
          randno}, \[IndentingNewLine]Table[\((rand = 
              Random[Integer, {1, Length[randlist]}]; 
            randno = randlist\[LeftDoubleBracket]rand\[RightDoubleBracket]; 
            randlist = Drop[randlist, {rand}]; 
            randno)\), {subno}]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Clear[CreateChrom]\)], "Input"],

Cell[BoxData[
    \(CreateChrom[number_, numbers_Integer, start_List, end_List] := 
      Table[\(Random[
              Real, {start\[LeftDoubleBracket]#\[RightDoubleBracket], 
                end\[LeftDoubleBracket]#\[RightDoubleBracket]}] &\) /@ 
          Range[numbers], {number}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(CreateChrom[number_, numbers_Integer, start_Real | start_Integer, 
        end_List] := 
      Table[\(Random[
              Real, {start, 
                end\[LeftDoubleBracket]#\[RightDoubleBracket]}] &\) /@ 
          Range[numbers], {number}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(CreateChrom[number_, numbers_Integer, start_List, 
        end_Real | end_Integer] := 
      Table[\(Random[
              Real, {start\[LeftDoubleBracket]#\[RightDoubleBracket], 
                end}] &\) /@ Range[numbers], {number}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(CreateChrom[number_, numbers_Integer, start_Real | start_Integer, 
        end_Real | end_Integer] := 
      Table[\(Random[Real, {start, end}] &\) /@ 
          Range[numbers], {number}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FitnessAll[list_, rawdata_, 
        fitdata_] := \((\(FitnessValue[#] &\) /@ list)\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(FitnessAll[list_, number_, rawdata_, 
        fitdata_] := \((\(If[
              MemberQ[Partition[Flatten[Drop[rawdata, \(-1\)]], 
                  number], #], \(Flatten[
                  fitdata]\)\[LeftDoubleBracket]\(Position[
                    Partition[Flatten[Drop[rawdata, \(-1\)]], 
                      number], #]\)\[LeftDoubleBracket]1, 
                  1\[RightDoubleBracket]\[RightDoubleBracket], 
              FitnessValue[#]] &\) /@ \((\(# &\) /@ list)\))\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(CumulativeProbabilities[list_, number_, start_, range_, rawdata_, 
        fitdata2_] := 
      Block[{a}, \[IndentingNewLine]a = 
          FitnessAll[list, number, rawdata, 
            fitdata2]; \[IndentingNewLine]AppendTo[fitdata, 
          a]; \[IndentingNewLine]Rest[
          FoldList[Plus, 0, a/Total[a]]]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(randomnumbers[number_] := \((SeedRandom[]; 
        Table[Random[Real, {0, 1}], {number}])\)\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(selectionmethods = {Global`Roulette, Global`Universal, 
        Global`Truncation, Global`Tournament}\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \({Global`Roulette, Global`Universal, Global`Truncation, 
      Global`Tournament}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(SelectionRoulette[list_, probab_, number_, opts___] := 
      Block[{a, 
          random = 
            randomnumbers[
              number]}, \[IndentingNewLine]list\[LeftDoubleBracket]
          breedinglist = \(\((a = #; \[IndentingNewLine]Length[
                      Select[probab, # < a &]] + 1)\) &\) /@ 
              random\[RightDoubleBracket]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(SelectionUniversal[list_, probab_, number_, opts___] := 
      Block[{a, 
          linear = 
            Range[Random[Real, {0, 1\/number}], 1, 
              1\/number]}, \[IndentingNewLine]list\[LeftDoubleBracket]
          breedinglist = \(\((a = #; \[IndentingNewLine]Length[
                      Select[probab, # < a &]] + 1)\) &\) /@ 
              linear\[RightDoubleBracket]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(SelectionTruncation[list_, probab_, number_, opts___] := 
      Block[{a, 
          b}, \[IndentingNewLine]threshold = \(Global`TruncationThreshold /. \
{opts}\) /. {Global`TruncationThreshold \[Rule] 0.5}; \[IndentingNewLine]If[
          printedsetting =!= True, 
          Print["\<Using TruncationThreshold \[Rule] \>" <> 
              ToString[threshold]]; 
          printedsetting = True]; \[IndentingNewLine]a = 
          MapThread[
            Subtract, {probab, 
              Prepend[Most[probab], 0]}]; \[IndentingNewLine]b = 
          Sort[Transpose[{a, 
                list}], #1\[LeftDoubleBracket]1\[RightDoubleBracket] < #2\
\[LeftDoubleBracket]1\[RightDoubleBracket] &]; \[IndentingNewLine]c = 
          Take[b, \(-Round[
                threshold*
                  Length[list]]\)]; \[IndentingNewLine] (*\(Print["\<Number \
selected = \>", \(-Round[
                  threshold*
                    Length[list]]\)];\)*) \[IndentingNewLine]breedinglist = \
\(\(Position[list, #]\)\[LeftDoubleBracket]1, 1\[RightDoubleBracket] &\) /@ 
            c\[LeftDoubleBracket]All, 
              2\[RightDoubleBracket]; \[IndentingNewLine] \
(*\(Print["\<breedinglist = \>", 
              breedinglist];\)*) \[IndentingNewLine]\(c\[LeftDoubleBracket]
            All, 2\[RightDoubleBracket]\)\[LeftDoubleBracket]
          Table[Random[
              Integer, {1, Length[c]}], {Length[
                c]}]\[RightDoubleBracket]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(SelectionTournament[list_, probab_, number_, opts___] := 
      Block[{a = MapThread[Subtract, {probab, Prepend[Most[probab], 0]}], 
          b = a}, \[IndentingNewLine]tour = \(Global`TournamentNumber /. \
{opts}\) /. {Global`TournamentNumber \[Rule] 
                Ceiling[number/5]}; \[IndentingNewLine]If[
          printedsetting =!= True, 
          Print["\<Using TournamentNumber \[Rule] \>" <> ToString[tour]]; 
          printedsetting = 
            True]; \[IndentingNewLine]Table[\(\((a = ReplacePart[a, 0, #]; 
                AppendTo[breedinglist, #]; 
                list\[LeftDoubleBracket]#\[RightDoubleBracket])\) \
&\)[\(\(Position[a, Max[#]]\)\[LeftDoubleBracket]1, 
                  1\[RightDoubleBracket] &\)[
              a\[LeftDoubleBracket]Table[
                  Random[Integer, {1, 
                      Length[list]}], {tour}]\[RightDoubleBracket]]], \
{number}]\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(bin6[b_, c_] := \(b[\([#]\)] &\) /@ 
          Split[Ordering[c], 
            c[\([#1]\)] \[Equal] c[\([#2]\)] &];\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Clear[SelectforCrossover]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(SelectforCrossover[list_, numbers_:  5, pc_:  0.25] := 
      Block[{a, crossdatalist, positionsofcross, d, e, f, g, 
          h}, \[IndentingNewLine] (*Generate\ enough\ random\ numbers\
*) \[IndentingNewLine]a = 
          randomnumbers[
            numbers]; \[IndentingNewLine]\[IndentingNewLine] (*positions\ \
where\ random\ no\ is\ less\ than\ chance\ of\ \
crossing*) \[IndentingNewLine]positionsofcross = 
          Flatten[Position[
              a, _?\((# < 
                      pc &)\)]]; \[IndentingNewLine]\[IndentingNewLine] \
(*elements\ of\ list\ that\ are\ to\ be\ \
crossed*) \[IndentingNewLine]crossdatalist = \(\((list\[LeftDoubleBracket]#\
\[RightDoubleBracket])\) &\) /@ 
            positionsofcross; \[IndentingNewLine]\[IndentingNewLine] (*if\ \
total\ number\ of\ crossers\ is\ odd ... *) \[IndentingNewLine]If[
          OddQ[Length[
              crossdatalist]], \[IndentingNewLine]\[IndentingNewLine] \
(*randomly\ choose\ to\ add\ another\ or\ drop\ 1, \ 
            unless\ chosen\ is\ fewer\ than\ 2\  - \ 
              then\ must\ add*) \[IndentingNewLine]If[
            Random[Integer, {1, 2}] === 1 && 
              Length[crossdatalist] > 
                1, \[IndentingNewLine]\[IndentingNewLine] (*lets\ drop\ a\ \
gene\ from\ the\ list*) \[IndentingNewLine] (*randomly\ pick\ which\ one\
*) \[IndentingNewLine]g = 
              Random[Integer, {1, 
                  Length[crossdatalist]}]; \[IndentingNewLine]\
\[IndentingNewLine] (*in\ case\ we\ have\ more\ than\ 1\ of\ them, \ 
              randomly\ drop\ 1*) \[IndentingNewLine]h = \(#\
\[LeftDoubleBracket]Random[Integer, {1, Length[#]}]\[RightDoubleBracket] &\)[
                Select[Flatten[
                    Position[list, 
                      crossdatalist\[LeftDoubleBracket]
                        g\[RightDoubleBracket]]], 
                  MemberQ[
                      positionsofcross, #] &]]; \[IndentingNewLine]\
\[IndentingNewLine] (*edit\ the\ crossover\ \
lists*) \[IndentingNewLine]positionsofcross = 
              Select[positionsofcross, # =!= 
                    h &]; \[IndentingNewLine]crossdatalist = 
              Drop[crossdatalist, {g}], \
\[IndentingNewLine]\[IndentingNewLine] (*lets\ add\ an\ extra\ gene\ to\ the\ \
list*) \[IndentingNewLine] (*randomly\ pick\ one ... *) \[IndentingNewLine]d \
= Range[1, 
                numbers]; \[IndentingNewLine] (*edit\ the\ crossover\ lists\
*) \[IndentingNewLine]AppendTo[
              positionsofcross, \((f = 
                  d\[LeftDoubleBracket]Random[
                      Integer, {1, 
                        Length[
                          d]}]\[RightDoubleBracket])\)]; \
\[IndentingNewLine]AppendTo[crossdatalist, 
              list\[LeftDoubleBracket]f\[RightDoubleBracket]];]]; \
\[IndentingNewLine]crossoverlist = 
          positionsofcross; \[IndentingNewLine]crossdatalist]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Statistics`\)], "Input"],

Cell[BoxData[
    \(LimitedGaussianSample[mean_, sigma_, limits_List] := 
      Module[{a, 
          i = 0}, \[IndentingNewLine]While[\[IndentingNewLine]\((a = 
                  Random[NormalDistribution[mean, sigma]])\) > 
              limits\[LeftDoubleBracket]2\[RightDoubleBracket] \
|| \[IndentingNewLine]a < limits\[LeftDoubleBracket]1\[RightDoubleBracket], 
          i = i + 1]; \[IndentingNewLine]a]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Clear[newvalue]\)], "Input"],

Cell[BoxData[
    \(newvalue[
        input_List] := \(If[Max[#] - Min[#] > 0, 
            Min[#] + 
              LimitedGaussianSample[\(Max[#] - Min[#]\)\/2, \(Max[#] - Min[#]\
\)\/6, {\(-10\), 10}], #] &\) /@ Transpose[input]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(InvDistC[x_, n_] := 
      Switch[Random[Integer, {0, 1}], 0, 
        1\^\(1\/\(\(\(1.`\)\(\[InvisibleSpace]\)\) + n\)\)\ x\^\(1\/\(\(\(1.`\
\)\(\[InvisibleSpace]\)\) + n\)\), 1, 
        Abs[\ \(2\^\(-\(1.`\/\(\(\(1.`\)\(\[InvisibleSpace]\)\) + 
                        n\)\)\)\) \((0.5`\[InvisibleSpace] - 1.`\ \
x)\)\^\(-\(1.`\/\(\(\(1.`\)\(\[InvisibleSpace]\)\) + n\)\)\)]]\)], "Input",
  InitializationCell->True],

Cell["\<\
SBX[input_List,Limits_List]:=Module[{x,mean,sigma,limits,ans,picks,values},
    picks=Table[Random[Integer,{1,2}],{Length[input\[LeftDoubleBracket]1\
\[RightDoubleBracket]]}];
    values=Part[#\[LeftDoubleBracket]1\[RightDoubleBracket],#\
\[LeftDoubleBracket]2\[RightDoubleBracket]]&/@Transpose[{Transpose[input],\
picks}];
    means1=Mean[#]&/@Transpose[input];
    means2=Mean[#-Min[#]]&/@Transpose[input];
    betas=Table[InvDistC[Random[Real,{0,1}],3],{Length[input\
\[LeftDoubleBracket]1\[RightDoubleBracket]]}];
    
    (*Print[betas];
      Print[means1];
      Print[means1-(means2*betas)];
      Print[means1+(means2*betas)];*)
    
    Transpose[Switch[Random[Integer,{1,2}],1,#\[LeftDoubleBracket]{1,2}\
\[RightDoubleBracket],2,#\[LeftDoubleBracket]{2,1}\[RightDoubleBracket]]&/@\
Transpose[{means1-(means2*betas),means1+(means2*betas)}]]
    ]\
\>", "Text",
  InitializationCell->True],

Cell[BoxData[
    \(SBX[input_List, Limits_List, betafactor_] := 
      Module[{absmeans, relmeans, orders, 
          a}, \[IndentingNewLine]absmeans = \(Mean[#] &\) /@ 
            Transpose[
              input]; \[IndentingNewLine]relmeans = \(Mean[# - Min[#]] &\) /@ 
            Transpose[input]; \[IndentingNewLine]orders = \(Ordering[#] &\) /@ 
            Transpose[input]; \[IndentingNewLine]b = 
          True; \[IndentingNewLine]While[
          b, \[IndentingNewLine]betas = 
            InvDistC[Random[Real, {0, 1}], 
              betafactor]; \[IndentingNewLine]a = \(Switch[
                  Random[Integer, {0, 1}], 
                  1, {#\[LeftDoubleBracket]1\[RightDoubleBracket] - \((#\
\[LeftDoubleBracket]2\[RightDoubleBracket]*
                            betas)\), #\[LeftDoubleBracket]1\
\[RightDoubleBracket] + \((#\[LeftDoubleBracket]2\[RightDoubleBracket]*
                            betas)\)}\[LeftDoubleBracket]#\[LeftDoubleBracket]\
3\[RightDoubleBracket]\[RightDoubleBracket], 
                  0, #\[LeftDoubleBracket]4\[RightDoubleBracket]] &\) /@ 
              Transpose[{absmeans, relmeans, orders, 
                  Transpose[input]}]; \[IndentingNewLine]Print["\<here?\>"]; 
          b = Or @@ \((\(\((Min[#\[LeftDoubleBracket]1\[RightDoubleBracket]] \
< Min[#\[LeftDoubleBracket]2\[RightDoubleBracket]] || 
                        Max[#\[LeftDoubleBracket]1\[RightDoubleBracket]] > 
                          Max[#\[LeftDoubleBracket]2\[RightDoubleBracket]])\) \
&\) /@ MapThread[List, {a, Limits}])\); 
          Print["\<end here?\>"];\[IndentingNewLine]]; \[IndentingNewLine]a\
\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell["Clear[SBX]", "Text"],

Cell["\<\
SBX[input_List,Limits_List,betafactor_]:=Module[{absmeans,relmeans,orders,a},
      absmeans=Mean[#]&/@Transpose[input];
      relmeans=Mean[#-Min[#]]&/@Transpose[input];
      orders=Ordering[#]&/@Transpose[input];
      Transpose[(b=True;
              While[b,
                betas=InvDistC[Random[Real,{0,1}],betafactor];
                a=Switch[Random[Integer,{0,1}],1,{#\[LeftDoubleBracket]1\
\[RightDoubleBracket]-(#\[LeftDoubleBracket]2\[RightDoubleBracket]*betas),#\
\[LeftDoubleBracket]1\[RightDoubleBracket]+(#\[LeftDoubleBracket]2\
\[RightDoubleBracket]*betas)}\[LeftDoubleBracket]#\[LeftDoubleBracket]3\
\[RightDoubleBracket]\[RightDoubleBracket],0,#\[LeftDoubleBracket]4\
\[RightDoubleBracket]];
                b=(Min[#\[LeftDoubleBracket]1\[RightDoubleBracket]]<Min[#\
\[LeftDoubleBracket]2\[RightDoubleBracket]]||Max[#\[LeftDoubleBracket]1\
\[RightDoubleBracket]]>Max[#\[LeftDoubleBracket]2\[RightDoubleBracket]])&[{a,#\
\[LeftDoubleBracket]5\[RightDoubleBracket]}];
                ];a)&/@Transpose[{absmeans,relmeans,orders,Transpose[input],\
Limits}]]
      ];\
\>", "Text",
  InitializationCell->True],

Cell[BoxData[
    \(\(input = {{0.1, 0.5, 0.86}, {0.6, 0.14, 0.654}};\)\)], "Input"],

Cell[BoxData[
    \(<< Graphics`\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Histogram[
      Flatten[Table[\({\((#\[LeftDoubleBracket]1, 3\[RightDoubleBracket] - 
                      0.86)\) - \((0.654 - #\[LeftDoubleBracket]2, 
                        3\[RightDoubleBracket])\)} &\)[
            SBX[input, {{0, 1}, {0, 1}, {0, 1}}, 1]], {1000}]]]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
1.73472e-017 4.44444e+014 0.0147151 0.000588604 [
[.22222 .00222 -21.75 -12.5 ]
[.22222 .00222 21.75 0 ]
[.44444 .00222 -21.75 -12.5 ]
[.44444 .00222 21.75 0 ]
[.66667 .00222 -24.75 -12.5 ]
[.66667 .00222 24.75 0 ]
[.88889 .00222 -21.75 -12.5 ]
[.88889 .00222 21.75 0 ]
[-0.0125 .13244 -18 -4.5 ]
[-0.0125 .13244 0 4.5 ]
[-0.0125 .25016 -18 -4.5 ]
[-0.0125 .25016 0 4.5 ]
[-0.0125 .36788 -18 -4.5 ]
[-0.0125 .36788 0 4.5 ]
[-0.0125 .4856 -18 -4.5 ]
[-0.0125 .4856 0 4.5 ]
[-0.0125 .60332 -24 -4.5 ]
[-0.0125 .60332 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.22222 .01472 m
.22222 .02097 L
s
gsave
.22222 .00222 -21.75 -10.5 Mabsadd m
1 1 Mabs scale
/Courier findfont 10 scalefont setfont
(5.) show
/Math1Mono findfont 10 scalefont setfont
(\\264) show
/Courier findfont 10 scalefont setfont
(10) show
0 5.25 rmoveto
/Courier findfont 7.5 scalefont setfont
(-16) show
grestore
.44444 .01472 m
.44444 .02097 L
s
gsave
.44444 .00222 -21.75 -10.5 Mabsadd m
1 1 Mabs scale
/Courier findfont 10 scalefont setfont
(1.) show
/Math1Mono findfont 10 scalefont setfont
(\\264) show
/Courier findfont 10 scalefont setfont
(10) show
0 5.25 rmoveto
/Courier findfont 7.5 scalefont setfont
(-15) show
grestore
.66667 .01472 m
.66667 .02097 L
s
gsave
.66667 .00222 -24.75 -10.5 Mabsadd m
1 1 Mabs scale
/Courier findfont 10 scalefont setfont
(1.5) show
/Math1Mono findfont 10 scalefont setfont
(\\264) show
/Courier findfont 10 scalefont setfont
(10) show
0 5.25 rmoveto
/Courier findfont 7.5 scalefont setfont
(-15) show
grestore
.88889 .01472 m
.88889 .02097 L
s
gsave
.88889 .00222 -21.75 -10.5 Mabsadd m
1 1 Mabs scale
/Courier findfont 10 scalefont setfont
(2.) show
/Math1Mono findfont 10 scalefont setfont
(\\264) show
/Courier findfont 10 scalefont setfont
(10) show
0 5.25 rmoveto
/Courier findfont 7.5 scalefont setfont
(-15) show
grestore
0 .01472 m
1 .01472 L
s
0 .13244 m
.00625 .13244 L
s
[(200)] -0.0125 .13244 1 0 Mshowa
0 .25016 m
.00625 .25016 L
s
[(400)] -0.0125 .25016 1 0 Mshowa
0 .36788 m
.00625 .36788 L
s
[(600)] -0.0125 .36788 1 0 Mshowa
0 .4856 m
.00625 .4856 L
s
[(800)] -0.0125 .4856 1 0 Mshowa
0 .60332 m
.00625 .60332 L
s
[(1000)] -0.0125 .60332 1 0 Mshowa
.125 Mabswid
0 .04415 m
.00375 .04415 L
s
0 .07358 m
.00375 .07358 L
s
0 .10301 m
.00375 .10301 L
s
0 .16187 m
.00375 .16187 L
s
0 .1913 m
.00375 .1913 L
s
0 .22073 m
.00375 .22073 L
s
0 .27959 m
.00375 .27959 L
s
0 .30902 m
.00375 .30902 L
s
0 .33845 m
.00375 .33845 L
s
0 .39731 m
.00375 .39731 L
s
0 .42674 m
.00375 .42674 L
s
0 .45617 m
.00375 .45617 L
s
0 .51503 m
.00375 .51503 L
s
0 .54446 m
.00375 .54446 L
s
0 .57389 m
.00375 .57389 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
1 0 0 r
0 .01472 m
0 .60332 L
.02222 .60332 L
.02222 .01472 L
F
0 g
.5 Mabswid
0 .01472 m
0 .60332 L
.02222 .60332 L
.02222 .01472 L
0 .01472 L
s
1 0 0 r
.02222 .01472 m
.02222 .01472 L
.04444 .01472 L
.04444 .01472 L
F
0 g
.02222 .01472 m
.02222 .01472 L
.04444 .01472 L
.04444 .01472 L
.02222 .01472 L
s
1 0 0 r
.04444 .01472 m
.04444 .01472 L
.06667 .01472 L
.06667 .01472 L
F
0 g
.04444 .01472 m
.04444 .01472 L
.06667 .01472 L
.06667 .01472 L
.04444 .01472 L
s
1 0 0 r
.06667 .01472 m
.06667 .01472 L
.08889 .01472 L
.08889 .01472 L
F
0 g
.06667 .01472 m
.06667 .01472 L
.08889 .01472 L
.08889 .01472 L
.06667 .01472 L
s
1 0 0 r
.08889 .01472 m
.08889 .01472 L
.11111 .01472 L
.11111 .01472 L
F
0 g
.08889 .01472 m
.08889 .01472 L
.11111 .01472 L
.11111 .01472 L
.08889 .01472 L
s
1 0 0 r
.11111 .01472 m
.11111 .01472 L
.13333 .01472 L
.13333 .01472 L
F
0 g
.11111 .01472 m
.11111 .01472 L
.13333 .01472 L
.13333 .01472 L
.11111 .01472 L
s
1 0 0 r
.13333 .01472 m
.13333 .01472 L
.15556 .01472 L
.15556 .01472 L
F
0 g
.13333 .01472 m
.13333 .01472 L
.15556 .01472 L
.15556 .01472 L
.13333 .01472 L
s
1 0 0 r
.15556 .01472 m
.15556 .01472 L
.17778 .01472 L
.17778 .01472 L
F
0 g
.15556 .01472 m
.15556 .01472 L
.17778 .01472 L
.17778 .01472 L
.15556 .01472 L
s
1 0 0 r
.17778 .01472 m
.17778 .01472 L
.2 .01472 L
.2 .01472 L
F
0 g
.17778 .01472 m
.17778 .01472 L
.2 .01472 L
.2 .01472 L
.17778 .01472 L
s
1 0 0 r
.2 .01472 m
.2 .01472 L
.22222 .01472 L
.22222 .01472 L
F
0 g
.2 .01472 m
.2 .01472 L
.22222 .01472 L
.22222 .01472 L
.2 .01472 L
s
1 0 0 r
.22222 .01472 m
.22222 .01472 L
.24444 .01472 L
.24444 .01472 L
F
0 g
.22222 .01472 m
.22222 .01472 L
.24444 .01472 L
.24444 .01472 L
.22222 .01472 L
s
1 0 0 r
.24444 .01472 m
.24444 .01472 L
.26667 .01472 L
.26667 .01472 L
F
0 g
.24444 .01472 m
.24444 .01472 L
.26667 .01472 L
.26667 .01472 L
.24444 .01472 L
s
1 0 0 r
.26667 .01472 m
.26667 .01472 L
.28889 .01472 L
.28889 .01472 L
F
0 g
.26667 .01472 m
.26667 .01472 L
.28889 .01472 L
.28889 .01472 L
.26667 .01472 L
s
1 0 0 r
.28889 .01472 m
.28889 .01472 L
.31111 .01472 L
.31111 .01472 L
F
0 g
.28889 .01472 m
.28889 .01472 L
.31111 .01472 L
.31111 .01472 L
.28889 .01472 L
s
1 0 0 r
.31111 .01472 m
.31111 .01472 L
.33333 .01472 L
.33333 .01472 L
F
0 g
.31111 .01472 m
.31111 .01472 L
.33333 .01472 L
.33333 .01472 L
.31111 .01472 L
s
1 0 0 r
.33333 .01472 m
.33333 .01472 L
.35556 .01472 L
.35556 .01472 L
F
0 g
.33333 .01472 m
.33333 .01472 L
.35556 .01472 L
.35556 .01472 L
.33333 .01472 L
s
1 0 0 r
.35556 .01472 m
.35556 .01472 L
.37778 .01472 L
.37778 .01472 L
F
0 g
.35556 .01472 m
.35556 .01472 L
.37778 .01472 L
.37778 .01472 L
.35556 .01472 L
s
1 0 0 r
.37778 .01472 m
.37778 .01472 L
.4 .01472 L
.4 .01472 L
F
0 g
.37778 .01472 m
.37778 .01472 L
.4 .01472 L
.4 .01472 L
.37778 .01472 L
s
1 0 0 r
.4 .01472 m
.4 .01472 L
.42222 .01472 L
.42222 .01472 L
F
0 g
.4 .01472 m
.4 .01472 L
.42222 .01472 L
.42222 .01472 L
.4 .01472 L
s
1 0 0 r
.42222 .01472 m
.42222 .01472 L
.44444 .01472 L
.44444 .01472 L
F
0 g
.42222 .01472 m
.42222 .01472 L
.44444 .01472 L
.44444 .01472 L
.42222 .01472 L
s
1 0 0 r
.44444 .01472 m
.44444 .01472 L
.46667 .01472 L
.46667 .01472 L
F
0 g
.44444 .01472 m
.44444 .01472 L
.46667 .01472 L
.46667 .01472 L
.44444 .01472 L
s
1 0 0 r
.46667 .01472 m
.46667 .01472 L
.48889 .01472 L
.48889 .01472 L
F
0 g
.46667 .01472 m
.46667 .01472 L
.48889 .01472 L
.48889 .01472 L
.46667 .01472 L
s
1 0 0 r
.48889 .01472 m
.48889 .01472 L
.51111 .01472 L
.51111 .01472 L
F
0 g
.48889 .01472 m
.48889 .01472 L
.51111 .01472 L
.51111 .01472 L
.48889 .01472 L
s
1 0 0 r
.51111 .01472 m
.51111 .01472 L
.53333 .01472 L
.53333 .01472 L
F
0 g
.51111 .01472 m
.51111 .01472 L
.53333 .01472 L
.53333 .01472 L
.51111 .01472 L
s
1 0 0 r
.53333 .01472 m
.53333 .01472 L
.55556 .01472 L
.55556 .01472 L
F
0 g
.53333 .01472 m
.53333 .01472 L
.55556 .01472 L
.55556 .01472 L
.53333 .01472 L
s
1 0 0 r
.55556 .01472 m
.55556 .01472 L
.57778 .01472 L
.57778 .01472 L
F
0 g
.55556 .01472 m
.55556 .01472 L
.57778 .01472 L
.57778 .01472 L
.55556 .01472 L
s
1 0 0 r
.57778 .01472 m
.57778 .01472 L
.6 .01472 L
.6 .01472 L
F
0 g
.57778 .01472 m
.57778 .01472 L
.6 .01472 L
.6 .01472 L
.57778 .01472 L
s
1 0 0 r
.6 .01472 m
.6 .01472 L
.62222 .01472 L
.62222 .01472 L
F
0 g
.6 .01472 m
.6 .01472 L
.62222 .01472 L
.62222 .01472 L
.6 .01472 L
s
1 0 0 r
.62222 .01472 m
.62222 .01472 L
.64444 .01472 L
.64444 .01472 L
F
0 g
.62222 .01472 m
.62222 .01472 L
.64444 .01472 L
.64444 .01472 L
.62222 .01472 L
s
1 0 0 r
.64444 .01472 m
.64444 .01472 L
.66667 .01472 L
.66667 .01472 L
F
0 g
.64444 .01472 m
.64444 .01472 L
.66667 .01472 L
.66667 .01472 L
.64444 .01472 L
s
1 0 0 r
.66667 .01472 m
.66667 .01472 L
.68889 .01472 L
.68889 .01472 L
F
0 g
.66667 .01472 m
.66667 .01472 L
.68889 .01472 L
.68889 .01472 L
.66667 .01472 L
s
1 0 0 r
.68889 .01472 m
.68889 .01472 L
.71111 .01472 L
.71111 .01472 L
F
0 g
.68889 .01472 m
.68889 .01472 L
.71111 .01472 L
.71111 .01472 L
.68889 .01472 L
s
1 0 0 r
.71111 .01472 m
.71111 .01472 L
.73333 .01472 L
.73333 .01472 L
F
0 g
.71111 .01472 m
.71111 .01472 L
.73333 .01472 L
.73333 .01472 L
.71111 .01472 L
s
1 0 0 r
.73333 .01472 m
.73333 .01472 L
.75556 .01472 L
.75556 .01472 L
F
0 g
.73333 .01472 m
.73333 .01472 L
.75556 .01472 L
.75556 .01472 L
.73333 .01472 L
s
1 0 0 r
.75556 .01472 m
.75556 .01472 L
.77778 .01472 L
.77778 .01472 L
F
0 g
.75556 .01472 m
.75556 .01472 L
.77778 .01472 L
.77778 .01472 L
.75556 .01472 L
s
1 0 0 r
.77778 .01472 m
.77778 .01472 L
.8 .01472 L
.8 .01472 L
F
0 g
.77778 .01472 m
.77778 .01472 L
.8 .01472 L
.8 .01472 L
.77778 .01472 L
s
1 0 0 r
.8 .01472 m
.8 .01472 L
.82222 .01472 L
.82222 .01472 L
F
0 g
.8 .01472 m
.8 .01472 L
.82222 .01472 L
.82222 .01472 L
.8 .01472 L
s
1 0 0 r
.82222 .01472 m
.82222 .01472 L
.84444 .01472 L
.84444 .01472 L
F
0 g
.82222 .01472 m
.82222 .01472 L
.84444 .01472 L
.84444 .01472 L
.82222 .01472 L
s
1 0 0 r
.84444 .01472 m
.84444 .01472 L
.86667 .01472 L
.86667 .01472 L
F
0 g
.84444 .01472 m
.84444 .01472 L
.86667 .01472 L
.86667 .01472 L
.84444 .01472 L
s
1 0 0 r
.86667 .01472 m
.86667 .01472 L
.88889 .01472 L
.88889 .01472 L
F
0 g
.86667 .01472 m
.86667 .01472 L
.88889 .01472 L
.88889 .01472 L
.86667 .01472 L
s
1 0 0 r
.88889 .01472 m
.88889 .01472 L
.91111 .01472 L
.91111 .01472 L
F
0 g
.88889 .01472 m
.88889 .01472 L
.91111 .01472 L
.91111 .01472 L
.88889 .01472 L
s
1 0 0 r
.91111 .01472 m
.91111 .01472 L
.93333 .01472 L
.93333 .01472 L
F
0 g
.91111 .01472 m
.91111 .01472 L
.93333 .01472 L
.93333 .01472 L
.91111 .01472 L
s
1 0 0 r
.93333 .01472 m
.93333 .01472 L
.95556 .01472 L
.95556 .01472 L
F
0 g
.93333 .01472 m
.93333 .01472 L
.95556 .01472 L
.95556 .01472 L
.93333 .01472 L
s
1 0 0 r
.95556 .01472 m
.95556 .01472 L
.97778 .01472 L
.97778 .01472 L
F
0 g
.95556 .01472 m
.95556 .01472 L
.97778 .01472 L
.97778 .01472 L
.95556 .01472 L
s
1 0 0 r
.97778 .01472 m
.97778 .01472 L
1 .01472 L
1 .01472 L
F
0 g
.97778 .01472 m
.97778 .01472 L
1 .01472 L
1 .01472 L
.97778 .01472 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00@@3oool2000000@0oooo0P00
00030?ooo`050000003oool0oooo0?ooo`000000103oool500000080oooo0P00000K0?ooo`D00000
0P3oool2000000<0oooo00D000000?ooo`3oool0oooo000000040?ooo`D000000P3oool2000001T0
oooo1@0000020?ooo`800000103oool2000000<0oooo00D000000?ooo`3oool0oooo000000040?oo
o`D000000P3oool2000001T0oooo100000030?ooo`8000000`3oool01@000000oooo0?ooo`3oool0
000000@0oooo1@0000020?ooo`8000005@3oool00400oooo00@000000?ooo`3oool000002@3oool0
0`000000oooo000000070?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?oo
o`0J0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`0000001`3oool01@000000oooo0?oo
o`3oool000000080oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`070?ooo`040000
003oool0oooo000000<0oooo00<000000?ooo`0000001`3oool01@000000oooo0?ooo`3oool00000
0080oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool00000
00L0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0180oooo00130?oo
o`030000003oool0oooo00P0oooo00<000000?ooo`3oool01P3oool01@000000oooo0?ooo`3oool0
00000080oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00H0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo01P0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00H0oooo00D0
00000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`060?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000
oooo0?ooo`0B0?ooo`00@@3oool2000000X0oooo00<000000?ooo`0000001`3oool01@000000oooo
0?ooo`3oool000000080oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`080?ooo`03
0000003oool0000000L0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo
01P0oooo00<000000?ooo`3oool0203oool2000000@0oooo00<000000?ooo`0000001`3oool01@00
0000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`08
0?ooo`030000003oool0000000L0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003o
ool0oooo0180oooo00110?ooo`030000003oool0oooo00P0oooo00D000000?ooo`3oool0oooo0000
00060?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`0J0?ooo`030000
003oool0oooo00L0oooo00D000000?ooo`3oool0oooo000000060?ooo`050000003oool0oooo0?oo
o`0000000P3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo00P0oooo00<000000?oo
o`3oool00P3oool01@000000oooo0?ooo`3oool0000000H0oooo00D000000?ooo`3oool0oooo0000
00020?ooo`030000003oool0oooo01H0oooo00@000000?ooo`3oool00000203oool01@000000oooo
0?ooo`3oool0000000H0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo
0180oooo00110?ooo`<000004P3oool2000000@0oooo0P00000L0?ooo`8000004`3oool2000000@0
oooo0P00000J0?ooo`8000002P3oool3000000`0oooo0P0000040?ooo`8000006P3oool2000001<0
oooo0P0000040?ooo`8000005@3oool006H0oooo0`0000020?ooo`<00000<@3oool300000080oooo
0`00000e0?ooo`<000000P3oool3000002l0oooo0`0000020?ooo`<000001@3oool006L0oooo00L0
00000?ooo`3oool0oooo0000003oool000000380oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`0d0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0;P3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo00<0oooo001Q0?ooo`<000000`3oool010000000oooo
0?ooo`3oool3000002`0oooo0`0000030?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool0;P3oool3000000<0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0X0?ooo`<0
00000`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00<0oooo000K0?ooo`030000
003oool0oooo04T0oooo00D000000?ooo`3oool0oooo0000000d0?ooo`040000003oool0oooo0?oo
o`800000=`3oool010000000oooo0?ooo`3oool200000340oooo00@000000?ooo`3oool0oooo0P00
00060?ooo`006`3oool00`000000oooo0?ooo`180?ooo`800000103oool200000340oooo0P000003
0?ooo`<00000=@3oool2000000<0oooo0`00000_0?ooo`8000000`3oool3000000D0oooo000K0?oo
o`030000003oool0oooo0?l0oooo0`3oool001/0oooo00<000000?ooo`3oool0o`3oool30?ooo`00
6`3ooooo000000H00000000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0<03o
ool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool0=`3o
ool00`000000oooo0?ooo`0K0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0
oooo0300oooo00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`0g0?ooo`030000003oool0
oooo03L0oooo00<000000?ooo`3oool06`3oool001/0oooo00<000000?l0003o00000`3o00000`00
0000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0
oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<0
00000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l00003
0?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?oo
o`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`00
6`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o
0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o0000
0`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo
0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo
00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l0
00030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<00000
0?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?oo
o`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000
003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o
00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0
oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0
oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`00
0?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<0
00000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l
0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo00070?ooo`@0
00000`3oool2000000@0oooo0P0000050?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3o
ool0o03oool000L0oooo00<000000?ooo`3oool00`3oool010000000oooo0?ooo`0000020?ooo`04
0000003oool0oooo000000@0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?oo
o`00203oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo00000080oooo00@000000?oo
o`3oool00000103oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo00090?oo
o`050000003oool0oooo0?ooo`0000000P3oool010000000oooo0?ooo`0000020?ooo`030000003o
ool0oooo0080oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`001`3oool0
10000000oooo0?ooo`0000020?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool0
0000103oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo00080?ooo`800000
103oool2000000@0oooo0P0000050?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0
o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool0
0`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`00
00<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000
oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo
000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<00000
0?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l0
00030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3o
ool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3o
ool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000
o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`00
0000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0
oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<0
00000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l00003
0?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?oo
o`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`00
6`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o
0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o0000
0`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo
0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool000T0oooo
0`0000020?ooo`800000103oool2000000D0oooo00<000000?l0003o00000`3o00000`000000oooo
0?ooo`3l0?ooo`002P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo00000080
oooo00<000000?ooo`3oool00P3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0
oooo00070?ooo`D0000000D0oooo0000003oool0oooo000000020?ooo`040000003oool0oooo0000
00@0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`001`3oool010000000
oooo0?ooo`0000020?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool00000103o
ool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo00080?ooo`030000003oool0
00000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000040?ooo`030000
003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool000T0oooo0P0000030?ooo`800000103o
ool2000000D0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool0
0`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`00
00<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000
oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo
000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<00000
0?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l0
00030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3o
ool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3o
ool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000
o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`00
0000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0
oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<0
00000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l00003
0?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?oo
o`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`00
6`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o
0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o0000
0`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo
0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo
00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l0
00030?l000030000003oool0oooo0?`0oooo00070?ooo`<00000103oool2000000@0oooo0P000005
0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool000L0oooo00@000000?oo
o`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000@0oooo
00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`001`3oool010000000oooo0?oo
o`0000020?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool00000103oool00`00
0000o`000?l000030?l000030000003oool0oooo0?`0oooo00070?ooo`<000000`3oool010000000
oooo0?ooo`0000020?ooo`040000003oool0oooo000000@0oooo00<000000?l0003o00000`3o0000
0`000000oooo0?ooo`3l0?ooo`00203oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo
00000080oooo00@000000?ooo`3oool00000103oool00`000000o`000?l000030?l000030000003o
ool0oooo0?`0oooo00080?ooo`<000000`3oool2000000@0oooo0P0000050?ooo`030000003o0000
o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`00
0000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0
oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<0
00000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l00003
0?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?oo
o`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`00
6`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o
0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o0000
0`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo
0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo
00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l0
00030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<00000
0?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?oo
o`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000
003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o
00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0
oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0
oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`00
0?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<0
00000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l
0?ooo`00203oool2000000@0oooo0P0000040?ooo`8000001@3oool00`000000o`000?l000030?l0
00030000003oool0oooo0?`0oooo00070?ooo`040000003oool0oooo00000080oooo00@000000?oo
o`3oool000000P3oool010000000oooo0?ooo`0000040?ooo`030000003o0000o`0000<0o`0000<0
00000?ooo`3oool0o03oool000L0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?oo
o`0000020?ooo`040000003oool0oooo000000@0oooo00<000000?l0003o00000`3o00000`000000
oooo0?ooo`3l0?ooo`00203oool2000000<0oooo00@000000?ooo`3oool000000P3oool010000000
oooo0?ooo`0000040?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool000L0
oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0
oooo000000@0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`00203oool2
000000@0oooo0P0000040?ooo`8000001@3oool00`000000o`000?l000030?l000030000003oool0
oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0
oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`00
0?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<0
00000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l
0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`03
0000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o0000
0`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003o
ool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool0
01/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000
o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`00
00<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?oo
o`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?oo
o`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o
00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000
003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0o`0000<000000?ooo`3oool0o03o
ool001/0oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`006`3oool00`00
0000o`000?l000030?l000030000003oool0oooo0?`0oooo000K0?ooo`030000003o0000o`0000<0
o`0000<000000?ooo`3oool0o03oool001/0oooo00<000000?l0003o00000`3o00000`000000oooo
0?ooo`3l0?ooo`006`3oool00`000000o`000?l000030?l000030000003oool0oooo0?`0oooo0000
0`3oool000000000000300000080oooo0P0000040?ooo`800000103oool2000000D0oooo00<00000
0?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`000`3oool01@000000oooo0?ooo`3oool0
00000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`030000
003oool0oooo0080oooo00<000000?l0003o00000`3o00000`000000oooo0?ooo`3l0?ooo`000`3o
ool01@000000oooo0?ooo`3oool000000080oooo00@000000?ooo`3oool000000P3oool010000000
oooo0?ooo`0000020?ooo`030000003oool0oooo0080oooo1`00003n0?ooo`000`3oool01@000000
oooo0?ooo`3oool000000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`00
00020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0o`3oool30?ooo`000`3oool0
1@000000oooo0?ooo`3oool000000080oooo00@000000?ooo`3oool000000P3oool010000000oooo
0?ooo`0000020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0o`3oool30?ooo`00
0P3oool2000000@0oooo0P0000040?ooo`800000103oool2000000D0oooo00<000000?ooo`3oool0
o`3oool30?ooo`006`3oool00`000000oooo0?ooo`3o0?ooo`<0oooo003o0?ooob40oooo003o0?oo
ob40oooo0000\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-2.36028*^-16, -115.418, \
8.66217*^-18, 6.54064}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Histogram[
      Table[\(SBX[input, {{0, 1}, {0, 1}, {0, 1}}, 1]\)\[LeftDoubleBracket]1, 
          1\[RightDoubleBracket], {1000}]]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
4.03865e-018 2.94118 0.0147151 0.000957079 [
[.14706 .00222 -12 -9 ]
[.14706 .00222 12 0 ]
[.29412 .00222 -9 -9 ]
[.29412 .00222 9 0 ]
[.44118 .00222 -12 -9 ]
[.44118 .00222 12 0 ]
[.58824 .00222 -9 -9 ]
[.58824 .00222 9 0 ]
[.73529 .00222 -12 -9 ]
[.73529 .00222 12 0 ]
[.88235 .00222 -9 -9 ]
[.88235 .00222 9 0 ]
[-0.0125 .11042 -18 -4.5 ]
[-0.0125 .11042 0 4.5 ]
[-0.0125 .20613 -18 -4.5 ]
[-0.0125 .20613 0 4.5 ]
[-0.0125 .30184 -18 -4.5 ]
[-0.0125 .30184 0 4.5 ]
[-0.0125 .39755 -18 -4.5 ]
[-0.0125 .39755 0 4.5 ]
[-0.0125 .49325 -18 -4.5 ]
[-0.0125 .49325 0 4.5 ]
[-0.0125 .58896 -18 -4.5 ]
[-0.0125 .58896 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.14706 .01472 m
.14706 .02097 L
s
[(0.05)] .14706 .00222 0 1 Mshowa
.29412 .01472 m
.29412 .02097 L
s
[(0.1)] .29412 .00222 0 1 Mshowa
.44118 .01472 m
.44118 .02097 L
s
[(0.15)] .44118 .00222 0 1 Mshowa
.58824 .01472 m
.58824 .02097 L
s
[(0.2)] .58824 .00222 0 1 Mshowa
.73529 .01472 m
.73529 .02097 L
s
[(0.25)] .73529 .00222 0 1 Mshowa
.88235 .01472 m
.88235 .02097 L
s
[(0.3)] .88235 .00222 0 1 Mshowa
0 .01472 m
1 .01472 L
s
0 .11042 m
.00625 .11042 L
s
[(100)] -0.0125 .11042 1 0 Mshowa
0 .20613 m
.00625 .20613 L
s
[(200)] -0.0125 .20613 1 0 Mshowa
0 .30184 m
.00625 .30184 L
s
[(300)] -0.0125 .30184 1 0 Mshowa
0 .39755 m
.00625 .39755 L
s
[(400)] -0.0125 .39755 1 0 Mshowa
0 .49325 m
.00625 .49325 L
s
[(500)] -0.0125 .49325 1 0 Mshowa
0 .58896 m
.00625 .58896 L
s
[(600)] -0.0125 .58896 1 0 Mshowa
.125 Mabswid
0 .03386 m
.00375 .03386 L
s
0 .053 m
.00375 .053 L
s
0 .07214 m
.00375 .07214 L
s
0 .09128 m
.00375 .09128 L
s
0 .12956 m
.00375 .12956 L
s
0 .14871 m
.00375 .14871 L
s
0 .16785 m
.00375 .16785 L
s
0 .18699 m
.00375 .18699 L
s
0 .22527 m
.00375 .22527 L
s
0 .24441 m
.00375 .24441 L
s
0 .26356 m
.00375 .26356 L
s
0 .2827 m
.00375 .2827 L
s
0 .32098 m
.00375 .32098 L
s
0 .34012 m
.00375 .34012 L
s
0 .35926 m
.00375 .35926 L
s
0 .37841 m
.00375 .37841 L
s
0 .41669 m
.00375 .41669 L
s
0 .43583 m
.00375 .43583 L
s
0 .45497 m
.00375 .45497 L
s
0 .47411 m
.00375 .47411 L
s
0 .5124 m
.00375 .5124 L
s
0 .53154 m
.00375 .53154 L
s
0 .55068 m
.00375 .55068 L
s
0 .56982 m
.00375 .56982 L
s
0 .6081 m
.00375 .6081 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
1 0 0 r
0 .01472 m
0 .02716 L
.02941 .02716 L
.02941 .01472 L
F
0 g
.5 Mabswid
0 .01472 m
0 .02716 L
.02941 .02716 L
.02941 .01472 L
0 .01472 L
s
1 0 0 r
.02941 .01472 m
.02941 .02237 L
.05882 .02237 L
.05882 .01472 L
F
0 g
.02941 .01472 m
.02941 .02237 L
.05882 .02237 L
.05882 .01472 L
.02941 .01472 L
s
1 0 0 r
.05882 .01472 m
.05882 .02237 L
.08824 .02237 L
.08824 .01472 L
F
0 g
.05882 .01472 m
.05882 .02237 L
.08824 .02237 L
.08824 .01472 L
.05882 .01472 L
s
1 0 0 r
.08824 .01472 m
.08824 .02524 L
.11765 .02524 L
.11765 .01472 L
F
0 g
.08824 .01472 m
.08824 .02524 L
.11765 .02524 L
.11765 .01472 L
.08824 .01472 L
s
1 0 0 r
.11765 .01472 m
.11765 .03003 L
.14706 .03003 L
.14706 .01472 L
F
0 g
.11765 .01472 m
.11765 .03003 L
.14706 .03003 L
.14706 .01472 L
.11765 .01472 L
s
1 0 0 r
.14706 .01472 m
.14706 .02907 L
.17647 .02907 L
.17647 .01472 L
F
0 g
.14706 .01472 m
.14706 .02907 L
.17647 .02907 L
.17647 .01472 L
.14706 .01472 L
s
1 0 0 r
.17647 .01472 m
.17647 .0195 L
.20588 .0195 L
.20588 .01472 L
F
0 g
.17647 .01472 m
.17647 .0195 L
.20588 .0195 L
.20588 .01472 L
.17647 .01472 L
s
1 0 0 r
.20588 .01472 m
.20588 .03194 L
.23529 .03194 L
.23529 .01472 L
F
0 g
.20588 .01472 m
.20588 .03194 L
.23529 .03194 L
.23529 .01472 L
.20588 .01472 L
s
1 0 0 r
.23529 .01472 m
.23529 .03481 L
.26471 .03481 L
.26471 .01472 L
F
0 g
.23529 .01472 m
.23529 .03481 L
.26471 .03481 L
.26471 .01472 L
.23529 .01472 L
s
1 0 0 r
.26471 .01472 m
.26471 .03481 L
.29412 .03481 L
.29412 .01472 L
F
0 g
.26471 .01472 m
.26471 .03481 L
.29412 .03481 L
.29412 .01472 L
.26471 .01472 L
s
1 0 0 r
.29412 .01472 m
.29412 .60332 L
.32353 .60332 L
.32353 .01472 L
F
0 g
.29412 .01472 m
.29412 .60332 L
.32353 .60332 L
.32353 .01472 L
.29412 .01472 L
s
1 0 0 r
.32353 .01472 m
.32353 .02811 L
.35294 .02811 L
.35294 .01472 L
F
0 g
.32353 .01472 m
.32353 .02811 L
.35294 .02811 L
.35294 .01472 L
.32353 .01472 L
s
1 0 0 r
.35294 .01472 m
.35294 .03577 L
.38235 .03577 L
.38235 .01472 L
F
0 g
.35294 .01472 m
.35294 .03577 L
.38235 .03577 L
.38235 .01472 L
.35294 .01472 L
s
1 0 0 r
.38235 .01472 m
.38235 .03481 L
.41176 .03481 L
.41176 .01472 L
F
0 g
.38235 .01472 m
.38235 .03481 L
.41176 .03481 L
.41176 .01472 L
.38235 .01472 L
s
1 0 0 r
.41176 .01472 m
.41176 .03099 L
.44118 .03099 L
.44118 .01472 L
F
0 g
.41176 .01472 m
.41176 .03099 L
.44118 .03099 L
.44118 .01472 L
.41176 .01472 L
s
1 0 0 r
.44118 .01472 m
.44118 .03003 L
.47059 .03003 L
.47059 .01472 L
F
0 g
.44118 .01472 m
.44118 .03003 L
.47059 .03003 L
.47059 .01472 L
.44118 .01472 L
s
1 0 0 r
.47059 .01472 m
.47059 .03386 L
.5 .03386 L
.5 .01472 L
F
0 g
.47059 .01472 m
.47059 .03386 L
.5 .03386 L
.5 .01472 L
.47059 .01472 L
s
1 0 0 r
.5 .01472 m
.5 .03099 L
.52941 .03099 L
.52941 .01472 L
F
0 g
.5 .01472 m
.5 .03099 L
.52941 .03099 L
.52941 .01472 L
.5 .01472 L
s
1 0 0 r
.52941 .01472 m
.52941 .02811 L
.55882 .02811 L
.55882 .01472 L
F
0 g
.52941 .01472 m
.52941 .02811 L
.55882 .02811 L
.55882 .01472 L
.52941 .01472 L
s
1 0 0 r
.55882 .01472 m
.55882 .02907 L
.58824 .02907 L
.58824 .01472 L
F
0 g
.55882 .01472 m
.55882 .02907 L
.58824 .02907 L
.58824 .01472 L
.55882 .01472 L
s
1 0 0 r
.58824 .01472 m
.58824 .02237 L
.61765 .02237 L
.61765 .01472 L
F
0 g
.58824 .01472 m
.58824 .02237 L
.61765 .02237 L
.61765 .01472 L
.58824 .01472 L
s
1 0 0 r
.61765 .01472 m
.61765 .0195 L
.64706 .0195 L
.64706 .01472 L
F
0 g
.61765 .01472 m
.61765 .0195 L
.64706 .0195 L
.64706 .01472 L
.61765 .01472 L
s
1 0 0 r
.64706 .01472 m
.64706 .02046 L
.67647 .02046 L
.67647 .01472 L
F
0 g
.64706 .01472 m
.64706 .02046 L
.67647 .02046 L
.67647 .01472 L
.64706 .01472 L
s
1 0 0 r
.67647 .01472 m
.67647 .02524 L
.70588 .02524 L
.70588 .01472 L
F
0 g
.67647 .01472 m
.67647 .02524 L
.70588 .02524 L
.70588 .01472 L
.67647 .01472 L
s
1 0 0 r
.70588 .01472 m
.70588 .02716 L
.73529 .02716 L
.73529 .01472 L
F
0 g
.70588 .01472 m
.70588 .02716 L
.73529 .02716 L
.73529 .01472 L
.70588 .01472 L
s
1 0 0 r
.73529 .01472 m
.73529 .02524 L
.76471 .02524 L
.76471 .01472 L
F
0 g
.73529 .01472 m
.73529 .02524 L
.76471 .02524 L
.76471 .01472 L
.73529 .01472 L
s
1 0 0 r
.76471 .01472 m
.76471 .0262 L
.79412 .0262 L
.79412 .01472 L
F
0 g
.76471 .01472 m
.76471 .0262 L
.79412 .0262 L
.79412 .01472 L
.76471 .01472 L
s
1 0 0 r
.79412 .01472 m
.79412 .02333 L
.82353 .02333 L
.82353 .01472 L
F
0 g
.79412 .01472 m
.79412 .02333 L
.82353 .02333 L
.82353 .01472 L
.79412 .01472 L
s
1 0 0 r
.82353 .01472 m
.82353 .01854 L
.85294 .01854 L
.85294 .01472 L
F
0 g
.82353 .01472 m
.82353 .01854 L
.85294 .01854 L
.85294 .01472 L
.82353 .01472 L
s
1 0 0 r
.85294 .01472 m
.85294 .02141 L
.88235 .02141 L
.88235 .01472 L
F
0 g
.85294 .01472 m
.85294 .02141 L
.88235 .02141 L
.88235 .01472 L
.85294 .01472 L
s
1 0 0 r
.88235 .01472 m
.88235 .01759 L
.91176 .01759 L
.91176 .01472 L
F
0 g
.88235 .01472 m
.88235 .01759 L
.91176 .01759 L
.91176 .01472 L
.88235 .01472 L
s
1 0 0 r
.91176 .01472 m
.91176 .01663 L
.94118 .01663 L
.94118 .01472 L
F
0 g
.91176 .01472 m
.91176 .01663 L
.94118 .01663 L
.94118 .01472 L
.91176 .01472 L
s
1 0 0 r
.94118 .01472 m
.94118 .01472 L
.97059 .01472 L
.97059 .01472 L
F
0 g
.94118 .01472 m
.94118 .01472 L
.97059 .01472 L
.97059 .01472 L
.94118 .01472 L
s
1 0 0 r
.97059 .01472 m
.97059 .01663 L
1 .01663 L
1 .01472 L
F
0 g
.97059 .01472 m
.97059 .01663 L
1 .01663 L
1 .01472 L
.97059 .01472 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00<P3oool2000000@0oooo0P0000040?ooo`800000
103oool2000001H0oooo0P0000040?ooo`8000000`3oool5000001@0oooo0P0000040?ooo`800000
0`3oool500000080oooo0P00000F0?ooo`800000103oool2000000<0oooo1000000E0?ooo`800000
103oool2000000<0oooo100000030?ooo`8000005P3oool2000000@0oooo0P0000040?ooo`800000
6P3oool00340oooo00@000000?ooo`3oool00000203oool010000000oooo0?ooo`0000020?ooo`04
0000003oool0oooo000001@0oooo00@000000?ooo`3oool000002P3oool00`000000oooo0?ooo`0C
0?ooo`040000003oool0oooo000000X0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000
003oool0oooo0180oooo00@000000?ooo`3oool00000203oool00`000000oooo0?ooo`0E0?ooo`04
0000003oool0oooo000000P0oooo00<000000?ooo`3oool00`3oool010000000oooo0?ooo`00000D
0?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool000006@3oool00340oooo00@0
00000?ooo`3oool00000203oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo0180
oooo00@000000?ooo`3oool000002P3oool00`000000oooo0?ooo`0C0?ooo`040000003oool0oooo
000000X0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0B0?ooo`040000003oool0
oooo000000T0oooo00<000000?ooo`3oool0503oool010000000oooo0?ooo`0000090?ooo`030000
003oool0oooo00D0oooo00<000000?ooo`3oool04P3oool010000000oooo0?ooo`00000:0?ooo`03
0000003oool0oooo01P0oooo000a0?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3o
ool000000`3oool2000001D0oooo00@000000?ooo`3oool000002P3oool00`000000oooo0?ooo`0C
0?ooo`040000003oool0oooo000000X0oooo00<000000?ooo`3oool00P3oool2000001D0oooo00@0
00000?ooo`3oool000002P3oool00`000000oooo0?ooo`0C0?ooo`040000003oool0oooo000000X0
oooo00<000000?ooo`3oool00P3oool2000001D0oooo00@000000?ooo`3oool000002`3oool00`00
0000oooo0?ooo`0G0?ooo`00<@3oool010000000oooo0?ooo`0000080?ooo`040000003oool0oooo
000000<0oooo00<000000?ooo`3oool0503oool010000000oooo0?ooo`00000:0?ooo`030000003o
ool0oooo01<0oooo00@000000?ooo`3oool000002P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo01@0oooo00@000000?ooo`3oool00000203oool010000000oooo0?ooo`00000D0?oo
o`040000003oool0oooo000000P0oooo00@000000?ooo`3oool000000`3oool00`000000oooo0?oo
o`0D0?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool000006@3oool00380oooo
0P00000:0?ooo`800000103oool3000001D0oooo0P00000:0?ooo`8000005P3oool2000000X0oooo
0P0000040?ooo`<000005@3oool2000000X0oooo0P00000F0?ooo`8000002P3oool2000000@0oooo
0`00000E0?ooo`8000002P3oool2000001X0oooo003o0?ooob40oooo000E0?ooo`030000003oool0
oooo0?l0oooo2@3oool001D0oooo00<000000?ooo`3oool0o`3oool90?ooo`005@3oool00`000000
oooo0?ooo`3o0?ooo`T0oooo000E0?ooo`030000003oool0oooo0?l0oooo2@3oool001D0ooooo`00
000<000000005@3oool00`000000o`000?l000050?l000030000003o0000o`0000@0o`0000<00000
0?l0003o00001@3o00000`000000o`000?l000050?l000030000003o0000o`0000D0o`0000<00000
0?l0003o00001@3o0009000000H0o`0000<000000?l0003o00001@3o00000`000000o`000?l00005
0?l000030000003o0000o`0000D0o`0000<000000?l0003o00001@3o00000`000000o`000?l00004
0?l000030000003o0000o`0000D0o`0000<000000?l0003o00001@3o00000`000000o`000?l00005
0?l000030000003o0000o`0000D0o`0000<000000?l0003o0000103o00000`000000o`000?l00005
0?l000030000003o0000o`0000D0o`0000<000000?l0003o00001@3o0009000000L0o`0000<00000
0?l0003o0000103o00000`000000o`000?l000050?l000030000003o0000o`0000D0o`0000<00000
0?l0003o00001@3o00000`000000o`000?l000050?l000P000001`3o000A000000L0oooo2@000000
01D0oooo00<000000?l0003o00001@3o000@000000L0o`0000<000000?l0003o00001@3o00000`00
0000o`000?l000050?l000030000003oool0oooo00D0oooo00<000000?l0003o0000103o00000`00
0000o`000?l000050?l000030000003o0000o`0000D0o`0000<000000?l0003o00001@3o00000`00
0000o`000?l000050?l000030000003o0000o`0000@0o`0000<000000?l0003o00001@3o00000`00
0000o`000?l000050?l000030000003o0000o`0000D0o`0000<000000?l0003o00001@3o00000`00
0000o`000?l000040?l000030000003o0000o`0000D0o`0000<000000?l0003o00001@3o00090000
00L0oooo2@0000060?l000030000003o0000o`0000D0o`0000<000000?l0003o00001@3o00000`00
0000o`000?l000050?l000T000001P3oool900000200oooo000E0?ooo`T000003P3oool9000000L0
o`0000<000000?l0003o00001@3o00000`000000oooo0?ooo`050?ooo`030000003o0000o`0000@0
o`0000<000000?l0003o00001@3o00000`000000o`000?l000050?l000030000003o0000o`0000D0
o`0000<000000?l0003o00001@3o00000`000000o`000?l000040?l000030000003o0000o`0000D0
o`0000<000000?l0003o00001@3o00000`000000o`000?l000050?l000030000003o0000o`0000D0
o`0000<000000?l0003o0000103o00000`000000o`000?l000050?l000030000003o0000o`0000D0
o`0000<000000?ooo`3oool05@3ooolP000003L0oooo000E0?ooo`030000003oool0oooo01`0oooo
4@0000070?ooo`030000003o0000o`0000@0o`0000<000000?l0003o00001@3o00000`000000o`00
0?l000050?l000030000003o0000o`0000D0o`002@0000060?l000030000003o0000o`0000D0o`00
4@0000070?l001P00000KP3oool001D0oooo0P00000e0?oooaP000001`3o00000`000000oooo0?oo
o`050?ooo`030000003o0000o`0000@0o`002@00000?0?ooo`T00000Q@3oool001D0oooo00<00000
0?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo00D0oooo2000002U
0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?oo
o`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l00003
0000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o0000
1@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool2000004`0oooo00<000000?l0003o00001@3o
00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000
o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`00
0000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0
oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo
0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo0P00
001<0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<00000
0?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?oo
o`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?oo
o`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3o
ool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000
003oool0oooo0;80oooo000E0?ooo`800000C03oool00`000000o`000?l000050?l000030000003o
ool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o0000
0`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`00
00D0o`0000<000000?ooo`3oool0/P3oool000030?ooo`000000000000<000000P3oool2000000@0
oooo0P0000050?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000
oooo0?ooo`2b0?ooo`000`3oool01@000000oooo0?ooo`3oool000000080oooo00@000000?ooo`3o
ool000000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo04/0oooo00<000000?l0
003o00001@3o00000`000000oooo0?ooo`2b0?ooo`000`3oool01@000000oooo0?ooo`3oool00000
0080oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`020?ooo`800000C03oool0
0`000000o`000?l000050?l000030000003oool0oooo0;80oooo00030?ooo`050000003oool0oooo
0?ooo`0000000P3oool010000000oooo0?ooo`0000020?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo0003
0?ooo`050000003oool0oooo0?ooo`0000000P3oool010000000oooo0?ooo`0000020?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000
003oool0oooo0;80oooo00020?ooo`800000103oool2000000@0oooo0P0000050?ooo`030000003o
ool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool0
0`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool0
01D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo
0;80oooo000E0?ooo`800000C03oool00`000000o`000?l000050?l000030000003oool0oooo0;80
oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo
0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<0
00000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l00005
0?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0
003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool2000004`0oooo00<000000?l0003o
00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000
003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3o
ool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0
oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`00
0000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0
oooo0P00001<0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo
00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo
000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?oo
o`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<00000
0?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l0
00030000003oool0oooo0;80oooo000E0?ooo`800000C03oool00`000000o`000?l000050?l00003
0000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o0000
1@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o
0000o`0000D0o`0000<000000?ooo`3oool0/P3oool000030?ooo`0000000000008000000`3oool2
000000@0oooo0P0000050?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o0000
0`000000oooo0?ooo`2b0?ooo`0000<0oooo0000003oool0103oool010000000oooo0?ooo`000002
0?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l0
00050?l000030000003oool0oooo0;80oooo00020?ooo`030000003oool0oooo0080oooo00@00000
0?ooo`3oool000000P3oool010000000oooo0?ooo`0000040?ooo`800000C03oool00`000000o`00
0?l000050?l000030000003oool0oooo0;80oooo00030?ooo`050000003oool0oooo0?ooo`000000
0P3oool010000000oooo0?ooo`0000020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo00001@3oool00000
0?ooo`3oool000000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`000004
0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b
0?ooo`000P3oool2000000@0oooo0P0000040?ooo`8000001@3oool00`000000oooo0?ooo`1;0?oo
o`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3o
ool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`800000
C03oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000003o
ool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool0
0`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool0
01D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo
0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000
oooo0?ooo`2b0?ooo`005@3oool2000004`0oooo00<000000?l0003o00001@3o00000`000000oooo
0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<0
00000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l00005
0?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0
003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`03
0000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo0P00001<0?ooo`030000
003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3o
ool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0
oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`00
0000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0
oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80
oooo000E0?ooo`800000C03oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo
000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?oo
o`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<00000
0?ooo`3oool0/P3oool00080oooo0P0000040?ooo`800000103oool2000000D0oooo00<000000?oo
o`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo00001@3oool0
00000?ooo`3oool000000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`00
00040?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?oo
o`2b0?ooo`000`3oool01@000000oooo0?ooo`3oool000000080oooo00@000000?ooo`3oool00000
0P3oool00`000000oooo0?ooo`020?ooo`800000C03oool00`000000o`000?l000050?l000030000
003oool0oooo0;80oooo00040?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool0
00000P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo04/0oooo00<000000?l0003o
00001@3o00000`000000oooo0?ooo`2b0?ooo`0000D0oooo0000003oool0oooo000000020?ooo`04
0000003oool0oooo00000080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`1;
0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool00080oooo0P0000040?oo
o`800000103oool2000000D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l0
00030000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o
00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool2000004`0oooo00<000000?l0003o0000
1@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o
0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool0
0`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo
04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000
oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo
0P00001<0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<0
00000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E
0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b
0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?oo
o`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l00003
0000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o0000
1@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool2000004`0oooo00<000000?l0003o00001@3o
00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000
o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`00
0000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0
oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo
0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo0P00
001<0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<00000
0?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?oo
o`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?oo
o`000`3oool300000080oooo0P0000040?ooo`8000001@3oool00`000000oooo0?ooo`1;0?ooo`03
0000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool000@0oooo00@000000?ooo`3oool0
00000P3oool010000000oooo0?ooo`0000020?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo00000`3oool0
000000000003000000050?ooo`000000oooo0?ooo`0000000P3oool010000000oooo0?ooo`000004
0?ooo`800000C03oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo00001@3o
ool000000?ooo`3oool000000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?oo
o`0000040?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo
0?ooo`2b0?ooo`000P3oool00`000000oooo000000020?ooo`040000003oool0oooo00000080oooo
00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0
o`0000<000000?ooo`3oool0/P3oool000<0oooo0P0000030?ooo`800000103oool2000000D0oooo
00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo
000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?oo
o`2b0?ooo`005@3oool2000004`0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b
0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?oo
o`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l00003
0000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o0000
1@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o
0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo0P00001<0?ooo`030000003o0000
o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`00
0000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0
oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo
0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<0
00000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E
0?ooo`800000C03oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?oo
o`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?oo
o`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3o
ool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000
003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o
00000`000000oooo0?ooo`2b0?ooo`005@3oool2000004`0oooo00<000000?l0003o00001@3o0000
0`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`00
00D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000
o`000?l000050?l000030000003oool0oooo0;80oooo00020?ooo`800000103oool2000000@0oooo
0P0000050?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo
0?ooo`2b0?ooo`0000D0oooo0000003oool0oooo000000020?ooo`040000003oool0oooo00000080
oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`00
00D0o`0000<000000?ooo`3oool0/P3oool000@0oooo00@000000?ooo`3oool000000P3oool01000
0000oooo0?ooo`0000020?ooo`030000003oool0oooo0080oooo0P00001<0?ooo`030000003o0000
o`0000D0o`0000<000000?ooo`3oool0/P3oool00080oooo0P0000030?ooo`040000003oool0oooo
00000080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`1;0?ooo`030000003o
0000o`0000D0o`0000<000000?ooo`3oool0/P3oool00080oooo00<000000?ooo`3oool00P3oool0
10000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0
B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo00020?ooo`<000000`3o
ool2000000@0oooo0P0000050?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o
00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000
o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo0P00001<0?ooo`030000003o0000o`00
00D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000
o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo
00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?oo
o`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<00000
0?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?oo
o`800000C03oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`03
0000003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`00
5@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0
/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003o
ool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<000000?l0003o00001@3o0000
0`000000oooo0?ooo`2b0?ooo`005@3oool2000004`0oooo00<000000?l0003o00001@3o00000`00
0000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0
o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?ooo`3oool0B`3oool00`000000o`00
0?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000003oool0oooo04/0oooo00<0
00000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3oool00`000000oooo0?ooo`1;
0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool001D0oooo00<000000?oo
o`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`80
0000C03oool00`000000o`000?l000050?l000030000003oool0oooo0;80oooo000E0?ooo`030000
003oool0oooo04/0oooo00<000000?l0003o00001@3o00000`000000oooo0?ooo`2b0?ooo`005@3o
ool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3o
ool000040?ooo`0000000000000000@0oooo0P0000040?ooo`8000001@3oool00`000000oooo0?oo
o`1;0?ooo`030000003o0000o`0000D0o`0000<000000?ooo`3oool0/P3oool000050?ooo`000000
oooo0?ooo`0000000P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000@0
oooo00<000000?ooo`3oool0B`3oool00`000000o`000?l000050?l000030000003oool0oooo0;80
oooo00001@3oool000000?ooo`3oool000000080oooo00@000000?ooo`3oool000000P3oool01000
0000oooo0?ooo`0000040?ooo`800000C03oool00`000000o`000?l000050?l000030000003oool0
oooo0;80oooo0000103oool000000000000000030?ooo`040000003oool0oooo00000080oooo00@0
00000?ooo`3oool00000103oool00`000000oooo0?ooo`1;0?ooo`030000003o0000o`0000D0o`00
00<000000?ooo`3oool0/P3oool00080oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`0000020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0B`3oool00`000000
o`000?l000050?l000030000003oool0oooo0;80oooo00020?ooo`<000000`3oool2000000@0oooo
0P0000050?ooo`030000003oool0oooo04/0oooo2@00002d0?ooo`005@3oool00`000000oooo0?oo
o`3o0?ooo`T0oooo000E0?ooo`800000o`3oool:0?ooo`005@3oool00`000000oooo0?ooo`3o0?oo
o`T0oooo000E0?ooo`030000003oool0oooo0?l0oooo2@3oool00?l0oooo8@3oool00?l0oooo8@3o
ool00001\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-0.0272872, -56.9675, \
0.00127975, 3.93278}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Transpose[input]\)], "Input"],

Cell[BoxData[
    \({{0.1`, 0.6`}, {0.5`, 0.14`}, {0.86`, 0.654`}}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(SBX[{input\[LeftDoubleBracket]1, 1\[RightDoubleBracket], 
        input\[LeftDoubleBracket]2, 1\[RightDoubleBracket]}, 
      limits]\)], "Input"],

Cell[BoxData[
    \(0.9552582157193911`\)], "Print"],

Cell[BoxData[
    \(0.35`\)], "Print"],

Cell[BoxData[
    \(0.11118544607015221`\)], "Print"],

Cell[BoxData[
    \(0.5888145539298477`\)], "Print"],

Cell[BoxData[
    \({0.5888145539298477`, 0.11118544607015221`}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Crossover[datalist_, crosslist_, limits_, betafactor_] := 
      Block[{a = {}, b, c, pos, c1last, c2last, c1new, c2new, 
          lengths}, \[IndentingNewLine]If[
          Length[crosslist] > 0, \[IndentingNewLine]a = 
            RandomUnion[Length[crosslist]]; \[IndentingNewLine]c = 
            Partition[\((\(datalist\[LeftDoubleBracket]#\[RightDoubleBracket] \
&\) /@ a)\), 2]; \[IndentingNewLine]Transpose[
            Flatten[\(SBX[#, limits, betafactor] &\) /@ c, 
              1]], {}]]\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(reinsertionmethods = {Global`Elitist, Global`Uniform}\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \({Global`Elitist, Global`Uniform}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(ReinsertPure[olddata_, newdata_, positions_, Null___] := 
      Block[{a}, 
        a = olddata; \[IndentingNewLine]\(\((a = 
                ReplacePart[
                  a, #\[LeftDoubleBracket]2\[RightDoubleBracket], #\
\[LeftDoubleBracket]1\[RightDoubleBracket]])\) &\) /@ 
          Transpose[{positions, newdata}]; a]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ReinsertFitness[olddata_, newdata_, null_, start_, end_] /; 
        Length[newdata] \[GreaterEqual] Length[olddata] := 
      Block[{a, random = RandomUnion[Length[olddata]], bnewdata = newdata, 
          fitdata}, \[IndentingNewLine]a = 
          olddata; \[IndentingNewLine]fitdata = \(FitnessValue[#] &\) /@ 
            bnewdata; \[IndentingNewLine] (*Print["\<Fitdata offspring = \>", 
            fitdata]; \[IndentingNewLine]Print["\<Fitdata ordered = \>", 
            Ordering[
              fitdata, \(-Length[
                  olddata]\)]];*) \[IndentingNewLine]positions = 
          Ordering[
            fitdata, \(-Length[olddata]\)]; \[IndentingNewLine]\(\((a = 
                ReplacePart[
                  a, #\[LeftDoubleBracket]2\[RightDoubleBracket], #\
\[LeftDoubleBracket]1\[RightDoubleBracket]])\) &\) /@ 
          Transpose[{random, 
              newdata\[LeftDoubleBracket]
                positions\[RightDoubleBracket]}]; \[IndentingNewLine]a]\)], \
"Input",
  InitializationCell->True],

Cell[BoxData[
    \(ReinsertFitness[olddata_, newdata_, positions_, start_, end_] /; 
        Length[newdata] < 
          Length[olddata] := \[IndentingNewLine]\(( (*\(Print["\<Not enough \
offspring, using Reinsertion Method \[Rule] Elitist\>"];\)\
*) \[IndentingNewLine]ReinsertElitist[olddata, newdata])\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ReinsertUniform[olddata_, newdata_, Null___] := 
      Block[{a, 
          positions = 
            RandomUnion[Length[olddata], 
              Length[newdata]]}, \[IndentingNewLine] (*\(Print["\<Uniform \
Positions = \>", positions];\)*) \[IndentingNewLine]a = 
          olddata; \[IndentingNewLine]\(\((a = 
                ReplacePart[
                  a, #\[LeftDoubleBracket]2\[RightDoubleBracket], #\
\[LeftDoubleBracket]1\[RightDoubleBracket]])\) &\) /@ 
          Transpose[{positions, newdata}]; \[IndentingNewLine]a]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(ReinsertElitist[olddata_, newdata_, Null___] := 
      Block[{a, random = RandomUnion[Length[newdata]], 
          positions}, \[IndentingNewLine]a = 
          olddata; \[IndentingNewLine]positions = \(\(Ordering[
                fitdata\[LeftDoubleBracket]\(-1\)\[RightDoubleBracket]]\)\
\[LeftDoubleBracket]Range[
                Length[newdata]]\[RightDoubleBracket]\)\[LeftDoubleBracket]
            random\[RightDoubleBracket]; \[IndentingNewLine]\(\((a = 
                ReplacePart[
                  a, #\[LeftDoubleBracket]2\[RightDoubleBracket], #\
\[LeftDoubleBracket]1\[RightDoubleBracket]])\) &\) /@ 
          Transpose[{positions, newdata}]; \[IndentingNewLine]a]\)], "Input",
  InitializationCell->True],

Cell["\<\
Mutate[list_,lengths_,numbers_,mr_]:=Block[{a,b,c,number},
    If[Head[lengths]===List,number=Plus@@lengths,number=lengths*numbers];
    a=Flatten[list];
    b=Flatten[Position[Table[Random[Real,{0,1}],{Length[Flatten[a]]}],_?(#<mr&\
)]];
    (*If[Length[b]>0,Print[\"Mutate!\"];];*)
    If[a\[LeftDoubleBracket]#\[RightDoubleBracket]===1,a=ReplacePart[a,0,#],a=\
ReplacePart[a,1,#]]&/@b;
    Partition[a,number]
    ]\
\>", "Text",
  InitializationCell->True],

Cell[BoxData[
    \(Mutate[list_, start_List, end_List, mr_] := 
      Block[{a, b}, \[IndentingNewLine]startend = 
          Flatten[Table[Transpose[{start, end}], {Length[Flatten[list]]}], 
            1]; \[IndentingNewLine]a = Flatten[list]; \[IndentingNewLine]b = 
          Flatten[Position[
              Table[Random[
                  Real, {0, 1}], {Length[
                    Flatten[a]]}], _?\((# < 
                      mr &)\)]]; \[IndentingNewLine]\(\((a = 
                ReplacePart[a, 
                  Random[Real, 
                    startend\[LeftDoubleBracket]#\[RightDoubleBracket]], \
#])\) &\) /@ b; \[IndentingNewLine]Partition[a, 
          Length[list\[LeftDoubleBracket]1\[RightDoubleBracket]]]\
\[IndentingNewLine]]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Statistics`ContinuousDistributions`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Mutate[list_, start_List, end_List, mr_] := 
      Block[{a, b}, \[IndentingNewLine]startend = 
          Flatten[Table[Transpose[{start, end}], {Length[Flatten[list]]}], 
            1]; \[IndentingNewLine]a = Flatten[list]; \[IndentingNewLine]b = 
          Table[Random[
              Real, {0, 1}], {Length[
                Flatten[a]]}]; \[IndentingNewLine]f = \(Block[{a, b, 
                  c = #\[LeftDoubleBracket]1\[RightDoubleBracket], 
                  d = #\[LeftDoubleBracket]2\[RightDoubleBracket], 
                  e = #\[LeftDoubleBracket]3\[RightDoubleBracket], 
                  f = If[Random[Integer, {0, 1}] === 0, \(-1\), 
                      1]}, \[IndentingNewLine]If[
                  d < mr, \[IndentingNewLine]While[\(c + f*# > 
                            e\[LeftDoubleBracket]2\[RightDoubleBracket] || 
                          c + f*# < 
                            e\[LeftDoubleBracket]1\[RightDoubleBracket] &\)[
                      a = \(If[
                              Random[Integer, {0, 1}] === 0, \(-1\)*#, #] &\)[
                          Random[
                            WeibullDistribution[0.8, 
                              Max[e]*2]]]]]; \[IndentingNewLine]c + 
                    f*a, \[IndentingNewLine]c]] &\) /@ 
            MapThread[
              List, {a, b, 
                startend}]; \[IndentingNewLine]f\[IndentingNewLine]]\)], \
"Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Mutate[{0.1}, {0}, {10}, 1]\)], "Input"],

Cell[BoxData[
    \({0.4422778806480021`}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Histogram[
      Table[\(Mutate[{0.1}, {\(-10\)}, {10}, 
            1]\)\[LeftDoubleBracket]1\[RightDoubleBracket], {10000}]]\)], \
"Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.05 0.0147151 0.00179452 [
[.25 .00222 -6 -9 ]
[.25 .00222 6 0 ]
[.5 .00222 -3 -9 ]
[.5 .00222 3 0 ]
[.75 .00222 -3 -9 ]
[.75 .00222 3 0 ]
[-0.0125 .10444 -12 -4.5 ]
[-0.0125 .10444 0 4.5 ]
[-0.0125 .19417 -18 -4.5 ]
[-0.0125 .19417 0 4.5 ]
[-0.0125 .28389 -18 -4.5 ]
[-0.0125 .28389 0 4.5 ]
[-0.0125 .37362 -18 -4.5 ]
[-0.0125 .37362 0 4.5 ]
[-0.0125 .46335 -18 -4.5 ]
[-0.0125 .46335 0 4.5 ]
[-0.0125 .55307 -18 -4.5 ]
[-0.0125 .55307 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.25 .01472 m
.25 .02097 L
s
[(-5)] .25 .00222 0 1 Mshowa
.5 .01472 m
.5 .02097 L
s
[(0)] .5 .00222 0 1 Mshowa
.75 .01472 m
.75 .02097 L
s
[(5)] .75 .00222 0 1 Mshowa
0 .01472 m
1 .01472 L
s
0 .10444 m
.00625 .10444 L
s
[(50)] -0.0125 .10444 1 0 Mshowa
0 .19417 m
.00625 .19417 L
s
[(100)] -0.0125 .19417 1 0 Mshowa
0 .28389 m
.00625 .28389 L
s
[(150)] -0.0125 .28389 1 0 Mshowa
0 .37362 m
.00625 .37362 L
s
[(200)] -0.0125 .37362 1 0 Mshowa
0 .46335 m
.00625 .46335 L
s
[(250)] -0.0125 .46335 1 0 Mshowa
0 .55307 m
.00625 .55307 L
s
[(300)] -0.0125 .55307 1 0 Mshowa
.125 Mabswid
0 .03266 m
.00375 .03266 L
s
0 .05061 m
.00375 .05061 L
s
0 .06855 m
.00375 .06855 L
s
0 .0865 m
.00375 .0865 L
s
0 .12239 m
.00375 .12239 L
s
0 .14033 m
.00375 .14033 L
s
0 .15828 m
.00375 .15828 L
s
0 .17622 m
.00375 .17622 L
s
0 .21211 m
.00375 .21211 L
s
0 .23006 m
.00375 .23006 L
s
0 .248 m
.00375 .248 L
s
0 .26595 m
.00375 .26595 L
s
0 .30184 m
.00375 .30184 L
s
0 .31978 m
.00375 .31978 L
s
0 .33773 m
.00375 .33773 L
s
0 .35567 m
.00375 .35567 L
s
0 .39157 m
.00375 .39157 L
s
0 .40951 m
.00375 .40951 L
s
0 .42746 m
.00375 .42746 L
s
0 .4454 m
.00375 .4454 L
s
0 .48129 m
.00375 .48129 L
s
0 .49924 m
.00375 .49924 L
s
0 .51718 m
.00375 .51718 L
s
0 .53513 m
.00375 .53513 L
s
0 .57102 m
.00375 .57102 L
s
0 .58896 m
.00375 .58896 L
s
0 .60691 m
.00375 .60691 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
1 0 0 r
0 .01472 m
0 .14033 L
.01 .14033 L
.01 .01472 L
F
0 g
.5 Mabswid
0 .01472 m
0 .14033 L
.01 .14033 L
.01 .01472 L
0 .01472 L
s
1 0 0 r
.01 .01472 m
.01 .11521 L
.02 .11521 L
.02 .01472 L
F
0 g
.01 .01472 m
.01 .11521 L
.02 .11521 L
.02 .01472 L
.01 .01472 L
s
1 0 0 r
.02 .01472 m
.02 .13136 L
.03 .13136 L
.03 .01472 L
F
0 g
.02 .01472 m
.02 .13136 L
.03 .13136 L
.03 .01472 L
.02 .01472 L
s
1 0 0 r
.03 .01472 m
.03 .13854 L
.04 .13854 L
.04 .01472 L
F
0 g
.03 .01472 m
.03 .13854 L
.04 .13854 L
.04 .01472 L
.03 .01472 L
s
1 0 0 r
.04 .01472 m
.04 .10265 L
.05 .10265 L
.05 .01472 L
F
0 g
.04 .01472 m
.04 .10265 L
.05 .10265 L
.05 .01472 L
.04 .01472 L
s
1 0 0 r
.05 .01472 m
.05 .12956 L
.06 .12956 L
.06 .01472 L
F
0 g
.05 .01472 m
.05 .12956 L
.06 .12956 L
.06 .01472 L
.05 .01472 L
s
1 0 0 r
.06 .01472 m
.06 .13315 L
.07 .13315 L
.07 .01472 L
F
0 g
.06 .01472 m
.06 .13315 L
.07 .13315 L
.07 .01472 L
.06 .01472 L
s
1 0 0 r
.07 .01472 m
.07 .15289 L
.08 .15289 L
.08 .01472 L
F
0 g
.07 .01472 m
.07 .15289 L
.08 .15289 L
.08 .01472 L
.07 .01472 L
s
1 0 0 r
.08 .01472 m
.08 .14751 L
.09 .14751 L
.09 .01472 L
F
0 g
.08 .01472 m
.08 .14751 L
.09 .14751 L
.09 .01472 L
.08 .01472 L
s
1 0 0 r
.09 .01472 m
.09 .12418 L
.1 .12418 L
.1 .01472 L
F
0 g
.09 .01472 m
.09 .12418 L
.1 .12418 L
.1 .01472 L
.09 .01472 L
s
1 0 0 r
.1 .01472 m
.1 .13495 L
.11 .13495 L
.11 .01472 L
F
0 g
.1 .01472 m
.1 .13495 L
.11 .13495 L
.11 .01472 L
.1 .01472 L
s
1 0 0 r
.11 .01472 m
.11 .117 L
.12 .117 L
.12 .01472 L
F
0 g
.11 .01472 m
.11 .117 L
.12 .117 L
.12 .01472 L
.11 .01472 L
s
1 0 0 r
.12 .01472 m
.12 .13136 L
.13 .13136 L
.13 .01472 L
F
0 g
.12 .01472 m
.12 .13136 L
.13 .13136 L
.13 .01472 L
.12 .01472 L
s
1 0 0 r
.13 .01472 m
.13 .12956 L
.14 .12956 L
.14 .01472 L
F
0 g
.13 .01472 m
.13 .12956 L
.14 .12956 L
.14 .01472 L
.13 .01472 L
s
1 0 0 r
.14 .01472 m
.14 .13495 L
.15 .13495 L
.15 .01472 L
F
0 g
.14 .01472 m
.14 .13495 L
.15 .13495 L
.15 .01472 L
.14 .01472 L
s
1 0 0 r
.15 .01472 m
.15 .16007 L
.16 .16007 L
.16 .01472 L
F
0 g
.15 .01472 m
.15 .16007 L
.16 .16007 L
.16 .01472 L
.15 .01472 L
s
1 0 0 r
.16 .01472 m
.16 .16007 L
.17 .16007 L
.17 .01472 L
F
0 g
.16 .01472 m
.16 .16007 L
.17 .16007 L
.17 .01472 L
.16 .01472 L
s
1 0 0 r
.17 .01472 m
.17 .14392 L
.18 .14392 L
.18 .01472 L
F
0 g
.17 .01472 m
.17 .14392 L
.18 .14392 L
.18 .01472 L
.17 .01472 L
s
1 0 0 r
.18 .01472 m
.18 .17084 L
.19 .17084 L
.19 .01472 L
F
0 g
.18 .01472 m
.18 .17084 L
.19 .17084 L
.19 .01472 L
.18 .01472 L
s
1 0 0 r
.19 .01472 m
.19 .14033 L
.2 .14033 L
.2 .01472 L
F
0 g
.19 .01472 m
.19 .14033 L
.2 .14033 L
.2 .01472 L
.19 .01472 L
s
1 0 0 r
.2 .01472 m
.2 .12956 L
.21 .12956 L
.21 .01472 L
F
0 g
.2 .01472 m
.2 .12956 L
.21 .12956 L
.21 .01472 L
.2 .01472 L
s
1 0 0 r
.21 .01472 m
.21 .20135 L
.22 .20135 L
.22 .01472 L
F
0 g
.21 .01472 m
.21 .20135 L
.22 .20135 L
.22 .01472 L
.21 .01472 L
s
1 0 0 r
.22 .01472 m
.22 .16187 L
.23 .16187 L
.23 .01472 L
F
0 g
.22 .01472 m
.22 .16187 L
.23 .16187 L
.23 .01472 L
.22 .01472 L
s
1 0 0 r
.23 .01472 m
.23 .17443 L
.24 .17443 L
.24 .01472 L
F
0 g
.23 .01472 m
.23 .17443 L
.24 .17443 L
.24 .01472 L
.23 .01472 L
s
1 0 0 r
.24 .01472 m
.24 .18519 L
.25 .18519 L
.25 .01472 L
F
0 g
.24 .01472 m
.24 .18519 L
.25 .18519 L
.25 .01472 L
.24 .01472 L
s
1 0 0 r
.25 .01472 m
.25 .15289 L
.26 .15289 L
.26 .01472 L
F
0 g
.25 .01472 m
.25 .15289 L
.26 .15289 L
.26 .01472 L
.25 .01472 L
s
1 0 0 r
.26 .01472 m
.26 .18878 L
.27 .18878 L
.27 .01472 L
F
0 g
.26 .01472 m
.26 .18878 L
.27 .18878 L
.27 .01472 L
.26 .01472 L
s
1 0 0 r
.27 .01472 m
.27 .21032 L
.28 .21032 L
.28 .01472 L
F
0 g
.27 .01472 m
.27 .21032 L
.28 .21032 L
.28 .01472 L
.27 .01472 L
s
1 0 0 r
.28 .01472 m
.28 .16725 L
.29 .16725 L
.29 .01472 L
F
0 g
.28 .01472 m
.28 .16725 L
.29 .16725 L
.29 .01472 L
.28 .01472 L
s
1 0 0 r
.29 .01472 m
.29 .21032 L
.3 .21032 L
.3 .01472 L
F
0 g
.29 .01472 m
.29 .21032 L
.3 .21032 L
.3 .01472 L
.29 .01472 L
s
1 0 0 r
.3 .01472 m
.3 .17622 L
.31 .17622 L
.31 .01472 L
F
0 g
.3 .01472 m
.3 .17622 L
.31 .17622 L
.31 .01472 L
.3 .01472 L
s
1 0 0 r
.31 .01472 m
.31 .19417 L
.32 .19417 L
.32 .01472 L
F
0 g
.31 .01472 m
.31 .19417 L
.32 .19417 L
.32 .01472 L
.31 .01472 L
s
1 0 0 r
.32 .01472 m
.32 .18519 L
.33 .18519 L
.33 .01472 L
F
0 g
.32 .01472 m
.32 .18519 L
.33 .18519 L
.33 .01472 L
.32 .01472 L
s
1 0 0 r
.33 .01472 m
.33 .20314 L
.34 .20314 L
.34 .01472 L
F
0 g
.33 .01472 m
.33 .20314 L
.34 .20314 L
.34 .01472 L
.33 .01472 L
s
1 0 0 r
.34 .01472 m
.34 .2175 L
.35 .2175 L
.35 .01472 L
F
0 g
.34 .01472 m
.34 .2175 L
.35 .2175 L
.35 .01472 L
.34 .01472 L
s
1 0 0 r
.35 .01472 m
.35 .27851 L
.36 .27851 L
.36 .01472 L
F
0 g
.35 .01472 m
.35 .27851 L
.36 .27851 L
.36 .01472 L
.35 .01472 L
s
1 0 0 r
.36 .01472 m
.36 .22288 L
.37 .22288 L
.37 .01472 L
F
0 g
.36 .01472 m
.36 .22288 L
.37 .22288 L
.37 .01472 L
.36 .01472 L
s
1 0 0 r
.37 .01472 m
.37 .21211 L
.38 .21211 L
.38 .01472 L
F
0 g
.37 .01472 m
.37 .21211 L
.38 .21211 L
.38 .01472 L
.37 .01472 L
s
1 0 0 r
.38 .01472 m
.38 .22647 L
.39 .22647 L
.39 .01472 L
F
0 g
.38 .01472 m
.38 .22647 L
.39 .22647 L
.39 .01472 L
.38 .01472 L
s
1 0 0 r
.39 .01472 m
.39 .25159 L
.4 .25159 L
.4 .01472 L
F
0 g
.39 .01472 m
.39 .25159 L
.4 .25159 L
.4 .01472 L
.39 .01472 L
s
1 0 0 r
.4 .01472 m
.4 .21929 L
.41 .21929 L
.41 .01472 L
F
0 g
.4 .01472 m
.4 .21929 L
.41 .21929 L
.41 .01472 L
.4 .01472 L
s
1 0 0 r
.41 .01472 m
.41 .22288 L
.42 .22288 L
.42 .01472 L
F
0 g
.41 .01472 m
.41 .22288 L
.42 .22288 L
.42 .01472 L
.41 .01472 L
s
1 0 0 r
.42 .01472 m
.42 .25877 L
.43 .25877 L
.43 .01472 L
F
0 g
.42 .01472 m
.42 .25877 L
.43 .25877 L
.43 .01472 L
.42 .01472 L
s
1 0 0 r
.43 .01472 m
.43 .22467 L
.44 .22467 L
.44 .01472 L
F
0 g
.43 .01472 m
.43 .22467 L
.44 .22467 L
.44 .01472 L
.43 .01472 L
s
1 0 0 r
.44 .01472 m
.44 .29107 L
.45 .29107 L
.45 .01472 L
F
0 g
.44 .01472 m
.44 .29107 L
.45 .29107 L
.45 .01472 L
.44 .01472 L
s
1 0 0 r
.45 .01472 m
.45 .26954 L
.46 .26954 L
.46 .01472 L
F
0 g
.45 .01472 m
.45 .26954 L
.46 .26954 L
.46 .01472 L
.45 .01472 L
s
1 0 0 r
.46 .01472 m
.46 .33952 L
.47 .33952 L
.47 .01472 L
F
0 g
.46 .01472 m
.46 .33952 L
.47 .33952 L
.47 .01472 L
.46 .01472 L
s
1 0 0 r
.47 .01472 m
.47 .34491 L
.48 .34491 L
.48 .01472 L
F
0 g
.47 .01472 m
.47 .34491 L
.48 .34491 L
.48 .01472 L
.47 .01472 L
s
1 0 0 r
.48 .01472 m
.48 .36285 L
.49 .36285 L
.49 .01472 L
F
0 g
.48 .01472 m
.48 .36285 L
.49 .36285 L
.49 .01472 L
.48 .01472 L
s
1 0 0 r
.49 .01472 m
.49 .41489 L
.5 .41489 L
.5 .01472 L
F
0 g
.49 .01472 m
.49 .41489 L
.5 .41489 L
.5 .01472 L
.49 .01472 L
s
1 0 0 r
.5 .01472 m
.5 .60332 L
.51 .60332 L
.51 .01472 L
F
0 g
.5 .01472 m
.5 .60332 L
.51 .60332 L
.51 .01472 L
.5 .01472 L
s
1 0 0 r
.51 .01472 m
.51 .37721 L
.52 .37721 L
.52 .01472 L
F
0 g
.51 .01472 m
.51 .37721 L
.52 .37721 L
.52 .01472 L
.51 .01472 L
s
1 0 0 r
.52 .01472 m
.52 .38798 L
.53 .38798 L
.53 .01472 L
F
0 g
.52 .01472 m
.52 .38798 L
.53 .38798 L
.53 .01472 L
.52 .01472 L
s
1 0 0 r
.53 .01472 m
.53 .30902 L
.54 .30902 L
.54 .01472 L
F
0 g
.53 .01472 m
.53 .30902 L
.54 .30902 L
.54 .01472 L
.53 .01472 L
s
1 0 0 r
.54 .01472 m
.54 .27851 L
.55 .27851 L
.55 .01472 L
F
0 g
.54 .01472 m
.54 .27851 L
.55 .27851 L
.55 .01472 L
.54 .01472 L
s
1 0 0 r
.55 .01472 m
.55 .30363 L
.56 .30363 L
.56 .01472 L
F
0 g
.55 .01472 m
.55 .30363 L
.56 .30363 L
.56 .01472 L
.55 .01472 L
s
1 0 0 r
.56 .01472 m
.56 .26415 L
.57 .26415 L
.57 .01472 L
F
0 g
.56 .01472 m
.56 .26415 L
.57 .26415 L
.57 .01472 L
.56 .01472 L
s
1 0 0 r
.57 .01472 m
.57 .2821 L
.58 .2821 L
.58 .01472 L
F
0 g
.57 .01472 m
.57 .2821 L
.58 .2821 L
.58 .01472 L
.57 .01472 L
s
1 0 0 r
.58 .01472 m
.58 .26774 L
.59 .26774 L
.59 .01472 L
F
0 g
.58 .01472 m
.58 .26774 L
.59 .26774 L
.59 .01472 L
.58 .01472 L
s
1 0 0 r
.59 .01472 m
.59 .23724 L
.6 .23724 L
.6 .01472 L
F
0 g
.59 .01472 m
.59 .23724 L
.6 .23724 L
.6 .01472 L
.59 .01472 L
s
1 0 0 r
.6 .01472 m
.6 .21391 L
.61 .21391 L
.61 .01472 L
F
0 g
.6 .01472 m
.6 .21391 L
.61 .21391 L
.61 .01472 L
.6 .01472 L
s
1 0 0 r
.61 .01472 m
.61 .20493 L
.62 .20493 L
.62 .01472 L
F
0 g
.61 .01472 m
.61 .20493 L
.62 .20493 L
.62 .01472 L
.61 .01472 L
s
1 0 0 r
.62 .01472 m
.62 .18161 L
.63 .18161 L
.63 .01472 L
F
0 g
.62 .01472 m
.62 .18161 L
.63 .18161 L
.63 .01472 L
.62 .01472 L
s
1 0 0 r
.63 .01472 m
.63 .23544 L
.64 .23544 L
.64 .01472 L
F
0 g
.63 .01472 m
.63 .23544 L
.64 .23544 L
.64 .01472 L
.63 .01472 L
s
1 0 0 r
.64 .01472 m
.64 .20673 L
.65 .20673 L
.65 .01472 L
F
0 g
.64 .01472 m
.64 .20673 L
.65 .20673 L
.65 .01472 L
.64 .01472 L
s
1 0 0 r
.65 .01472 m
.65 .17981 L
.66 .17981 L
.66 .01472 L
F
0 g
.65 .01472 m
.65 .17981 L
.66 .17981 L
.66 .01472 L
.65 .01472 L
s
1 0 0 r
.66 .01472 m
.66 .20852 L
.67 .20852 L
.67 .01472 L
F
0 g
.66 .01472 m
.66 .20852 L
.67 .20852 L
.67 .01472 L
.66 .01472 L
s
1 0 0 r
.67 .01472 m
.67 .20673 L
.68 .20673 L
.68 .01472 L
F
0 g
.67 .01472 m
.67 .20673 L
.68 .20673 L
.68 .01472 L
.67 .01472 L
s
1 0 0 r
.68 .01472 m
.68 .20135 L
.69 .20135 L
.69 .01472 L
F
0 g
.68 .01472 m
.68 .20135 L
.69 .20135 L
.69 .01472 L
.68 .01472 L
s
1 0 0 r
.69 .01472 m
.69 .17263 L
.7 .17263 L
.7 .01472 L
F
0 g
.69 .01472 m
.69 .17263 L
.7 .17263 L
.7 .01472 L
.69 .01472 L
s
1 0 0 r
.7 .01472 m
.7 .17802 L
.71 .17802 L
.71 .01472 L
F
0 g
.7 .01472 m
.7 .17802 L
.71 .17802 L
.71 .01472 L
.7 .01472 L
s
1 0 0 r
.71 .01472 m
.71 .21032 L
.72 .21032 L
.72 .01472 L
F
0 g
.71 .01472 m
.71 .21032 L
.72 .21032 L
.72 .01472 L
.71 .01472 L
s
1 0 0 r
.72 .01472 m
.72 .20135 L
.73 .20135 L
.73 .01472 L
F
0 g
.72 .01472 m
.72 .20135 L
.73 .20135 L
.73 .01472 L
.72 .01472 L
s
1 0 0 r
.73 .01472 m
.73 .20314 L
.74 .20314 L
.74 .01472 L
F
0 g
.73 .01472 m
.73 .20314 L
.74 .20314 L
.74 .01472 L
.73 .01472 L
s
1 0 0 r
.74 .01472 m
.74 .20135 L
.75 .20135 L
.75 .01472 L
F
0 g
.74 .01472 m
.74 .20135 L
.75 .20135 L
.75 .01472 L
.74 .01472 L
s
1 0 0 r
.75 .01472 m
.75 .16007 L
.76 .16007 L
.76 .01472 L
F
0 g
.75 .01472 m
.75 .16007 L
.76 .16007 L
.76 .01472 L
.75 .01472 L
s
1 0 0 r
.76 .01472 m
.76 .15469 L
.77 .15469 L
.77 .01472 L
F
0 g
.76 .01472 m
.76 .15469 L
.77 .15469 L
.77 .01472 L
.76 .01472 L
s
1 0 0 r
.77 .01472 m
.77 .15469 L
.78 .15469 L
.78 .01472 L
F
0 g
.77 .01472 m
.77 .15469 L
.78 .15469 L
.78 .01472 L
.77 .01472 L
s
1 0 0 r
.78 .01472 m
.78 .17802 L
.79 .17802 L
.79 .01472 L
F
0 g
.78 .01472 m
.78 .17802 L
.79 .17802 L
.79 .01472 L
.78 .01472 L
s
1 0 0 r
.79 .01472 m
.79 .15469 L
.8 .15469 L
.8 .01472 L
F
0 g
.79 .01472 m
.79 .15469 L
.8 .15469 L
.8 .01472 L
.79 .01472 L
s
1 0 0 r
.8 .01472 m
.8 .17084 L
.81 .17084 L
.81 .01472 L
F
0 g
.8 .01472 m
.8 .17084 L
.81 .17084 L
.81 .01472 L
.8 .01472 L
s
1 0 0 r
.81 .01472 m
.81 .14751 L
.82 .14751 L
.82 .01472 L
F
0 g
.81 .01472 m
.81 .14751 L
.82 .14751 L
.82 .01472 L
.81 .01472 L
s
1 0 0 r
.82 .01472 m
.82 .15289 L
.83 .15289 L
.83 .01472 L
F
0 g
.82 .01472 m
.82 .15289 L
.83 .15289 L
.83 .01472 L
.82 .01472 L
s
1 0 0 r
.83 .01472 m
.83 .14213 L
.84 .14213 L
.84 .01472 L
F
0 g
.83 .01472 m
.83 .14213 L
.84 .14213 L
.84 .01472 L
.83 .01472 L
s
1 0 0 r
.84 .01472 m
.84 .14392 L
.85 .14392 L
.85 .01472 L
F
0 g
.84 .01472 m
.84 .14392 L
.85 .14392 L
.85 .01472 L
.84 .01472 L
s
1 0 0 r
.85 .01472 m
.85 .13495 L
.86 .13495 L
.86 .01472 L
F
0 g
.85 .01472 m
.85 .13495 L
.86 .13495 L
.86 .01472 L
.85 .01472 L
s
1 0 0 r
.86 .01472 m
.86 .13674 L
.87 .13674 L
.87 .01472 L
F
0 g
.86 .01472 m
.86 .13674 L
.87 .13674 L
.87 .01472 L
.86 .01472 L
s
1 0 0 r
.87 .01472 m
.87 .16366 L
.88 .16366 L
.88 .01472 L
F
0 g
.87 .01472 m
.87 .16366 L
.88 .16366 L
.88 .01472 L
.87 .01472 L
s
1 0 0 r
.88 .01472 m
.88 .13674 L
.89 .13674 L
.89 .01472 L
F
0 g
.88 .01472 m
.88 .13674 L
.89 .13674 L
.89 .01472 L
.88 .01472 L
s
1 0 0 r
.89 .01472 m
.89 .11162 L
.9 .11162 L
.9 .01472 L
F
0 g
.89 .01472 m
.89 .11162 L
.9 .11162 L
.9 .01472 L
.89 .01472 L
s
1 0 0 r
.9 .01472 m
.9 .12418 L
.91 .12418 L
.91 .01472 L
F
0 g
.9 .01472 m
.9 .12418 L
.91 .12418 L
.91 .01472 L
.9 .01472 L
s
1 0 0 r
.91 .01472 m
.91 .10444 L
.92 .10444 L
.92 .01472 L
F
0 g
.91 .01472 m
.91 .10444 L
.92 .10444 L
.92 .01472 L
.91 .01472 L
s
1 0 0 r
.92 .01472 m
.92 .14033 L
.93 .14033 L
.93 .01472 L
F
0 g
.92 .01472 m
.92 .14033 L
.93 .14033 L
.93 .01472 L
.92 .01472 L
s
1 0 0 r
.93 .01472 m
.93 .13315 L
.94 .13315 L
.94 .01472 L
F
0 g
.93 .01472 m
.93 .13315 L
.94 .13315 L
.94 .01472 L
.93 .01472 L
s
1 0 0 r
.94 .01472 m
.94 .12418 L
.95 .12418 L
.95 .01472 L
F
0 g
.94 .01472 m
.94 .12418 L
.95 .12418 L
.95 .01472 L
.94 .01472 L
s
1 0 0 r
.95 .01472 m
.95 .13315 L
.96 .13315 L
.96 .01472 L
F
0 g
.95 .01472 m
.95 .13315 L
.96 .13315 L
.96 .01472 L
.95 .01472 L
s
1 0 0 r
.96 .01472 m
.96 .14033 L
.97 .14033 L
.97 .01472 L
F
0 g
.96 .01472 m
.96 .14033 L
.97 .14033 L
.97 .01472 L
.96 .01472 L
s
1 0 0 r
.97 .01472 m
.97 .12239 L
.98 .12239 L
.98 .01472 L
F
0 g
.97 .01472 m
.97 .12239 L
.98 .12239 L
.98 .01472 L
.97 .01472 L
s
1 0 0 r
.98 .01472 m
.98 .08111 L
.99 .08111 L
.99 .01472 L
F
0 g
.98 .01472 m
.98 .08111 L
.99 .08111 L
.99 .01472 L
.98 .01472 L
s
1 0 0 r
.99 .01472 m
.99 .117 L
1 .117 L
1 .01472 L
F
0 g
.99 .01472 m
.99 .117 L
1 .117 L
1 .01472 L
.99 .01472 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00F@3oool2000003h0oooo0P0000100?ooo`800000
@`3oool005P0oooo00@000000?ooo`3oool00000?03oool010000000oooo0?ooo`00000n0?ooo`04
0000003oool0oooo00000480oooo001K0?ooo`030000003oool0oooo03X0oooo00@000000?ooo`3o
ool00000@@3oool00`000000oooo0?ooo`100?ooo`00DP3oool4000000<0oooo0P00000m0?ooo`04
0000003oool0oooo000003l0oooo0P0000130?ooo`00F@3oool00`000000oooo0?ooo`0l0?ooo`04
0000003oool0oooo000003l0oooo00<000000?ooo`3oool0@P3oool005T0oooo0`00000m0?ooo`80
0000@03oool300000480oooo003o0?ooob40oooo000E0?ooo`030000003oool0oooo0?l0oooo2@3o
ool001D0oooo00<000000?ooo`3oool0o`3oool90?ooo`005@3oool00`000000oooo0?ooo`3o0?oo
o`T0oooo000E0?ooo`030000003oool0oooo0?l0oooo2@3oool001D0ooooo`00000<000000005@3o
ool00`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00000`000000o`00000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000<000000?l0000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000<000000?l0003o00000@00000001D0oooo00<000000?l0000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00030000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000030000003o0000o`0000400000000E0?ooo`03
0000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000030000003o000000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00000`000000o`00000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
0`000000o`000?l00001000000005@3oool00`000000o`00000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00000`00
0000o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000<0
00000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000<000000?l0003o00000@00000001D0oooo00<00000
0?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000030000003o000000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000030000
003o0000o`0000400000000E0?ooo`030000003o000000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o
000000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00000`000000
o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00000`000000o`000?l00001000000005@3oool00`000000o`00
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00000`000000o`00000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?l0
003o00000@00000001D0oooo00<000000?l0000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?l00000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o0000
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000030000003o0000o`0000400000000E0?ooo`030000003o00000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000030000003o000000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3o00000`000000o`00000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00000`000000o`000?l0
0001000000005@3oool00`000000o`00000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00000`000000o`0000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?l000000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000<000000?l0003o00000@00000001D0oooo00<000000?l0000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000030000003o000000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o0000o`000040
0000000E0?ooo`030000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o000000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00000`000000o`00000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00000`000000o`000?l00001000000005@3oool00`000000o`00000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00000`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?l0003o00000@000000
01D0oooo00<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?l0000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000030000003o000000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000030000003o0000o`0000400000000E0?ooo`030000003o000000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000030000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00000`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00000`000000o`000?l00001000000005@3o
ool00`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00000`000000o`00000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000<000000?l0000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000<000000?l0003o00000@00000001D0oooo00<000000?l0000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00030000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000030000003o0000o`0000400000000E0?ooo`03
0000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000030000003o000000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00000`000000o`00000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000050000003o0000o`000000003o0000100000020?l0
00400000000E0?ooo`030000003o000000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o000000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00000`000000o`0000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3oool00`000000o`000?l00001000000005@3oool00`000000o`00000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00000`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080oooo00<000000?l0003o00000@00
000001D0oooo00<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?l0000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o000000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?ooo`030000003o0000o`000040000000080?ooo`800000103oool2000000D0oooo00<0
00000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000030000003o000000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?ooo`03
0000003o0000o`000040000000070?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3o
ool00000103oool00`000000o`00000000020?l000050000003o0000o`000000003o000010000002
0?l000030000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00000`000000o`00000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000<000000?l0000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
oooo00<000000?l0003o00000@00000000X0oooo00@000000?ooo`3oool000000P3oool00`000000
oooo0?ooo`020?ooo`030000003o000000000080o`0000H000000?l0003o000000000?l000000002
0?ooo`060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o000000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00000`000000o`0000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00000`000000o`000?l000030000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3oool00`000000o`000?l0000100000000203oool2000000<0oooo00@000000?ooo`3oool0
0000103oool00`000000o`00000000020?l000060000003o0000o`000000003o000000000P3oool0
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00000`000000o`00000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?l0000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?ooo`00
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080oooo00<000000?l0003o00000@00000000P0oooo00<000000?ooo`3oool00P3oool01000
0000oooo0?ooo`0000040?ooo`030000003o000000000080o`0000H000000?l0003o000000000?l0
000000020?ooo`060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o0000
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00000`000000o`00
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000050000003o0000o`000000003o0000100000020?l000030000003oool0
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3oool00`000000o`000?l0000100000000203oool3000000<0oooo0P0000050?ooo`03
0000003o0000000000<000000P3o00000`000000o`00000000020?ooo`060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00100000001@3o00000000
0?l0003o000000000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000030000003o000000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00000`000000o`00000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3oool01P000000o`000?l000000000oooo00000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3oool4000000005@3oool00`00
0000o`00000000020?ooo`060000003o0000o`000000003o000000000P3oool01P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003oool0
oooo0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00000`000000o`00000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080oooo00H000000?l0003o000000000?ooo`0000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00000000H0oooo000E
0?ooo`030000003o000000000080oooo00H000000?l0003o000000000?l0000000020?ooo`060000
003o0000o`000000003o000000000P3o00000`000000o`000?l0000300000080o`0000H000000?oo
o`3oool000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000030000003o000000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00000`000000o`00000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3oool4000000050?ooo`000000o`000?l0000000000P3o0003
00000080o`0000<000000?l0003o00000`0000060?ooo`005@3oool00`000000o`00000000020?oo
o`060000003o0000o`000000003o000000000P3oool01P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?ooo`0000020?l000060000003oool0oooo0000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00000`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
000000L0oooo00@000000?l0003o000000000P3o00000`000000oooo000000020?l000040000003o
0000o`00000000P0oooo000E0?ooo`030000003o000000000080oooo10000000103o000000000?oo
o`3oool4000000050?l000000000o`000?l0000000000P3o00000`000000oooo000000020?l00003
0000003oool0oooo00H000000P3o00000`000000o`00000000020?l000060000003o0000o`000000
003o000000000P3o0004000000050?l000000000o`000?l0000000000P3o00000`000000o`000000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000030000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00070?ooo`040000003o0000o`0000000080o`0000<000000?ooo`0000000P3o000010000000o`00
0?l0000000080?ooo`005@3oool00`000000o`00000000050?ooo`030000003o0000000000D0oooo
0`0000020?l000050000003o0000o`000000003oool0100000070?ooo`@0000000D0o`000000003o
0000o`00000000020?l000030000003o000000000080o`0000H000000?ooo`3oool000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o000000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00000`000000o`00000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?l0003o00001P0000020?l0
00<000001`3oool00`000000o`000?l00004000000030?ooo`0000000000008000000P3o00000`00
0000oooo0?ooo`060?ooo`005@3oool3000000D0oooo0`0000070?ooo`040000003o0000o`000000
0080o`0000<000000?ooo`3oool03@3oool00`000000o`00000000020?l000050000003o0000o`00
0000003o0000100000020?ooo`030000003o000000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000030000003o000000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o000010000000o`000?l0000000040?ooo`040000003o0000o`00000000T0oooo10000007
0?ooo`@00000203oool001D0oooo00<000000?ooo`3oool03`3oool010000000o`000?l000000002
0?l000030000003oool0oooo00d0oooo00<000000?l0000000000P3o0004000000030?l000000000
oooo00@0oooo00<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00000`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000D000000?l0003o000000000?l00007000000@0oooo
00@000000?l0003o00000000803oool001D0oooo00<000000?ooo`3oool03`3oool00`000000o`00
0?l00004000000l0oooo00<000000?l0000000000P3o00001P000000oooo0?ooo`000000o`000000
00D0oooo00<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
0`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`00100000000`3o000000000?ooo`090?ooo`040000003o0000
o`0000000200oooo000E0?ooo`030000003oool0oooo00l0oooo00@000000?l0003o000000004P3o
ool00`000000o`00000000020?l000060000003oool0oooo0000003o000000001@3oool00`000000
o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o00000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00000`000000o`000000
00020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000oooo0?ooo`000000o`00000000X0oooo00@000000?l0003o00000000
803oool001D0oooo00<000000?ooo`3oool03`3oool400000180oooo00<000000?l0000000000P3o
00001P000000oooo0?ooo`000000o`00000000D0oooo00<000000?l0000000000P3o00001@000000
o`000?l000000000o`0000@000000P3o00000`000000o`00000000020?l000060000003o0000o`00
0000003o000000000P3o00000`000000o`00000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o0000o`0000H00000
0P3o000300000080o`0000<000000?ooo`3oool00`00000:0?ooo`040000003o0000o`0000000200
oooo000E0?ooo`8000009P3oool00`000000o`00000000020?l000060000003oool0oooo0000003o
000000001@3oool00`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o
ool01P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000030000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00000`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000@000000?l0003o00000000103oool01P000000o`00
0?l000000000oooo00000080o`0000<000000?ooo`3oool03@3oool010000000o`000?l00000000P
0?ooo`005@3oool00`000000oooo0?ooo`0U0?ooo`H000000P3oool00`000000o`00000000050?oo
o`030000003o0000000000<000000P3o00000`000000o`00000000020?ooo`060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?l00000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000030000003o0000
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o0004000000@0oooo00H000000?l0003o000000000?ooo`0000020?l000030000003o
ool0oooo00d0oooo00@000000?l0003o00000000803oool001D0oooo00<000000?ooo`3oool0;@3o
ool00`000000o`00000000050?ooo`030000003o000000000080oooo00H000000?l0003o00000000
0?l0000000020?ooo`060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000030000003o000000000080o`0000H000000?l0003o000000000?l00000
00020?l000060000003o0000o`000000003o000000000P3o00000`000000oooo0?ooo`050?ooo`06
0000003o0000o`000000003oool000000P3o00000`000000oooo0?ooo`0=0?ooo`@00000803oool0
01D0oooo00<000000?ooo`3oool0;@3oool00`000000o`00000000050?ooo`030000003o00000000
0080oooo00H000000?l0003o000000000?l0000000020?ooo`050000003o0000o`000000003o0000
100000020?l000030000003o000000000080o`0000<000000?l0000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000030000003o000000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00000`000000
oooo0?ooo`050?ooo`060000003o0000o`000000003oool000000P3o00000`000000oooo0?ooo`0a
0?ooo`005@3oool00`000000oooo0?ooo`0]0?ooo`<000001@3oool00`000000o`00000000020?oo
o`@0000000D0o`000000003oool0oooo000000020?l000030000003o000000000080oooo00H00000
0?l0003o000000000?l0000000020?l000030000003o000000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00000`000000o`00000000020?l000@0000000D0o`000000
003o0000o`00000000020?l000030000003o000000000080o`0000<000000?ooo`3oool01@3oool0
1@000000o`000?l000000000oooo00@00000<`3oool001D0oooo0P00000f0?ooo`030000003o0000
000000D0oooo00<000000?l0000000000P3oool01P000000o`000?l000000000o`0000000080oooo
00<000000?l0003o00000`0000020?l000030000003o000000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00000`000000o`00000000020?l000030000003oool0oooo
00<000000P3o00001P000000o`000?l000000000o`0000000080o`0000<000000?ooo`3oool01@3o
ool4000003P0oooo000E0?ooo`030000003oool0oooo03D0oooo00<000000?l0000000001@3oool0
0`000000o`00000000020?ooo`060000003o0000o`000000003o000000000P3oool01P000000o`00
0?l000000000oooo00000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00000`000000o`000?l0000300000080o`0000<000000?l0003o0000
0`0000020?l000030000003o000000000080o`0000<000000?ooo`3oool00P3oool010000000o`00
0?l0000000020?l000030000003o000000000080o`0000<000000?ooo`3oool0@@3oool001D0oooo
00<000000?ooo`3oool0=@3oool00`000000o`00000000050?ooo`<000000P3oool01P000000o`00
0?l000000000o`0000000080oooo00H000000?l0003o000000000?ooo`0000020?l000<000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
oooo00000080o`0000H000000?l0003o000000000?ooo`0000020?l000030000003o000000000080
o`0000<000000?ooo`3oool00P3oool010000000o`000?l0000000020?l000030000003o00000000
0080o`0000<000000?ooo`3oool0@@3oool000030?ooo`000000000000<000000P3oool2000000@0
oooo0P0000050?ooo`030000003oool0oooo03D0oooo00<000000?l0000000002P3oool400000005
0?l000000000oooo0?ooo`0000000P3o00000`000000oooo000000020?l000030000003oool00000
0080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?ooo`0000020?l000060000003o0000o`000000003oool000000P3o00000`000000o`000000
00020?l000030000003oool0oooo0080oooo00@000000?l0003o000000000P3o00000`000000o`00
000000020?l000030000003oool0oooo0440oooo00030?ooo`050000003oool0oooo0?ooo`000000
0P3oool010000000oooo0?ooo`0000020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool0=@3oool00`000000o`000000000=0?ooo`030000003o000000000080oooo00H000000?l0003o
000000000?ooo`0000020?l000030000003oool000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?ooo`0000020?l000060000003o0000
o`000000003oool000000P3o00000`000000o`00000000020?l000030000003oool0oooo0080oooo
00@000000?l0003o000000000P3o00000`000000o`00000000020?l000030000003oool0oooo0440
oooo00030?ooo`050000003oool0oooo0?ooo`0000000P3oool010000000oooo0?ooo`0000020?oo
o`030000003oool0oooo0080oooo0P00000f0?ooo`030000003o0000000000d0oooo00<000000?l0
000000000P3oool01@000000o`000?l000000000oooo00@0000000D0oooo0000003o0000o`000000
00020?l000030000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l00006
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000oooo0000
0080o`0000H000000?l0003o000000000?ooo`0000020?l000030000003o000000000080o`0000<0
00000?ooo`3oool00P3oool010000000o`000?l0000000020?l000030000003o000000000080o`00
00<000000?ooo`3oool0@@3oool000<0oooo00D000000?ooo`3oool0oooo000000020?ooo`040000
003oool0oooo00000080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0e0?ooo`03
0000003o0000000000d0oooo00<000000?l0000000000P3oool010000000o`000?l0000000060?oo
o`040000003o0000o`0000000080o`0000<000000?l0000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003oool000000P3o00001P000000o`000?l000000000oooo00000080o`0000<00000
0?l0000000000P3o00000`000000oooo0?ooo`020?ooo`040000003o0000o`0000000080o`0000<0
00000?l0000000000P3o00000`000000oooo0?ooo`110?ooo`000`3oool01@000000oooo0?ooo`3o
ool000000080oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo03D0oooo0`00000=0?ooo`030000003o000000000080oooo00@000000?l0003o0000
00001P3oool400000080o`0000<000000?l0000000000P3o00001P000000o`000?l000000000o`00
00000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003oool000000P3o00001P000000o`000?l000000000oooo00000080o`0000<000000?l00000
00000`0000040?ooo`030000003o0000o`0000T00000@`3oool00080oooo0P0000040?ooo`800000
103oool2000000D0oooo00<000000?ooo`3oool0A@3oool00`000000o`00000000020?ooo`040000
003o0000o`00000000T0oooo00H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`001000
0000103oool000000?l0003o0004000000040?ooo`000000o`000?l000<000001`3oool010000000
o`000?l00000001;0?ooo`005@3oool2000004H0oooo0`0000020?ooo`@000002@3oool01P000000
o`000?l000000000o`0000000080o`00100000001@3o000000000?l0003o000000000080o`0000<0
00000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o
000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00000`000000oooo0?ooo`020?ooo`040000003o0000o`000000
00@0oooo100000090?ooo`@00000B`3oool001D0oooo00<000000?ooo`3oool0E`3oool01P000000
o`000?l000000000o`0000000080o`0000H000000?ooo`3oool000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00050000003o0000o`000000003o0000100000040?ooo`040000003o0000o`0000000600oooo000E
0?ooo`030000003oool0oooo05L0oooo100000001@3o000000000?l0003o000000000080oooo00<0
00000?l0000000000P3o0004000000050?l000000000o`000?l0000000000P3o00000`000000o`00
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000
003o000000000P3o00001P000000o`000?l000000000o`00000000L0oooo00@000000?l0003o0000
0000H03oool001D0oooo00<000000?ooo`3oool0FP3oool00`000000o`000000000300000080oooo
00<000000?l0000000000P3o00000`000000oooo0?ooo`0300000080o`0000H000000?l0003o0000
00000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`00000000L0oooo00@000000?l0
003o00000000H03oool001D0oooo00<000000?ooo`3oool0FP3oool00`000000o`00000000050?oo
o`<000000P3o00000`000000oooo0?ooo`020?ooo`030000003o0000o`0000@0000000D0o`000000
003o0000o`00000000020?l000030000003o000000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000
o`0000000080o`0000H000000?l0003o000000000?l0000000070?ooo`040000003o0000o`000000
0600oooo000E0?ooo`800000F`3oool00`000000o`00000000070?ooo`040000003o0000o`000000
00@0oooo00@000000?l0003o000000000P3oool00`000000o`00000000020?l000060000003o0000
o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`00000000L0oooo00@000000?l0003o00000000H03oool001D0oooo00<00000
0?ooo`3oool0FP3oool00`000000o`00000000070?ooo`040000003o0000o`00000000@0oooo00@0
00000?l0003o000000000P3oool00`000000o`00000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`00000000L0oooo00@000000?l0003o00000000H03oool001D0oooo00<000000?ooo`3oool0
FP3oool00`000000o`00000000070?ooo`040000003o0000o`00000000@0oooo00@000000?l0003o
000000000P3oool00`000000o`00000000020?l000060000003o0000o`000000003o000000000P3o
00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00000`000000o`000?l00003000000L0oooo
1000001P0?ooo`005@3oool00`000000oooo0?ooo`1J0?ooo`030000003o0000000000L0oooo00@0
00000?l0003o00000000103oool010000000o`000?l0000000020?ooo`030000003o000000000080
o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l00000
00020?l000040000003o0000o`00000006d0oooo000E0?ooo`030000003oool0oooo05X0oooo00<0
00000?l0000000001`3oool010000000o`000?l0000000040?ooo`040000003o0000o`0000000080
oooo00<000000?l0000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000@000000?l0003o00000000K@3oool001D0oooo0P00
001K0?ooo`030000003o0000000000L0oooo00@000000?l0003o00000000103oool010000000o`00
0?l0000000020?ooo`030000003o000000000080o`0000H000000?l0003o000000000?l000000002
0?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`000000
0080o`0000H000000?l0003o000000000?l0000000020?l000040000003o0000o`00000006d0oooo
000E0?ooo`030000003oool0oooo05X0oooo00<000000?l0000000001`3oool4000000@0oooo00@0
00000?l0003o000000000P3oool00`000000o`00000000020?l000060000003o0000o`000000003o
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o000010000000o`000?l00000
001]0?ooo`005@3oool00`000000oooo0?ooo`1J0?ooo`030000003o0000000000l0oooo00@00000
0?l0003o000000000P3oool00`000000o`00000000020?l000060000003o0000o`000000003o0000
00000P3o00001P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0
000000020?l000060000003o0000o`000000003o000000000P3o000010000000o`000?l00000001]
0?ooo`005@3oool00`000000oooo0?ooo`1J0?ooo`030000003o0000000000l0oooo100000020?oo
o`030000003o000000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o
0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H00000
0?l0003o000000000?l0000000020?l000040000003o0000o`00000006d0oooo000E0?ooo`030000
003oool0oooo05X0oooo00<000000?l0000000005@3oool00`000000o`00000000020?l000060000
003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000030000003o0000o`0000<000000P3o000010000000
o`000?l00000001]0?ooo`005@3oool2000005/0oooo00<000000?l0000000005@3oool00`000000
o`00000000020?l000060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003oool000000P3o0004000006d0oooo000E0?ooo`030000003oool0oooo05X0oooo00<00000
0?l0000000005@3oool00`000000o`000000000300000080o`0000<000000?l0000000000P3o0000
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003oool000000P3o00000`000000oooo0?ooo`1^0?ooo`005@3oool0
0`000000oooo0?ooo`1J0?ooo`030000003o0000000001D0oooo00<000000?l0000000000P3oool0
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000oooo00000080
o`0000<000000?ooo`3oool0KP3oool000030?ooo`000000000000<000000P3oool2000000@0oooo
0P0000050?ooo`030000003oool0oooo05X0oooo0`00000E0?ooo`030000003o000000000080oooo
00H000000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o
00001@000000o`000?l000000000o`0000@000000P3o00000`000000oooo000000020?l000030000
003oool0oooo06h0oooo00030?ooo`050000003oool0oooo0?ooo`0000000P3oool010000000oooo
0?ooo`0000020?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0LP3oool00`000000
o`00000000020?ooo`060000003o0000o`000000003o000000000P3o00001P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?ooo`050000003o0000o`00
0000003oool01000001`0?ooo`000`3oool00`000000oooo0?ooo`040?ooo`040000003oool0oooo
00000080oooo00<000000?ooo`3oool00P3oool2000007<0oooo00<000000?l0000000000P3oool0
1P000000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3oool010000000o`000?l00000001e0?ooo`000`3o
ool00`000000oooo0?ooo`020?ooo`8000000`3oool010000000oooo0?ooo`0000040?ooo`030000
003oool0oooo0780oooo0`0000020?ooo`060000003o0000o`000000003o000000000P3o00001P00
0000o`000?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?ooo`04
0000003o0000o`00000007D0oooo00030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool00P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo07L0oooo00H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o00001P000000
o`000?l000000000o`0000000080oooo00@000000?l0003o00000000M@3oool00080oooo0P000004
0?ooo`<000000`3oool2000000D0oooo00<000000?ooo`3oool0M`3oool01P000000o`000?l00000
0000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000060000003o0000o`00
0000003o000000000P3oool010000000o`000?l00000001e0?ooo`005@3oool2000007P0oooo00H0
00000?l0003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3o0000
1P000000o`000?l000000000o`0000000080oooo00@000000?l0003o00000000M@3oool001D0oooo
00<000000?ooo`3oool0M`3oool01P000000o`000?l000000000o`0000000080o`0000H000000?l0
003o000000000?l0000000020?l000060000003o0000o`000000003o000000000P3oool4000007D0
oooo000E0?ooo`030000003oool0oooo07L0oooo00H000000?l0003o000000000?l0000000020?l0
00060000003o0000o`000000003o000000000P3o00000`000000o`000?l00003000007/0oooo000E
0?ooo`030000003oool0oooo07L0oooo00H000000?l0003o000000000?l0000000020?l000060000
003o0000o`000000003o000000000P3o000010000000o`000?l00000001m0?ooo`005@3oool00`00
0000oooo0?ooo`1g0?ooo`060000003o0000o`000000003o000000000P3o00001P000000o`000?l0
00000000o`0000000080o`0000@000000?l0003o00000000O@3oool001D0oooo0P00001h0?ooo`06
0000003o0000o`000000003o000000000P3o00001P000000o`000?l000000000o`0000000080o`00
00@000000?l0003o00000000O@3oool001D0oooo00<000000?ooo`3oool0M`3oool01P000000o`00
0?l000000000o`0000000080o`0000H000000?l0003o000000000?l0000000020?l000040000003o
0000o`00000007d0oooo000E0?ooo`030000003oool0oooo07L0oooo00H000000?l0003o00000000
0?l0000000020?l000060000003o0000o`000000003o000000000P3o000010000000o`000?l00000
001m0?ooo`005@3oool00`000000oooo0?ooo`1g0?ooo`060000003o0000o`000000003o00000000
0P3o00001P000000o`000?l000000000o`0000000080o`0000@000000?l0003o00000000O@3oool0
01D0oooo00<000000?ooo`3oool0M`3oool01P000000o`000?l000000000o`0000000080o`0000H0
00000?l0003o000000000?l0000000020?l000040000003o0000o`00000007d0oooo000E0?ooo`80
0000N03oool4000000050?l000000000o`000?l0000000000P3o00000`000000o`00000000020?l0
00040000003o0000o`00000007d0oooo000E0?ooo`030000003oool0oooo07X0oooo00<000000?l0
000000000P3o00001P000000o`000?l000000000o`0000000080o`0000@000000?l0003o00000000
O@3oool001D0oooo00<000000?ooo`3oool0NP3oool300000080o`0000H000000?l0003o00000000
0?l0000000020?l000040000003o0000o`00000007d0oooo000E0?ooo`030000003oool0oooo07`0
oooo00@000000?l0003o000000000P3o00000`000000o`00000000020?l000040000003o0000o`00
000007d0oooo000E0?ooo`030000003oool0oooo07`0oooo00@000000?l0003o000000000P3o0000
0`000000o`00000000020?l000040000003o0000o`00000007d0oooo000E0?ooo`800000O@3oool0
10000000o`000?l0000000020?l000030000003o000000000080o`0000@000000?l0003o00000000
O@3oool001D0oooo00<000000?ooo`3oool0O03oool010000000o`000?l0000000020?l000030000
003o000000000080o`0000@000000?l0003o00000000O@3oool000030?ooo`000000000000800000
0`3oool2000000@0oooo0P0000050?ooo`030000003oool0oooo07`0oooo100000020?l000030000
003o000000000080o`0000@000000?l0003o00000000O@3oool000030?ooo`000000oooo00@0oooo
00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo
07l0oooo00H000000?l0003o000000000?l0000000020?l000040000003o0000o`00000007d0oooo
00020?ooo`030000003oool0oooo0080oooo00@000000?ooo`3oool000000P3oool010000000oooo
0?ooo`0000040?ooo`800000P03oool01P000000o`000?l000000000o`0000000080o`0000@00000
0?l0003o00000000O@3oool000<0oooo00D000000?ooo`3oool0oooo000000020?ooo`040000003o
ool0oooo00000080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`1o0?ooo`050000
003o0000o`000000003o0000100000020?l000030000003oool0oooo07/0oooo00001@3oool00000
0?ooo`3oool000000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`000004
0?ooo`030000003oool0oooo07l0oooo00H000000?l0003o000000000?l0000000020?ooo`040000
003o0000o`00000007d0oooo00020?ooo`800000103oool2000000@0oooo0P0000050?ooo`030000
003oool0oooo07l0oooo00H000000?l0003o000000000?l0000000020?ooo`040000003o0000o`00
000007d0oooo000E0?ooo`030000003oool0oooo07l0oooo00H000000?l0003o000000000?l00000
00020?ooo`@00000O@3oool001D0oooo0P0000200?ooo`060000003o0000o`000000003o00000000
P`3oool001D0oooo00<000000?ooo`3oool0O`3oool01P000000o`000?l000000000o`00000008<0
oooo000E0?ooo`030000003oool0oooo07l0oooo00H000000?l0003o000000000?l0000000230?oo
o`005@3oool00`000000oooo0?ooo`1o0?ooo`060000003o0000o`000000003o00000000P`3oool0
01D0oooo00<000000?ooo`3oool0O`3oool01P000000o`000?l000000000o`00000008<0oooo000E
0?ooo`800000P03oool01P000000o`000?l000000000o`00000008<0oooo000E0?ooo`030000003o
ool0oooo07l0oooo100000000`3o000000000?ooo`220?ooo`005@3oool00`000000oooo0?ooo`22
0?ooo`030000003o0000000008<0oooo000E0?ooo`030000003oool0oooo0880oooo00<000000?l0
00000000P`3oool001D0oooo00<000000?ooo`3oool0PP3oool00`000000o`00000000230?ooo`00
5@3oool2000008<0oooo00<000000?l000000000P`3oool001D0oooo00<000000?ooo`3oool0PP3o
ool00`000000o`00000000230?ooo`005@3oool00`000000oooo0?ooo`220?ooo`030000003o0000
000008<0oooo000E0?ooo`030000003oool0oooo0880oooo00<000000?l000000000P`3oool001D0
oooo0P0000230?ooo`030000003o0000000008<0oooo000E0?ooo`030000003oool0oooo0880oooo
00<000000?l000000000P`3oool001D0oooo00<000000?ooo`3oool0PP3oool00`000000o`000000
00230?ooo`0000<0oooo0000000000000P0000030?ooo`800000103oool2000000D0oooo00<00000
0?ooo`3oool0PP3oool00`000000o`00000000230?ooo`0000<0oooo0000003oool0103oool01000
0000oooo0?ooo`0000020?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0PP3o
ool00`000000o`00000000230?ooo`000P3oool00`000000oooo0?ooo`050?ooo`040000003oool0
oooo00000080oooo00<000000?ooo`3oool00P3oool2000008<0oooo00<000000?l000000000P`3o
ool000<0oooo00<000000?ooo`3oool00P3oool2000000<0oooo00@000000?ooo`3oool00000103o
ool00`000000oooo0?ooo`220?ooo`030000003o0000000008<0oooo00001@3oool000000?ooo`3o
ool0000000<0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`0000040?ooo`030000
003oool0oooo0880oooo00<000000?l000000000P`3oool00080oooo0P0000040?ooo`<000000`3o
ool2000000D0oooo00<000000?ooo`3oool0PP3oool00`000000o`00000000230?ooo`005@3oool0
0`000000oooo0?ooo`220?ooo`030000003o0000000008<0oooo000E0?ooo`800000P`3oool00`00
0000o`00000000230?ooo`005@3oool00`000000oooo0?ooo`220?ooo`030000003o0000000008<0
oooo000E0?ooo`030000003oool0oooo0880oooo00<000000?l000000000P`3oool001D0oooo00<0
00000?ooo`3oool0PP3oool00`000000o`00000000230?ooo`005@3oool00`000000oooo0?ooo`22
0?ooo`030000003o0000000008<0oooo000E0?ooo`800000P`3oool00`000000o`00000000230?oo
o`005@3oool00`000000oooo0?ooo`220?ooo`030000003o0000000008<0oooo000E0?ooo`030000
003oool0oooo0880oooo00<000000?l000000000P`3oool001D0oooo00<000000?ooo`3oool0PP3o
ool00`000000o`00000000230?ooo`005@3oool00`000000oooo0?ooo`220?ooo`030000003o0000
000008<0oooo000E0?ooo`800000P`3oool00`000000o`00000000230?ooo`005@3oool00`000000
oooo0?ooo`220?ooo`030000003o0000000008<0oooo000E0?ooo`030000003oool0oooo0880oooo
00<000000?l000000000P`3oool001D0oooo00<000000?ooo`3oool0PP3oool00`000000o`000000
00230?ooo`005@3oool2000008<0oooo00<000000?l000000000P`3oool001D0oooo00<000000?oo
o`3oool0PP3oool00`000000o`00000000230?ooo`005@3oool00`000000oooo0?ooo`220?ooo`03
0000003o0000000008<0oooo00020?ooo`800000103oool2000000@0oooo0P0000050?ooo`030000
003oool0oooo0880oooo00<000000?l000000000P`3oool000050?ooo`000000oooo0?ooo`000000
0P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000@0oooo00<000000?oo
o`3oool0PP3oool00`000000o`00000000230?ooo`000`3oool01@000000oooo0?ooo`3oool00000
0080oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`020?ooo`800000P`3oool0
0`000000o`00000000230?ooo`00103oool010000000oooo0?ooo`0000020?ooo`040000003oool0
oooo00000080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`220?ooo`030000003o
0000000008<0oooo00001@3oool000000?ooo`3oool000000080oooo00@000000?ooo`3oool00000
0P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo0880oooo00<000000?l00000
0000P`3oool00080oooo0P0000040?ooo`800000103oool2000000D0oooo00<000000?ooo`3oool0
PP3oool00`000000o`00000000230?ooo`005@3oool00`000000oooo0?ooo`220?ooo`030000003o
0000000008<0oooo000E0?ooo`800000P`3oool00`000000o`00000000230?ooo`005@3oool00`00
0000oooo0?ooo`220?ooo`030000003o0000000008<0oooo000E0?ooo`030000003oool0oooo0880
oooo00<000000?l000000000P`3oool001D0oooo00<000000?ooo`3oool0PP3oool00`000000o`00
000000230?ooo`005@3oool00`000000oooo0?ooo`220?ooo`030000003o0000000008<0oooo000E
0?ooo`800000P`3oool00`000000o`00000000230?ooo`005@3oool00`000000oooo0?ooo`220?oo
o`030000003o0000000008<0oooo000E0?ooo`030000003oool0oooo0880oooo00<000000?l00000
0000P`3oool001D0oooo00<000000?ooo`3oool0PP3oool3000008<0oooo000E0?ooo`800000o`3o
ool:0?ooo`005@3oool00`000000oooo0?ooo`3o0?ooo`T0oooo000E0?ooo`030000003oool0oooo
0?l0oooo2@3oool001D0oooo00<000000?ooo`3oool0o`3oool90?ooo`00o`3ooolQ0?ooo`00o`3o
oolQ0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-11.6051, -30.3827, \
0.0752796, 2.09748}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Plot[PDF[WeibullDistribution[0.8, 10], x], {x, \(-10\), 10}, 
      PlotRange \[Rule] All]\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.0476191 0.0147151 1.45183 [
[.02381 .00222 -9 -9 ]
[.02381 .00222 9 0 ]
[.2619 .00222 -6 -9 ]
[.2619 .00222 6 0 ]
[.7381 .00222 -3 -9 ]
[.7381 .00222 3 0 ]
[.97619 .00222 -6 -9 ]
[.97619 .00222 6 0 ]
[.4875 .1599 -18 -4.5 ]
[.4875 .1599 0 4.5 ]
[.4875 .30508 -18 -4.5 ]
[.4875 .30508 0 4.5 ]
[.4875 .45026 -18 -4.5 ]
[.4875 .45026 0 4.5 ]
[.4875 .59545 -18 -4.5 ]
[.4875 .59545 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .01472 m
.02381 .02097 L
s
[(-10)] .02381 .00222 0 1 Mshowa
.2619 .01472 m
.2619 .02097 L
s
[(-5)] .2619 .00222 0 1 Mshowa
.7381 .01472 m
.7381 .02097 L
s
[(5)] .7381 .00222 0 1 Mshowa
.97619 .01472 m
.97619 .02097 L
s
[(10)] .97619 .00222 0 1 Mshowa
.125 Mabswid
.07143 .01472 m
.07143 .01847 L
s
.11905 .01472 m
.11905 .01847 L
s
.16667 .01472 m
.16667 .01847 L
s
.21429 .01472 m
.21429 .01847 L
s
.30952 .01472 m
.30952 .01847 L
s
.35714 .01472 m
.35714 .01847 L
s
.40476 .01472 m
.40476 .01847 L
s
.45238 .01472 m
.45238 .01847 L
s
.54762 .01472 m
.54762 .01847 L
s
.59524 .01472 m
.59524 .01847 L
s
.64286 .01472 m
.64286 .01847 L
s
.69048 .01472 m
.69048 .01847 L
s
.78571 .01472 m
.78571 .01847 L
s
.83333 .01472 m
.83333 .01847 L
s
.88095 .01472 m
.88095 .01847 L
s
.92857 .01472 m
.92857 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.5 .1599 m
.50625 .1599 L
s
[(0.1)] .4875 .1599 1 0 Mshowa
.5 .30508 m
.50625 .30508 L
s
[(0.2)] .4875 .30508 1 0 Mshowa
.5 .45026 m
.50625 .45026 L
s
[(0.3)] .4875 .45026 1 0 Mshowa
.5 .59545 m
.50625 .59545 L
s
[(0.4)] .4875 .59545 1 0 Mshowa
.125 Mabswid
.5 .04375 m
.50375 .04375 L
s
.5 .07279 m
.50375 .07279 L
s
.5 .10182 m
.50375 .10182 L
s
.5 .13086 m
.50375 .13086 L
s
.5 .18893 m
.50375 .18893 L
s
.5 .21797 m
.50375 .21797 L
s
.5 .24701 m
.50375 .24701 L
s
.5 .27604 m
.50375 .27604 L
s
.5 .33412 m
.50375 .33412 L
s
.5 .36315 m
.50375 .36315 L
s
.5 .39219 m
.50375 .39219 L
s
.5 .42123 m
.50375 .42123 L
s
.5 .4793 m
.50375 .4793 L
s
.5 .50834 m
.50375 .50834 L
s
.5 .53737 m
.50375 .53737 L
s
.5 .56641 m
.50375 .56641 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
.5 Mabswid
.02381 .01472 m
.02499 .01472 L
.02605 .01472 L
.02729 .01472 L
.02846 .01472 L
.02954 .01472 L
.03053 .01472 L
.03163 .01472 L
.03279 .01472 L
.03395 .01472 L
.0352 .01472 L
.03638 .01472 L
.03746 .01472 L
.03873 .01472 L
.03944 .01472 L
.04011 .01472 L
.04132 .01472 L
.04262 .01472 L
.04327 .01472 L
.04396 .01472 L
.04519 .01472 L
.04588 .01472 L
.04652 .01472 L
.04722 .01472 L
.04797 .01472 L
.04862 .01472 L
.04933 .01472 L
.05061 .01472 L
.05186 .01472 L
.05302 .01472 L
.05414 .01472 L
.05519 .01472 L
.05634 .01472 L
.05759 .01472 L
.05882 .01472 L
.06012 .01472 L
.06123 .01472 L
.06244 .01472 L
.06315 .01472 L
.06381 .01472 L
.06453 .01472 L
.06529 .01472 L
.06657 .01472 L
.06729 .01472 L
.06797 .01472 L
.06924 .01472 L
.0704 .01472 L
.07103 .01472 L
.07173 .01472 L
.073 .01472 L
Mistroke
.07376 .01472 L
.07448 .01472 L
.07513 .01472 L
.07583 .01472 L
.0766 .01472 L
.0774 .01472 L
.07809 .01472 L
.07885 .01472 L
.07956 .01472 L
.0802 .01472 L
.08095 .01472 L
.08166 .01472 L
.08291 .01472 L
.08362 .01472 L
.08427 .01472 L
.08544 .01472 L
.08669 .01472 L
.08787 .01472 L
.08896 .01472 L
.09016 .01472 L
.09148 .01472 L
.09214 .01472 L
.09285 .01472 L
.09413 .01472 L
.09483 .01472 L
.09548 .01472 L
.09619 .01472 L
.09695 .01472 L
.09821 .01472 L
.09893 .01472 L
.09961 .01472 L
.10086 .01472 L
.10201 .01472 L
.10333 .01472 L
.10458 .01472 L
.10572 .01472 L
.10694 .01472 L
.1081 .01472 L
.10916 .01472 L
.11033 .01472 L
.11162 .01472 L
.11227 .01472 L
.11297 .01472 L
.11422 .01472 L
.11491 .01472 L
.11554 .01472 L
.11624 .01472 L
.11698 .01472 L
.11822 .01472 L
.11892 .01472 L
Mistroke
.11958 .01472 L
.12081 .01472 L
.12194 .01472 L
.12323 .01472 L
.12446 .01472 L
.12562 .01472 L
.12668 .01472 L
.12789 .01472 L
.12903 .01472 L
.13009 .01472 L
.13107 .01472 L
.13214 .01472 L
.13327 .01472 L
.13441 .01472 L
.13564 .01472 L
.1368 .01472 L
.13785 .01472 L
.13909 .01472 L
.13979 .01472 L
.14043 .01472 L
.14162 .01472 L
.14288 .01472 L
.14402 .01472 L
.14526 .01472 L
.14656 .01472 L
.14777 .01472 L
.14891 .01472 L
.14994 .01472 L
.15113 .01472 L
.15226 .01472 L
.15348 .01472 L
.15478 .01472 L
.15589 .01472 L
.15711 .01472 L
.15842 .01472 L
.15915 .01472 L
.15982 .01472 L
.16113 .01472 L
.16236 .01472 L
.16352 .01472 L
.16456 .01472 L
.16577 .01472 L
.1669 .01472 L
.16796 .01472 L
.16893 .01472 L
.16999 .01472 L
.17111 .01472 L
.17225 .01472 L
.17347 .01472 L
.17462 .01472 L
Mistroke
.17566 .01472 L
.17689 .01472 L
.17758 .01472 L
.17823 .01472 L
.1794 .01472 L
.18065 .01472 L
.18185 .01472 L
.18316 .01472 L
.18441 .01472 L
.18556 .01472 L
.1867 .01472 L
.18773 .01472 L
.18893 .01472 L
.19005 .01472 L
.19128 .01472 L
.19258 .01472 L
.19369 .01472 L
.19491 .01472 L
.19623 .01472 L
.19696 .01472 L
.19763 .01472 L
.19894 .01472 L
.20017 .01472 L
.20122 .01472 L
.20238 .01472 L
.20359 .01472 L
.20472 .01472 L
.20578 .01472 L
.20675 .01472 L
.20781 .01472 L
.20894 .01472 L
.21008 .01472 L
.21129 .01472 L
.21244 .01472 L
.21349 .01472 L
.21472 .01472 L
.21541 .01472 L
.21605 .01472 L
.21723 .01472 L
.21847 .01472 L
.21968 .01472 L
.221 .01472 L
.22224 .01472 L
.2234 .01472 L
.22454 .01472 L
.22558 .01472 L
.22677 .01472 L
.2279 .01472 L
.22914 .01472 L
.23044 .01472 L
Mistroke
.23155 .01472 L
.23277 .01472 L
.23409 .01472 L
.23482 .01472 L
.2355 .01472 L
.2368 .01472 L
.23804 .01472 L
.23909 .01472 L
.24025 .01472 L
.24146 .01472 L
.2426 .01472 L
.24365 .01472 L
.24462 .01472 L
.24569 .01472 L
.24681 .01472 L
.24795 .01472 L
.24917 .01472 L
.25032 .01472 L
.25137 .01472 L
.2526 .01472 L
.25329 .01472 L
.25393 .01472 L
.2551 .01472 L
.25635 .01472 L
.25756 .01472 L
.25888 .01472 L
.26013 .01472 L
.26129 .01472 L
.26233 .01472 L
.26348 .01472 L
.26467 .01472 L
.2658 .01472 L
.26704 .01472 L
.26835 .01472 L
.26946 .01472 L
.27068 .01472 L
.272 .01472 L
.27274 .01472 L
.27341 .01472 L
.27472 .01472 L
.27595 .01472 L
.27701 .01472 L
.27817 .01472 L
.27938 .01472 L
.28052 .01472 L
.28158 .01472 L
.28255 .01472 L
.28367 .01472 L
.28474 .01472 L
.28588 .01472 L
Mistroke
.2871 .01472 L
.28825 .01472 L
.2893 .01472 L
.29053 .01472 L
.29122 .01472 L
.29186 .01472 L
.29303 .01472 L
.29427 .01472 L
.29549 .01472 L
.29618 .01472 L
.29682 .01472 L
.29799 .01472 L
.29923 .01472 L
.30034 .01472 L
.30138 .01472 L
.30252 .01472 L
.30375 .01472 L
.30499 .01472 L
.30569 .01472 L
.30634 .01472 L
.30765 .01472 L
.30839 .01472 L
.30906 .01472 L
.31026 .01472 L
.31156 .01472 L
.31278 .01472 L
.31392 .01472 L
.31497 .01472 L
.31611 .01472 L
.31718 .01472 L
.31816 .01472 L
.3193 .01472 L
.32055 .01472 L
.32173 .01472 L
.32282 .01472 L
.32406 .01472 L
.32522 .01472 L
.32626 .01472 L
.32739 .01472 L
.32862 .01472 L
.32992 .01472 L
.33103 .01472 L
.33225 .01472 L
.33356 .01472 L
.33477 .01472 L
.33541 .01472 L
.3361 .01472 L
.33683 .01472 L
.33751 .01472 L
.33876 .01472 L
Mistroke
.33991 .01472 L
.34123 .01472 L
.34249 .01472 L
.3436 .01472 L
.3448 .01472 L
.34592 .01472 L
.34694 .01472 L
.34814 .01472 L
.34945 .01472 L
.35067 .01472 L
.35181 .01472 L
.35302 .01472 L
.35431 .01472 L
.35554 .01472 L
.35665 .01472 L
.35796 .01472 L
.3587 .01472 L
.35939 .01472 L
.36064 .01472 L
.36128 .01472 L
.36198 .01472 L
.36266 .01472 L
.36337 .01472 L
.36465 .01472 L
.36536 .01472 L
.36602 .01472 L
.36675 .01472 L
.36753 .01472 L
.3682 .01472 L
.36893 .01472 L
.36962 .01472 L
.37026 .01472 L
.37146 .01472 L
.37274 .01472 L
.37394 .01472 L
.37526 .01472 L
.37651 .01472 L
.37766 .01472 L
.3788 .01472 L
.37984 .01472 L
.38103 .01472 L
.38216 .01472 L
.38339 .01472 L
.3847 .01472 L
.38581 .01472 L
.38703 .01472 L
.38834 .01472 L
.38908 .01472 L
.38975 .01472 L
.39106 .01472 L
Mistroke
.39229 .01472 L
.39334 .01472 L
.3945 .01472 L
.39571 .01472 L
.39685 .01472 L
.39791 .01472 L
.39888 .01472 L
.39994 .01472 L
.40106 .01472 L
.40221 .01472 L
.40342 .01472 L
.40457 .01472 L
.40562 .01472 L
.40685 .01472 L
.40754 .01472 L
.40818 .01472 L
.40936 .01472 L
.4106 .01472 L
.41181 .01472 L
.41313 .01472 L
.41438 .01472 L
.41554 .01472 L
.41669 .01472 L
.41772 .01472 L
.41892 .01472 L
.42005 .01472 L
.42129 .01472 L
.42259 .01472 L
.42371 .01472 L
.42493 .01472 L
.42624 .01472 L
.42698 .01472 L
.42765 .01472 L
.42896 .01472 L
.43019 .01472 L
.43125 .01472 L
.43241 .01472 L
.43362 .01472 L
.43476 .01472 L
.43582 .01472 L
.43679 .01472 L
.43791 .01472 L
.43898 .01472 L
.44012 .01472 L
.44134 .01472 L
.44249 .01472 L
.44354 .01472 L
.44477 .01472 L
.44546 .01472 L
.4461 .01472 L
Mistroke
.44727 .01472 L
.44851 .01472 L
.44973 .01472 L
.45042 .01472 L
.45106 .01472 L
.45223 .01472 L
.45347 .01472 L
.45458 .01472 L
.45562 .01472 L
.45676 .01472 L
.45799 .01472 L
.45922 .01472 L
.45992 .01472 L
.46057 .01472 L
.46188 .01472 L
.46262 .01472 L
.46329 .01472 L
.46449 .01472 L
.46579 .01472 L
.46702 .01472 L
.46815 .01472 L
.4692 .01472 L
.47034 .01472 L
.47141 .01472 L
.47239 .01472 L
.47353 .01472 L
.47478 .01472 L
.47596 .01472 L
.47705 .01472 L
.47829 .01472 L
.47945 .01472 L
.48049 .01472 L
.48162 .01472 L
.48285 .01472 L
.48415 .01472 L
.48526 .01472 L
.48648 .01472 L
.48779 .01472 L
.489 .01472 L
.48963 .01472 L
.49033 .01472 L
.49105 .01472 L
.49174 .01472 L
.49299 .01472 L
.49413 .01472 L
.49539 .01472 L
.49671 .01472 L
.49783 .01472 L
.49902 .01472 L
.50014 .60332 L
Mistroke
.50116 .39844 L
.50236 .34556 L
.50366 .31595 L
.50489 .29752 L
.50603 .28473 L
.50853 .26416 L
.51087 .25032 L
.51344 .23851 L
.5162 .22833 L
.52182 .21238 L
.52695 .20126 L
.53685 .18502 L
.54601 .17358 L
.56676 .1545 L
.5854 .1419 L
.60599 .13085 L
.64616 .11443 L
.68481 .10253 L
.72591 .09245 L
.7655 .08447 L
.80357 .07798 L
.84409 .07204 L
.8831 .06707 L
.92456 .06244 L
.96451 .05851 L
.97619 .05744 L
Mfstroke
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{43, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ
0?ooo`00303oool500000080oooo0P00000l0?ooo`800000O@3oool2000003/0oooo1@0000020?oo
o`8000002P3oool000h0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo
03P0oooo00@000000?ooo`3oool00000N`3oool010000000oooo0?ooo`00000l0?ooo`050000003o
ool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`070?ooo`003P3oool01@000000oooo0?oo
o`3oool000000080oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`1l0?ooo`030000
003oool0oooo03X0oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo00L0
oooo00060?ooo`@00000103oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3o
ool0<P3oool4000000<0oooo0P00001m0?ooo`800000?@3oool01@000000oooo0?ooo`3oool00000
0080oooo00<000000?ooo`3oool01`3oool000h0oooo00D000000?ooo`3oool0oooo000000020?oo
o`030000003oool0oooo03T0oooo00<000000?ooo`3oool0O03oool00`000000oooo0?ooo`0l0?oo
o`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`070?ooo`003@3oool20000
00@0oooo0P00000l0?ooo`<00000O03oool3000003/0oooo0P0000040?ooo`8000002P3oool00?l0
oooo8@3oool00900oooo00<000000?ooo`3oool0S@3oool00900oooo00<000000?ooo`3oool0S@3o
ool00900oooo00<000000?ooo`3oool0S@3oool00900oooo00<000000?ooo`3oool0S@3oool000P0
ooooo`00000C000000H0oooo000>0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`0;0?ooo`003P3oool00`000000oooo0?ooo`0n0?ooo`030000003o
ool0oooo03h0oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`0n0?ooo`030000003o
ool0oooo00/0oooo002@0?ooo`030000003oool0oooo08d0oooo002@0?ooo`030000003oool0oooo
08d0oooo002@0?ooo`030000003oool0oooo08d0oooo002@0?ooo`030000003oool0oooo08d0oooo
002@0?ooo`030000003oool0oooo08d0oooo002@0?ooo`800000SP3oool00900oooo00<000000?oo
o`3oool0S@3oool00900oooo00<000000?ooo`3oool0S@3oool00900oooo00<000000?ooo`3oool0
S@3oool00900oooo00<000000?ooo`3oool0M`3oool9000000d0oooo002@0?ooo`030000003oool0
oooo06`0oooo2`00000F0?ooo`00T03oool00`000000oooo0?ooo`1T0?ooo`P000008@3oool00900
oooo00<000000?ooo`3oool0GP3oool6000002T0oooo002@0?ooo`800000E`3oool8000002l0oooo
002@0?ooo`030000003oool0oooo04h0oooo2000000g0?ooo`00T03oool00`000000oooo0?ooo`19
0?ooo`D00000?`3oool00900oooo00<000000?ooo`3oool0A03oool5000004@0oooo002@0?ooo`03
0000003oool0oooo03h0oooo1P0000190?ooo`00T03oool00`000000oooo0?ooo`0j0?ooo`@00000
C`3oool00900oooo00<000000?ooo`3oool0=P3oool4000005<0oooo002@0?ooo`030000003oool0
oooo0380oooo1000001G0?ooo`00T03oool200000300oooo0`00001K0?ooo`00T03oool00`000000
oooo0?ooo`0[0?ooo`@00000GP3oool00900oooo00<000000?ooo`3oool09`3oool400000680oooo
002@0?ooo`030000003oool0oooo02@0oooo0`00001V0?ooo`00T03oool00`000000oooo0?ooo`0R
0?ooo`800000J@3oool00900oooo00<000000?ooo`3oool0803oool2000006/0oooo002@0?ooo`03
0000003oool0oooo01h0oooo0P00001]0?ooo`00T03oool00`000000oooo0?ooo`0L0?ooo`800000
K`3oool00900oooo0P00000K0?ooo`800000L@3oool00900oooo00<000000?ooo`3oool0603oool2
000007<0oooo002@0?ooo`030000003oool0oooo01H0oooo0P00001e0?ooo`00T03oool00`000000
oooo0?ooo`0E0?ooo`030000003oool0oooo07D0oooo002@0?ooo`030000003oool0oooo01<0oooo
0P00001h0?ooo`00T03oool00`000000oooo0?ooo`0A0?ooo`800000NP3oool007d0oooo0P000004
0?ooo`8000000`3oool5000000<0oooo00<000000?ooo`3oool03`3oool2000007`0oooo001l0?oo
o`040000003oool0oooo000000X0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0>
0?ooo`030000003oool0oooo07`0oooo001l0?ooo`040000003oool0oooo000000X0oooo00<00000
0?ooo`3oool00`3oool3000000d0oooo00<000000?ooo`3oool0O@3oool007`0oooo00@000000?oo
o`3oool000002P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00`0oooo00<00000
0?ooo`3oool0OP3oool007`0oooo00@000000?ooo`3oool000002P3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0O`3oool007d0oooo0P00000:0?oo
o`8000001@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0800oooo002@0?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool0P@3oool00900oooo00<000000?ooo`3oool0
203oool00`000000oooo0?ooo`220?ooo`00T03oool00`000000oooo0?ooo`070?ooo`030000003o
ool0oooo08<0oooo002@0?ooo`800000203oool00`000000oooo0?ooo`230?ooo`00T03oool00`00
0000oooo0?ooo`060?ooo`030000003oool0oooo08@0oooo002@0?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool0Q03oool00900oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`250?ooo`00T03oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo08D0oooo002@
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0QP3oool00900oooo00<000000?oo
o`3oool0103oool00`000000oooo0?ooo`260?ooo`00T03oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo08L0oooo002@0?ooo`800000103oool00`000000oooo0?ooo`270?ooo`00T03o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo08P0oooo002@0?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0R03oool00900oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`280?ooo`00T03oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo08P0
oooo002@0?ooo`050000003oool0oooo0?ooo`000000R`3oool00900oooo00D000000?ooo`3oool0
oooo0000002;0?ooo`00T03oool01@000000oooo0?ooo`3oool0000008/0oooo002@0?ooo`800000
00<0oooo0000003oool0R`3oool00900oooo00@000000?ooo`3oool00000S03oool00900oooo00@0
00000?ooo`3oool00000S03oool00900oooo00@000000?ooo`3oool00000S03oool00900oooo00@0
00000?ooo`3oool00000S03oool00900oooo00@000000?ooo`3oool00000S03oool00900oooo00@0
00000?ooo`3oool00000S03oool00900oooo00@000000?ooo`3oool00000S03oool00900oooo0`00
002=0?ooo`00T03oool00`000000oooo0000002=0?ooo`00T03oool00`000000oooo0000002=0?oo
o`00T03oool00`000000oooo0000002=0?ooo`00T03oool00`000000oooo0000002=0?ooo`00T03o
ool00`000000oooo0000002=0?ooo`00O@3oool2000000@0oooo0P0000030?ooo`@00000103oool0
0`000000oooo0000002=0?ooo`00O03oool010000000oooo0?ooo`0000080?ooo`030000003oool0
oooo00D0oooo00<000000?ooo`000000S@3oool007`0oooo00@000000?ooo`3oool000002@3oool0
0`000000oooo0?ooo`040?ooo`<00000S@3oool007`0oooo00@000000?ooo`3oool000002P3oool0
0`000000oooo0?ooo`030?ooo`800000SP3oool007`0oooo00@000000?ooo`3oool00000203oool0
10000000oooo0?ooo`0000040?ooo`800000SP3oool007d0oooo0P00000:0?ooo`8000001@3oool2
000008h0oooo002@0?ooo`800000SP3oool00900oooo0P00002>0?ooo`00T03oool2000008h0oooo
002@0?ooo`800000SP3oool00900oooo0P00002>0?ooo`00T03oool2000008h0oooo002@0?ooo`80
0000SP3oool00900oooo0P00002>0?ooo`00T03oool2000008h0oooo002@0?ooo`800000SP3oool0
0900oooo0P00002>0?ooo`00T03oool2000008h0oooo002@0?ooo`800000SP3oool00900oooo0P00
002>0?ooo`00T03oool2000008h0oooo002@0?ooo`800000SP3oool00900oooo0P00002>0?ooo`00
T03oool2000008h0oooo002@0?ooo`800000SP3oool00900oooo0P00002>0?ooo`00T03oool20000
08h0oooo002@0?ooo`800000SP3oool00900oooo0P00002>0?ooo`00T03oool2000008h0oooo002@
0?ooo`800000SP3oool00900oooo0P00002>0?ooo`00T03oool2000008h0oooo002@0?ooo`800000
SP3oool00900oooo0P00002>0?ooo`00T03oool2000008h0oooo002@0?ooo`800000SP3oool00900
oooo0P00002>0?ooo`00T03oool2000008h0oooo002@0?ooo`800000SP3oool007d0oooo0P000004
0?ooo`800000103oool2000000D0oooo0P00002>0?ooo`00O03oool010000000oooo0?ooo`000008
0?ooo`040000003oool0oooo000000@0oooo0P00002>0?ooo`00O03oool010000000oooo0?ooo`00
000:0?ooo`030000003oool0oooo00<0oooo0`00002=0?ooo`00O03oool010000000oooo0?ooo`00
000;0?ooo`030000003oool0oooo0080oooo0P00002>0?ooo`00O03oool010000000oooo0?ooo`00
00080?ooo`040000003oool0oooo000000@0oooo0P00002>0?ooo`00O@3oool2000000X0oooo0P00
00050?ooo`800000SP3oool00900oooo0P00002>0?ooo`00T03oool2000008h0oooo002@0?ooo`80
0000SP3oool00900oooo0P00002>0?ooo`00T03oool2000008h0oooo002@0?ooo`800000SP3oool0
0900oooo0P00002>0?ooo`00T03oool2000008h0oooo002@0?ooo`800000SP3oool00900oooo0P00
002>0?ooo`00T03oool00`000000oooo0?ooo`2=0?ooo`00T03oool00`000000oooo0?ooo`2=0?oo
o`00T03oool2000008h0oooo002@0?ooo`030000003oool0oooo08d0oooo002@0?ooo`030000003o
ool0oooo08d0oooo002@0?ooo`030000003oool0oooo08d0oooo002@0?ooo`030000003oool0oooo
08d0oooo002@0?ooo`030000003oool0oooo08d0oooo002@0?ooo`030000003oool0oooo08d0oooo
002@0?ooo`030000003oool0oooo08d0oooo002@0?ooo`800000SP3oool00900oooo00<000000?oo
o`3oool0S@3oool00900oooo00<000000?ooo`3oool0S@3oool00900oooo00<000000?ooo`3oool0
S@3oool00900oooo00<000000?ooo`3oool0S@3oool00900oooo00<000000?ooo`3oool0S@3oool0
0900oooo00<000000?ooo`3oool0S@3oool00900oooo0P00002>0?ooo`00T03oool00`000000oooo
0?ooo`2=0?ooo`00T03oool00`000000oooo0?ooo`2=0?ooo`00T03oool00`000000oooo0?ooo`2=
0?ooo`00T03oool00`000000oooo0?ooo`2=0?ooo`00T03oool00`000000oooo0?ooo`2=0?ooo`00
O@3oool2000000@0oooo0P0000050?ooo`<000000`3oool00`000000oooo0?ooo`2=0?ooo`00O03o
ool010000000oooo0?ooo`00000;0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
S@3oool007`0oooo00@000000?ooo`3oool00000203oool5000000<0oooo0`00002=0?ooo`00O03o
ool010000000oooo0?ooo`0000080?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3o
ool0S@3oool007`0oooo00@000000?ooo`3oool000002@3oool00`000000oooo000000040?ooo`03
0000003oool0oooo08d0oooo001m0?ooo`8000002`3oool2000000@0oooo00<000000?ooo`3oool0
S@3oool00900oooo00<000000?ooo`3oool0S@3oool00900oooo00<000000?ooo`3oool0S@3oool0
0900oooo00<000000?ooo`3oool0S@3oool00001\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-11.1468, -0.0313402, \
0.0770056, 0.00252573}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[BoxData[
    \(Mutate[list_, start_Real | start_Integer, end_List, mr_] := 
      Block[{a, b, l = Length[end]}, \[IndentingNewLine]startend = 
          Flatten[Table[
              Transpose[{Table[start, {l}], end}], {Length[Flatten[list]]}], 
            1]; \[IndentingNewLine]a = Flatten[list]; \[IndentingNewLine]b = 
          Table[Random[
              Real, {0, 1}], {Length[
                Flatten[a]]}]; \[IndentingNewLine]f = \(Block[{a, b, 
                  c = #\[LeftDoubleBracket]1\[RightDoubleBracket], 
                  d = #\[LeftDoubleBracket]2\[RightDoubleBracket], 
                  e = #\[LeftDoubleBracket]3\[RightDoubleBracket], 
                  f = If[Random[Integer, {0, 1}] === 0, \(-1\), 
                      1]}, \[IndentingNewLine]If[
                  d < mr, \[IndentingNewLine]While[\(c + f*# > 
                            e\[LeftDoubleBracket]2\[RightDoubleBracket] || 
                          c + f*# < 
                            e\[LeftDoubleBracket]1\[RightDoubleBracket] &\)[
                      a = \(If[
                              Random[Integer, {0, 1}] === 0, \(-1\)*#, #] &\)[
                          Random[
                            WeibullDistribution[0.8, 
                              Max[e]*2]]]]]; \[IndentingNewLine]c + 
                    f*a, \[IndentingNewLine]c]] &\) /@ 
            MapThread[
              List, {a, b, 
                startend}]; \[IndentingNewLine]f\[IndentingNewLine]]\)], \
"Input",
  InitializationCell->True],

Cell[BoxData[
    \(Mutate[list_, start_List, end_Real | end_Integer, mr_] := 
      Block[{a, b, l = Length[start]}, \[IndentingNewLine]startend = 
          Flatten[Table[
              Transpose[{start, Table[end, {l}]}], {Length[Flatten[list]]}], 
            1]; \[IndentingNewLine]a = Flatten[list]; \[IndentingNewLine]b = 
          Table[Random[
              Real, {0, 1}], {Length[
                Flatten[a]]}]; \[IndentingNewLine]f = \(Block[{a, b, 
                  c = #\[LeftDoubleBracket]1\[RightDoubleBracket], 
                  d = #\[LeftDoubleBracket]2\[RightDoubleBracket], 
                  e = #\[LeftDoubleBracket]3\[RightDoubleBracket], 
                  f = If[Random[Integer, {0, 1}] === 0, \(-1\), 
                      1]}, \[IndentingNewLine]If[
                  d < mr, \[IndentingNewLine]While[\(c + f*# > 
                            e\[LeftDoubleBracket]2\[RightDoubleBracket] || 
                          c + f*# < 
                            e\[LeftDoubleBracket]1\[RightDoubleBracket] &\)[
                      a = \(If[
                              Random[Integer, {0, 1}] === 0, \(-1\)*#, #] &\)[
                          Random[
                            WeibullDistribution[0.8, 
                              Max[e]*2]]]]]; \[IndentingNewLine]c + 
                    f*a, \[IndentingNewLine]c]] &\) /@ 
            MapThread[
              List, {a, b, 
                startend}]; \[IndentingNewLine]f\[IndentingNewLine]]\)], \
"Input",
  InitializationCell->True],

Cell[BoxData[
    \(Mutate[list_, start_Real | start_Integer, end_Real | end_Integer, mr_] := 
      Block[{a, b, 
          l = Length[
              list\[LeftDoubleBracket]1\[RightDoubleBracket]]}, \
\[IndentingNewLine]startend = 
          Flatten[Table[
              Transpose[{Table[start, {l}], Table[end, {l}]}], {Length[
                  Flatten[list]]}], 1]; \[IndentingNewLine]a = 
          Flatten[list]; \[IndentingNewLine]b = 
          Table[Random[
              Real, {0, 1}], {Length[
                Flatten[a]]}]; \[IndentingNewLine]f = \(Block[{a, b, 
                  c = #\[LeftDoubleBracket]1\[RightDoubleBracket], 
                  d = #\[LeftDoubleBracket]2\[RightDoubleBracket], 
                  e = #\[LeftDoubleBracket]3\[RightDoubleBracket], 
                  f = If[Random[Integer, {0, 1}] === 0, \(-1\), 
                      1]}, \[IndentingNewLine]If[
                  d < mr, \[IndentingNewLine]While[\(c + f*# > 
                            e\[LeftDoubleBracket]2\[RightDoubleBracket] || 
                          c + f*# < 
                            e\[LeftDoubleBracket]1\[RightDoubleBracket] &\)[
                      a = \(If[
                              Random[Integer, {0, 1}] === 0, \(-1\)*#, #] &\)[
                          Random[
                            WeibullDistribution[0.8, 
                              Max[e]*2]]]]]; \[IndentingNewLine]c + 
                    f*a, \[IndentingNewLine]c]] &\) /@ 
            MapThread[
              List, {a, b, 
                startend}]; \[IndentingNewLine]f\[IndentingNewLine]]\)], \
"Input",
  InitializationCell->True],

Cell[BoxData[
    \(GetIterationNumber[] := iterationno\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(MakeLimits[l_, start_Real | start_Integer, end_Real | end_Integer] := 
      Transpose[{Table[start, {l}], Table[end, {l}]}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(MakeLimits[l_, start_List, end_Real | end_Integer] := 
      Transpose[{start, Table[end, {l}]}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(MakeLimits[l_, start_Real | start_Integer, end_List] := 
      Transpose[{Table[start, {l}], end}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(MakeLimits[l_, start_List, end_List] := 
      Transpose[{start, end}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    RowBox[{\(EPOptimise[function_, nochroms_, iters_, pc_:  0.25, 
        mr_:  0.01, nogenes_, start_, end_, opts___]\), ":=", 
      RowBox[{"Block", "[", 
        RowBox[{\({a, probs, b, c, alldata, current, 
            best = {\(-\[Infinity]\), 0}}\), ",", "\[IndentingNewLine]", 
          
          RowBox[{\(startgene = \(Global`Start /. {opts}\) /. {Global`Start \
\[Rule] Null}\), ";", 
            "\[IndentingNewLine]", \(converge = \(Global`Convergence /. \
{opts}\) /. {Global`Convergence \[Rule] \[Infinity]}\), ";", 
            "\[IndentingNewLine]", \(selectmethod = 
              ToExpression["\<EPOptimise`Private`Selection\>" <> 
                  ToString[\(If[
                          MemberQ[
                            selectionmethods, #], \
\[IndentingNewLine]Print["\<Using SelectionMethod \[Rule] \>" <> 
                              ToString[#]]; \[IndentingNewLine]#, 
                          Print["\<SelectionMethod not recognised: Using \
Roulette\n\>"]; \[IndentingNewLine]Global`Roulette] \
&\)[\(Global`SelectionMethod /. {opts}\) /. {Global`SelectionMethod \[Rule] 
                            Roulette}]]]\), 
            ";", \(Print["\<Methods \[Rule] Roulette, Universal, Truncation \
(TruncationThreshold) and Tournament (TournamentNumber)\>"]\), 
            ";", \(printedsetting = False\), ";", 
            "\[IndentingNewLine]", \(ruttingpopulationsize = \
\(Global`BreedingPool /. {opts}\) /. {Global`BreedingPool \[Rule] nochroms}\),
             ";", "\[IndentingNewLine]", \(If[
              ruttingpopulationsize < nochroms || 
                selectmethod === EPOptimise`Private`SelectionTruncation, 
              reinsertmethod = 
                ToExpression["\<EPOptimise`Private`Reinsert\>" <> 
                    ToString[\(If[
                            MemberQ[
                              reinsertionmethods, #], \
\[IndentingNewLine]Print["\<Using ReinsertionMethod \[Rule] \>" <> 
                                ToString[#] <> "\<\nBreedingPool < Population \
\[Rule] Methods: Elitist and Uniform\>"]; #, \
\[IndentingNewLine]Print["\<ReinsertionMethod not recognised: Using Elitist\n\
BreedingPool < Population \[Rule] Methods: Elitist and Uniform\>"]; \
\[IndentingNewLine]Global`Elitist] &\)[\(Global`ReinsertionMethod /. {opts}\) \
/. {Global`ReinsertionMethod \[Rule] Elitist}]]], \[IndentingNewLine]If[
                ruttingpopulationsize > 
                  nochroms, \[IndentingNewLine]Print["\<Using \
ReinsertionMethod \[Rule] Fitness (BreedingPool > Population)\>"]; \
\[IndentingNewLine]reinsertmethod = 
                  EPOptimise`Private`ReinsertFitness, \
\[IndentingNewLine]Print["\<Using ReinsertionMethod \[Rule] Pure \
(BreedingPool == Population)\>"]; \[IndentingNewLine]reinsertmethod = 
                  EPOptimise`Private`ReinsertPure;\[IndentingNewLine]]\
\[IndentingNewLine]]\), ";", 
            "\[IndentingNewLine]", \(betafactor = \(Global`\[Beta]Factor /. \
{opts}\) /. {Global`\[Beta]Factor \[Rule] 3}\), ";", 
            "\[IndentingNewLine]", \(Print["\<Using \[Beta]Factor \[Rule] \
\>", betafactor]\), ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", \(limits = 
              MakeLimits[nogenes, start, end]\), ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", \(SeedRandom[]\), ";", 
            "\[IndentingNewLine]", \(alldata = \(Global`AllData /. {opts}\) /. \
{Global`AllData \[Rule] True}\), ";", 
            "\[IndentingNewLine]", \(FitnessValue[x___] := function[x]\), ";",
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
              
              RowBox[{\(startgene === Null\), 
                ",", \(population = 
                  CreateChrom[nochroms, nogenes, start, end]\), ",", 
                "\[IndentingNewLine]", 
                RowBox[{"population", "=", 
                  RowBox[{"Join", "[", 
                    RowBox[{
                      RowBox[{"{", 
                        FormBox["startgene",
                          "InputForm"], "}"}], 
                      ",", \(CreateChrom[nochroms - 1, nogenes, start, 
                        end]\)}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
            ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", \(fitdata = {}\), ";", \(rawdata = {}\), 
            ";", "\[IndentingNewLine]", \( (*\(Print["\<Starting population = \
\>", population];\)*) \), "\[IndentingNewLine]", 
            RowBox[{
            "Do", "[", 
              "\[IndentingNewLine]", \( (*\(Print["\<Population = \>", 
                    population];\)*) \), "\[IndentingNewLine]", 
              RowBox[{
                
                RowBox[{\(AppendTo[rawdata, population]\), ";", 
                  "\[IndentingNewLine]", \(SeedRandom[]\), ";", 
                  "\[IndentingNewLine]", \(breedinglist = {}\), ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ruttingpopulation", "=", 
                    RowBox[{"selectmethod", "[", 
                      RowBox[{"population", ",", 
                        RowBox[{"CumulativeProbabilities", "[", 
                          RowBox[{
                            FormBox["population",
                              "InputForm"], ",", 
                            FormBox["nogenes",
                              "InputForm"], ",", "start", ",", "end", ",", 
                            "rawdata", ",", "fitdata"}], "]"}], ",", 
                        "ruttingpopulationsize", ",", "opts"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", \( (*\(Print["\<breedinglist = \>", 
                        breedinglist];\)*) \), "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", \( (*\(Print["\<Rutting population = \
\>", ruttingpopulation];\)*) \), "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", \(If[
                    Length[breedinglist] > 
                      1, \[IndentingNewLine]breedingpopulation = 
                      SelectforCrossover[ruttingpopulation, 
                        Length[breedinglist], 
                        pc]; \[IndentingNewLine]newpopulation = 
                      Crossover[breedingpopulation, crossoverlist, 
                        Transpose[{start, end}], 
                        betafactor];, \[IndentingNewLine]crossoverlist = {1}; \
\[IndentingNewLine]newpopulation = ruttingpopulation;\[IndentingNewLine]]\), 
                  ";", "\[IndentingNewLine]", \( (*\(Print["\<crossoverlist = \
\>", crossoverlist];\)*) \), 
                  "\[IndentingNewLine]", \( (*\(Print["\<Crossover List = \
\>", crossoverlist];\)*) \), 
                  "\[IndentingNewLine]", \( (*\(Print["\<New population = \
\>", newpopulation];\)*) \), 
                  "\[IndentingNewLine]", \(population = 
                    reinsertmethod[population, newpopulation, 
                      breedinglist\[LeftDoubleBracket]crossoverlist\
\[RightDoubleBracket], start, end]\), ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", \(population = 
                    Mutate[population, start, end, mr]\), ";", 
                  "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", \( (*\(Print["\<Final population = \
\>", population];\)*) \), 
                  "\[IndentingNewLine]", \(If[\((current = \
\((\(Union[\(MapThread[List, {Flatten[fitdata, 1], 
                                        Flatten[rawdata, 
                                        1]}]\)\[LeftDoubleBracket]#\
\[RightDoubleBracket]] &\)[\(Position[Flatten[fitdata, 1], 
                                    Max[Flatten[fitdata, 
                                        1]]]\)\[LeftDoubleBracket]1, 
                                  1\[RightDoubleBracket]])\))\)\
\[LeftDoubleBracket]1\[RightDoubleBracket] > 
                      best\[LeftDoubleBracket]1\[RightDoubleBracket], 
                    best = current; 
                    Print[i, "\<. \>", "\<New Fit Value \[Rule] \>", 
                      best\[LeftDoubleBracket]1\[RightDoubleBracket], "\<\t\
Raw Value \[Rule] \>", best\[LeftDoubleBracket]2\[RightDoubleBracket]]]\), 
                  ";", "\[IndentingNewLine]", \(If[
                    best\[LeftDoubleBracket]1\[RightDoubleBracket] >= 
                      converge, Break[]]\), ";", 
                  "\[IndentingNewLine]", \(iterationno = i\), ";"}], ",", 
                "\[IndentingNewLine]", \({i, 1, iters}\)}], "]"}], ";", 
            "\[IndentingNewLine]", 
            "\[IndentingNewLine]", \(If[
              alldata, {Union[\(Extract[rawdata, #] &\) /@ 
                    Position[fitdata, Max[fitdata]]], \(MapThread[
                      List, {#\[LeftDoubleBracket]1\[RightDoubleBracket], #\
\[LeftDoubleBracket]2\[RightDoubleBracket]}] &\) /@ 
                  MapThread[List, {rawdata, fitdata}]}]\), ";", 
            "\[IndentingNewLine]", \(Print["\<Best Results: \>"]\), 
            ";", \((\(Union[\(MapThread[
                        List, {Flatten[fitdata, 1], 
                          Flatten[rawdata, 
                            1]}]\)\[LeftDoubleBracket]#\[RightDoubleBracket]] \
&\)[\(Position[Flatten[fitdata, 1], 
                    Max[Flatten[fitdata, 1]]]\)\[LeftDoubleBracket]1, 
                  1\[RightDoubleBracket]])\)}]}], "\[IndentingNewLine]", 
        "]"}]}]], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(End[]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("EPOptimise`Private`"\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(EndPackage[]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Open  ]]
},
FrontEndVersion->"5.1 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 950}},
AutoGeneratedPackage->Automatic,
WindowSize->{1272, 923},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 139, 3, 30, "Input",
  InitializationCell->True],
Cell[1896, 56, 319, 5, 50, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[2240, 65, 214, 4, 30, "Input",
  InitializationCell->True],
Cell[2457, 71, 159, 2, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2653, 78, 254, 4, 50, "Input",
  InitializationCell->True],
Cell[2910, 84, 193, 3, 124, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[3140, 92, 421, 7, 90, "Input",
  InitializationCell->True],
Cell[3564, 101, 365, 5, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[3966, 111, 440, 7, 90, "Input",
  InitializationCell->True],
Cell[4409, 120, 383, 5, 67, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[4829, 130, 492, 7, 90, "Input",
  InitializationCell->True],
Cell[5324, 139, 436, 6, 67, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5797, 150, 267, 4, 70, "Input",
  InitializationCell->True],
Cell[6067, 156, 202, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[6306, 164, 331, 5, 70, "Input",
  InitializationCell->True],
Cell[6640, 171, 275, 4, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[6952, 180, 240, 4, 30, "Input",
  InitializationCell->True],
Cell[7195, 186, 156, 2, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7388, 193, 291, 5, 70, "Input",
  InitializationCell->True],
Cell[7682, 200, 231, 3, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7950, 208, 505, 7, 90, "Input",
  InitializationCell->True],
Cell[8458, 217, 451, 6, 67, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[8946, 228, 465, 7, 90, "Input",
  InitializationCell->True],
Cell[9414, 237, 402, 6, 105, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[9853, 248, 275, 5, 70, "Input",
  InitializationCell->True],
Cell[10131, 255, 223, 3, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[10391, 263, 243, 4, 50, "Input",
  InitializationCell->True],
Cell[10637, 269, 190, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[10864, 277, 242, 4, 50, "Input",
  InitializationCell->True],
Cell[11109, 283, 189, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[11335, 291, 417, 6, 90, "Input",
  InitializationCell->True],
Cell[11755, 299, 364, 5, 48, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12156, 309, 145, 3, 30, "Input",
  InitializationCell->True],
Cell[12304, 314, 84, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12425, 320, 83, 2, 30, "Input",
  InitializationCell->True],
Cell[12511, 324, 55, 1, 29, "Output"]
}, Open  ]],
Cell[12581, 328, 50, 1, 30, "Input"],
Cell[12634, 331, 92, 2, 30, "Input",
  InitializationCell->True],
Cell[12729, 335, 167, 4, 30, "Input",
  InitializationCell->True],
Cell[12899, 341, 577, 11, 110, "Input"],
Cell[13479, 354, 407, 8, 70, "Input",
  InitializationCell->True],
Cell[13889, 364, 418, 8, 70, "Input",
  InitializationCell->True],
Cell[14310, 374, 51, 1, 30, "Input"],
Cell[14364, 377, 325, 6, 30, "Input",
  InitializationCell->True],
Cell[14692, 385, 308, 7, 30, "Input",
  InitializationCell->True],
Cell[15003, 394, 295, 6, 30, "Input",
  InitializationCell->True],
Cell[15301, 402, 248, 5, 30, "Input",
  InitializationCell->True],
Cell[15552, 409, 146, 3, 30, "Input",
  InitializationCell->True],
Cell[15701, 414, 544, 10, 70, "Input",
  InitializationCell->True],
Cell[16248, 426, 397, 8, 110, "Input",
  InitializationCell->True],
Cell[16648, 436, 153, 3, 30, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[16826, 443, 162, 3, 30, "Input",
  InitializationCell->True],
Cell[16991, 448, 114, 2, 29, "Output"]
}, Open  ]],
Cell[17120, 453, 417, 9, 70, "Input",
  InitializationCell->True],
Cell[17540, 464, 446, 9, 84, "Input",
  InitializationCell->True],
Cell[17989, 475, 1527, 30, 230, "Input",
  InitializationCell->True],
Cell[19519, 507, 982, 18, 110, "Input",
  InitializationCell->True],
Cell[20504, 527, 180, 4, 30, "Input",
  InitializationCell->True],
Cell[20687, 533, 86, 2, 30, "Input",
  InitializationCell->True],
Cell[20776, 537, 2950, 57, 710, "Input",
  InitializationCell->True],
Cell[23729, 596, 47, 1, 30, "Input"],
Cell[23779, 599, 452, 8, 110, "Input",
  InitializationCell->True],
Cell[24234, 609, 48, 1, 30, "Input"],
Cell[24285, 612, 271, 6, 42, "Input",
  InitializationCell->True],
Cell[24559, 620, 439, 8, 39, "Input",
  InitializationCell->True],
Cell[25001, 630, 908, 22, 280, "Text",
  InitializationCell->True],
Cell[25912, 654, 1691, 29, 250, "Input",
  InitializationCell->True],
Cell[27606, 685, 26, 0, 33, "Text"],
Cell[27635, 687, 1134, 22, 223, "Text",
  InitializationCell->True],
Cell[28772, 711, 84, 1, 30, "Input"],
Cell[28859, 714, 45, 1, 30, "Input"],

Cell[CellGroupData[{
Cell[28929, 719, 307, 5, 30, "Input"],
Cell[29239, 726, 26765, 989, 186, 10224, 780, "GraphicsData", "PostScript", \
"Graphics"],
Cell[56007, 1717, 130, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[56174, 1725, 165, 3, 30, "Input"],
Cell[56342, 1730, 29282, 903, 186, 8133, 637, "GraphicsData", "PostScript", \
"Graphics"],
Cell[85627, 2635, 130, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[85794, 2643, 49, 1, 30, "Input"],
Cell[85846, 2646, 80, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[85963, 2652, 166, 3, 30, "Input"],
Cell[86132, 2657, 52, 1, 25, "Print"],
Cell[86187, 2660, 38, 1, 25, "Print"],
Cell[86228, 2663, 53, 1, 25, "Print"],
Cell[86284, 2666, 52, 1, 25, "Print"],
Cell[86339, 2669, 77, 1, 29, "Output"]
}, Open  ]],
Cell[86431, 2673, 561, 10, 110, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[87017, 2687, 114, 2, 30, "Input",
  InitializationCell->True],
Cell[87134, 2691, 66, 1, 29, "Output"]
}, Open  ]],
Cell[87215, 2695, 385, 8, 50, "Input",
  InitializationCell->True],
Cell[87603, 2705, 1042, 20, 190, "Input",
  InitializationCell->True],
Cell[88648, 2727, 350, 6, 70, "Input",
  InitializationCell->True],
Cell[89001, 2735, 590, 12, 110, "Input",
  InitializationCell->True],
Cell[89594, 2749, 741, 13, 110, "Input",
  InitializationCell->True],
Cell[90338, 2764, 470, 12, 166, "Text",
  InitializationCell->True],
Cell[90811, 2778, 791, 16, 150, "Input",
  InitializationCell->True],
Cell[91605, 2796, 99, 2, 30, "Input",
  InitializationCell->True],
Cell[91707, 2800, 1433, 26, 230, "Input"],

Cell[CellGroupData[{
Cell[93165, 2830, 60, 1, 30, "Input"],
Cell[93228, 2833, 55, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[93320, 2839, 161, 4, 30, "Input"],
Cell[93484, 2845, 94839, 2466, 186, 15612, 1483, "GraphicsData", \
"PostScript", "Graphics"],
Cell[188326, 5313, 130, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[188493, 5321, 123, 2, 30, "Input"],
Cell[188619, 5325, 19709, 801, 186, 10271, 680, "GraphicsData", "PostScript", \
"Graphics"],
Cell[208331, 6128, 130, 3, 29, "Output"]
}, Open  ]],
Cell[208476, 6134, 1521, 28, 230, "Input",
  InitializationCell->True],
Cell[210000, 6164, 1521, 28, 230, "Input",
  InitializationCell->True],
Cell[211524, 6194, 1635, 32, 230, "Input",
  InitializationCell->True],
Cell[213162, 6228, 96, 2, 30, "Input",
  InitializationCell->True],
Cell[213261, 6232, 185, 3, 30, "Input",
  InitializationCell->True],
Cell[213449, 6237, 157, 3, 30, "Input",
  InitializationCell->True],
Cell[213609, 6242, 159, 3, 30, "Input",
  InitializationCell->True],
Cell[213771, 6247, 131, 3, 30, "Input",
  InitializationCell->True],
Cell[213905, 6252, 9430, 165, 1470, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[223360, 6421, 66, 2, 30, "Input",
  InitializationCell->True],
Cell[223429, 6425, 55, 1, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[223521, 6431, 73, 2, 30, "Input",
  InitializationCell->True],
Cell[223597, 6435, 42, 1, 29, "Output"]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

