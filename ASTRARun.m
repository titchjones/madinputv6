(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
BeginPackage["ASTRARun`"]


(* ::Input::Initialization:: *)
$ASTRAExecutable="Astra.exe";


(* ::Input::Initialization:: *)
ASTRARun::usage="ASTRARun[filename]"


(* ::Input::Initialization:: *)
ASTRARunInteractive::usage"ASTRARunInteractive[filename,opts];\nOutput\[Rule]True prints output from ASTRA to the screen"


(* ::Input::Initialization:: *)
Begin["`Private`"];


(* ::Input::Initialization:: *)
ASTRARun[filename_]:=Block[{dir,output},
dir=Directory[];
SetDirectory[DirectoryName[filename]];
output=ReadList["!"<>$ASTRAExecutable<>" \""<>FileBaseName[filename]<>"\"",Record];
SetDirectory[dir];
output
]


(* ::Input::Initialization:: *)
Clear[ASTRARunInteractive];
ASTRARunInteractive[filename_,opts___Rule]:=Block[{dir,output,process,verbose,nolines=0},
scrollposition={1,1};
verbose=Global`Output/.{opts}/.{Global`Output->True};
processString="";
dir=Directory[];
SetDirectory[DirectoryName[filename]];
process=StartProcess[{$ASTRAExecutable,"\""<>FileBaseName[filename]<>"\""}];
If[verbose,
Quiet@Print[Column[{
Pane[Dynamic[processString],ImageSize->{800,400},Scrollbars->{False,True},ScrollPosition->Dynamic[scrollposition]],
Button["Kill!",KillProcess[process];]
}]];
Pause[.1];
While[ProcessStatus[process,"Running"],
processString=processString<>Quiet[Check[ReadString[process,EndOfBuffer],""]];
If[StringCount[processString,"\n"]>nolines,
nolines=StringCount[processString,"\n"];
(*scrollposition={-1,nolines*33};*)
];
Pause[.1];
];
];
SetDirectory[dir];
]


(* ::Input::Initialization:: *)
End[]


(* ::Input::Initialization:: *)
EndPackage[]
