(************** Content-type: application/mathematica **************

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    330560,      10260]*)
(*NotebookOutlinePosition[    354700,      10881]*)
(*  CellTagsIndexPosition[    354290,      10866]*)
(*WindowFrame->Normal*)



Notebook[{
Cell["CERN SL Note 97-55  (AP)", "Text",
  TextAlignment->Right],

Cell["\<\


\
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
  "Basic MAD Tables in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " "
}], "Title"],

Cell["\<\
John M. Jowett
18/8/1997, Revised 17/8/2000\
\>", "Subtitle"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
  CellTags->"Intrduction section"],

Cell[TextData[{
  "This note is the documentation for a ",
  StyleBox["Mathematica ",
    FontSlant->"Italic"],
  "[",
  ButtonBox["1",
    ButtonData:>"Wolfram book",
    ButtonStyle->"Hyperlink"],
  ",",
  ButtonBox["2",
    ButtonData:>"Maeder book",
    ButtonStyle->"Hyperlink"],
  "] package designed to handle data in a form typical of a class of table \
files.  These include the ",
  ButtonBox["TFS",
    ButtonData:>{
      URL[ "http://wwwslap.cern.ch/~fci/mad/mad8/tfs_desc.html"], None},
    ButtonStyle->"Hyperlink"],
  " files generated by certain ",
  ButtonBox["MAD",
    ButtonData:>{
      URL[ "http://wwwslap.cern.ch/~fci/mad/mad.html"], None},
    ButtonStyle->"Hyperlink"],
  " [",
  ButtonBox["3",
    ButtonData:>"MAD manual",
    ButtonStyle->"Hyperlink"],
  "] commands (TRACK, EIGEN, TWISS3, OPTICS, etc., possibly via MAD's ARCHIVE \
command) and a number of different types of files saved by application \
programs in the LEP control system.  Although some of these do not strictly \
adhere to the TFS conventions, their data is easily assimilated into a common \
data type ",
  StyleBox["mfs", "Input"],
  " in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ". "
}], "Text",
  CellTags->"Intrduction section"],

Cell[TextData[{
  "Although not very interesting in itself, this package can be used in many \
ways.  Moreover it provides a basis for a number of other application \
packages  (such as ",
  StyleBox["TrackTable", "Input"],
  ")  that  extend its  functionality in various directions."
}], "Text",
  CellTags->"Intrduction section"],

Cell[TextData[{
  "These packages will allow you to operate ",
  StyleBox["directly",
    FontSlant->"Italic"],
  " with physically interesting quantities (eigenvectors, orbits, transfer \
matrices, maps,  etc.) and manipulate them in natural mathematical style, \
without having to worry about the technicalities of file and data formats.  \
While MAD itself provides an excellent framework for many kinds of beam \
optics and particle tracking calculations, I think it is fair to say that \
it's capabilities are still somewhat under-exploited because of the lack of \
tools for making sense of the abundance of results it can produce.   "
}], "Text",
  CellTags->"Intrduction section"],

Cell[TextData[{
  "There have been a number of attempts to fill this gap in recent years.  \
Personally I have found that the environment provided by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is particularly fruitful and easy to work in.  However my experience has \
shown that the speed with which applications can be developed tends to leave \
documentation far behind.  This series of packages, developed in \
collaboration with K. Goral, is being organised systematically according to \
established guidelines for package development.  This should make them robust \
and easy to use and maintain."
}], "Text",
  CellTags->"Intrduction section"],

Cell[TextData[{
  "These packages and others relating to the use of MAD will all be made \
available in the context ",
  StyleBox["Madtomma", "Input"],
  "  (the word ",
  StyleBox["context",
    FontSlant->"Italic"],
  " is used in a special sense in ",
  StyleBox["Mathematica).",
    FontSlant->"Italic"]
}], "Text",
  CellTags->"Intrduction section"],

Cell["\<\
The package has been thoroughly tested with tables from both MAD \
Version 8 and Version 9.\
\>", "Text"],

Cell[TextData[{
  "A useful feature is a ",
  StyleBox["palette",
    FontSlant->"Italic"],
  " of buttons that frees the user from most of the need to remember and type \
in the syntax of the functions in the package.  See ",
  ButtonBox["Section ",
    ButtonData:>"palette",
    ButtonStyle->"Hyperlink"],
  CounterBox["Section", "palette"],
  " below."
}], "Text"],

Cell[TextData[{
  "Access to the packages has been simplified thanks to changes in the CERN \
computer systems and the \"",
  ButtonBox["User's Guide and Examples",
    ButtonData:>"Examples section",
    ButtonStyle->"Hyperlink"],
  "\" below have been enhanced since the first version of the package."
}], "Text"],

Cell[TextData[{
  StyleBox[
  "It is very likely that further functions will be added in future versions \
of the package.  ",
    FontSlant->"Italic"],
  "Therefore it is always worth checking the latest version of this notebook \
at the Madtomma Web site"
}], "Text"],

Cell[TextData[ButtonBox["\thttp://wwwslap.cern.ch/jowett/Madtomma",
  ButtonData:>{
    URL[ "http://wwwslap.cern.ch/jowett/Madtomma"], None},
  ButtonStyle->"Hyperlink"]], "Program"],

Cell[TextData[{
  "This notebook adheres to the conventions for ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " package structure and documentation set out in [",
  ButtonBox["2",
    ButtonData:>"Maeder book",
    ButtonStyle->"Hyperlink"],
  "].  As such it serves as the development medium for the package itself.  ",
  
  StyleBox[
  "For this reason , some sections of the printed versions of this document \
are hidden.  ",
    FontWeight->"Bold"],
  "They contain the definitions (\"code\") of the functions.  The visible \
sections contain the documentation and examples of interest to users."
}], "Text",
  CellTags->"Intrduction section"],

Cell[TextData[{
  "To make the package available, you need only copy a couple of commands \
from the ",
  ButtonBox["\"Setup\"",
    ButtonData:>"Setup section",
    ButtonStyle->"Hyperlink"],
  " section.  The \"",
  ButtonBox["Examples",
    ButtonData:>"Examples section",
    ButtonStyle->"Hyperlink"],
  "\" section illustrates basic use of the package and is the best place to \
start learning how to use the package.  More elaborate \"real-life\" examples \
(e.g. applications to the LHC) can be found at the Web site."
}], "Text",
  CellTags->"Intrduction section"],

Cell["\<\
A final subsection illustrating some less useful features is \
hidden.\
\>", "Text"],

Cell[TextData[{
  "This notebook is based on the template for package and notebook \
development by R. Maeder  and supplied with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " 3.0."
}], "Text",
  CellTags->"Intrduction section"],

Cell[CellGroupData[{

Cell["New in version 2.0", "Subsection"],

Cell[TextData[{
  "The names of several functions have been changed to make them more \
consistent and easier to guess or remember,The old function names are still \
accepted but generate warning messages.  A function ",
  StyleBox["mfsVersion2Update", "Input"],
  " has been provided to facilitate the updating of existing files."
}], "Text"],

Cell["The package is now compatible with MAD Versions 8 and 9.", "Text"],

Cell["\<\
New functions have been added to allow different TFS tables to be \
merged with checking that the merging is valid.\
\>", "Text"],

Cell["\<\
The notion of interpreting the data in the mfs object to assign \
values to new variables has been extended to both the keys in the headers and \
the data in the columns.\
\>", "Text"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reference", "Section",
  CellTags->"Reference section"],

Cell[CellGroupData[{

Cell["Title", "Subsubsection",
  CellTags->"Reference section"],

Cell[TextData[{
  "Basic MAD Tables in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"]
}], "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author", "Subsubsection",
  CellTags->"Reference section"],

Cell["John M. Jowett", "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Subsubsection",
  CellTags->"Reference section"],

Cell["\<\
This notebook provides functions for creating and manipulating the mfs data \
type created by various other packages.  In particular it creates mfs data \
itself from TFS data files saved by MAD and other programs. \
\>", "Text",
  CellTags->"Reference section"],

Cell["\<\
This package provides a basis for other packages that will be dependent upon \
it.\
\>", "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copyright", "Subsubsection"],

Cell[TextData[{
  "\[Copyright] Copyright ",
  StyleBox["CERN.1997, 1999",
    FontSlant->"Italic"],
  "\n\n",
  "The copyright and all other rights relating to this computer software, in \
whatever form, including but not\nlimited to the source code, the object code \
and user documentation, are vested in CERN. \n\nCERN, on a royalty-free and \
non-exclusive basis, hereby grants permission to use, copy, change, modify,\n\
translate, display, distribute and make available this computer software, \
subject to the following conditions:\n\n(1) this computer software is \
provided on an as-is basis and CERN provides no express or implied\n\
warranties of any kind, including but not limited to those of \
merchantability, fitness for a particular purpose\nand non-infringement of \
the proprietary rights, such as copyrights, patents and trade secrets, of \
third\nparties. CERN accepts no liability whatsoever for or in connection \
with the use of this computer software; \n\n(2) all copies made of this \
computer software or of parts thereof shall include this copyright statement \
in\nfull; \n\n(3) however, if this computer software or parts thereof are \
made available in any other form than their\noriginal form, or are included \
in any other computer software, the following short acknowledgement only\n\
must be mentioned in the copyright statement and in the user documentation \
(or, in the absence thereof, in\nany other appropriate place) concerning the \
computer software thus made available or created: \n\n\"This product includes \
computer software created and made available by CERN. This acknowledgement\n\
shall be mentioned in full in any product which includes the CERN computer \
software included herein or\nparts thereof.\" "
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Notebook Version", "Subsubsection",
  CellTags->"Reference section"],

Cell["2.21", "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " Version"
}], "Subsubsection",
  CellTags->"Reference section"],

Cell["3.0", "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["History", "Subsubsection",
  CellTags->"Reference section"],

Cell["\<\
Starting from ReadTrackTable.nb 12/6/97.
Added removeQuotes function to fix a bug, 13/8/97.
Added colValue, mfsSelect, mfsMemebr, mfsRange, mfsReverse functions 15/8/97.
Added keepTemporaryFile option to tfsRead, improved the setting of $Path and \
finding the example file 24/4/98.
Modified mfsRange to include the endpoints of the interval (< replaced by \
\[LessEqual], etc.), 18/9/98.
Added handling of %le format obtained when OPTION,DOUBLE is used in MAD, \
21/9/98.
Addition of palette, simplification of Setup section, etc. 3/2/1999.
Added %s format specifier used by MAD9 TFS output, 6/9/1999.
Modified tfsParseHeaderBlock to allow arbitrary order of header lines for \
MAD9, 7/9/1999.\
\>", "Text",
  CellTags->"Reference section"],

Cell[TextData[{
  "Version 2.0 created with major changes, 13/9/1999.  \nThe main motivation \
is compatibility with MAD9 but other improvements have been mae.\n",
  StyleBox["Several functions have been given new, more logical names, \
beginning \"mfs...\".  The list of changes that need to be made in any \
existing files is given as ",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["mfsVersion2UpdateRules", "Input",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox[" and a function",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox[" mfsVersion2Update", "Input",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox[" has been provided to facilitate the updating of files.   The old \
names of functions will continue to work but generate a warning message. All \
cells containing code to facilitate the transition are coloured red in this \
notebook.  They may eventually be removed.",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["\n", "Input"],
  "The function ",
  StyleBox["mfsMerge", "Input"],
  " has been created to allow mfs objects to be merged.\nSome other editing \
functions also added."
}], "Text",
  CellTags->"Reference section"],

Cell[TextData[{
  "Version 2.1 added the ",
  StyleBox["stringRemoveLeadingTrailingBlanks", "Input"],
  " function so that makeEigenTable etc. work for MAD Version 9.\nVersion 2.2 \
22/3/2000, added change of name of symplecticJ here so as to take care of \
today's update to TrackTable package.\nVersion 2.21   17/8/2000 added %d \
format specifier for columns - perhaps to be taken out again later.  \n\t\
Added ",
  StyleBox["mfsInterpretColumns", "Input"],
  ",  ",
  StyleBox["mfsInterpret.\n\t", "Input"],
  "Changed Verbose to mfsVerbose because of clash with ",
  StyleBox["Mathematica4's ",
    FontSlant->"Italic"],
  "option on Import function.\n\tDeactivate ",
  StyleBox["tfsInterpretDescriptorLine", "Input"],
  "  function, since not useful.   Delete later. \n",
  StyleBox["\tSuch de-activated stuff marked for deletion in blue.",
    FontColor->RGBColor[0, 0, 1]],
  "\n\tConsider eliminating other stuff too."
}], "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Subsubsection",
  CellTags->"Reference section"],

Cell["TFS, MAD, data, table, OPTICS, TRACK, mfs", "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source", "Subsubsection",
  CellTags->"Reference section"],

Cell["\<\
For a brief description of the TFS file format as used in MAD, see \
Appendix C of H. Grote, F.C. Iselin, \"The MAD Program, Version 8.16, User's \
Reference Manual\", CERN/SL/90-13 (AP) 1995, or \
\>", "Text",
  CellTags->"Reference section"],

Cell[TextData[ButtonBox["http://wwwslap.cern.ch/~fci/mad/mad8/user/tfs.html",
  ButtonData:>{
    URL[ "http://wwwslap.cern.ch/~fci/mad/mad8/user/tfs.html"], None},
  ButtonStyle->"Hyperlink"]], "Program",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Warnings", "Subsubsection",
  CellTags->"Reference section"],

Cell[TextData[{
  "Note: all cells marked as \"InitializationCell\" will be written to the \
Auto-Save package. This package can then be read in programs that use it with \
",
  StyleBox["Needs[\"Madtomma`Mfs`Mfs`\"]", "Input"],
  ". Cells not intended to belong to the package should not have this \
property."
}], "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Subsubsection",
  CellTags->"Reference section"],

Cell[TextData[{
  "Here we provide the internal specification of ",
  StyleBox["mfs", "Input"],
  " data objects.  Normal users may skip it."
}], "Text",
  CellTags->"Reference section"],

Cell[TextData[{
  "Basically an mfs data object is a list with head ",
  StyleBox["mfs", "Input"],
  " and three or more elements."
}], "Text",
  CellTags->"Reference section"],

Cell[TextData[{
  "The ",
  StyleBox["first",
    FontSlant->"Italic"],
  " element is a list of keys.  Each ",
  "key",
  " consists of a descriptive string, usually in uppercase, such as ",
  StyleBox["\"QX\"", "Input"],
  " and a corresponding value, such as ",
  StyleBox["96.24", "Input"],
  ".  In TFS data files the value is either a number or a string.  In mfs \
data, it can be any kind of object definable in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ", e.g., a matrix consisting of numerical and symbolic elements.  "
}], "Text",
  CellTags->"Reference section"],

Cell[TextData[{
  "The ",
  StyleBox["last",
    FontSlant->"Italic"],
  " element is a table, consisting of columns of data.  If the data comes \
from a TFS file, then the elements of a given  column are  all or the same \
type, either numbers or strings."
}], "Text",
  CellTags->"Reference section"],

Cell[TextData[{
  "The ",
  StyleBox["second-last",
    FontSlant->"Italic"],
  " element is a set of string labels, one for each of the columns in the \
last part."
}], "Text",
  CellTags->"Reference section"],

Cell["\<\
Additional parts between the first and the second-last may be used for other \
purposes.  \
\>", "Text",
  CellTags->"Reference section"],

Cell[TextData[{
  "Note that the first element of an mfs data object is actually an ",
  StyleBox["associative array",
    FontWeight->"Bold"],
  " in the sense used in various programming languages.  You can also think \
of the second-last and last elements combined as another associative array \
with the constraint that the values are all numerical lists of the same \
length.  This is necessary because there are cases where the key \"X\", for \
example, occurs both in the header block (as a closed-orbit component) and in \
the column names (as the name of a phase-space coordinate)."
}], "Text"],

Cell[TextData[{
  "If you like the ",
  StyleBox["object-oriented programming",
    FontWeight->"Bold"],
  " metaphor, you can think of ",
  StyleBox["mfs ", "Input"],
  "as a class and various functions in this package as the associated \
methods."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Requirements", "Subsubsection",
  CellTags->"Reference section"],

Cell["Uses a standard package for column manipulations, etc.", "Text",
  CellTags->"Reference section"],

Cell["Statistics`DataManipulation`", "Text",
  FontWeight->"Bold",
  FontSlant->"Italic",
  CellTags->"Reference section"],

Cell["\<\
The functions in this package are available once this one is loaded (and are \
often very useful - see the documentation for this package).\
\>", "Text",
  CellTags->"Reference section"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setup", "Section",
  CellTags->"Setup section"],

Cell["\<\
This section contains commands needed to load the corresponding \
package file.  The contents of this file are equivalent to the following \
sections (Interface, Implementation, Epilog) in which the package is \
developed. \
\>", "Text",
  CellTags->"Setup section"],

Cell[CellGroupData[{

Cell["Search Path (ESSENTIAL!)", "Subsection",
  CellTags->"Setup section"],

Cell["\<\
To have access to my packages, you may need to add my packages \
directory to your search path.  This is system-dependent and the latest \
information about arranging it on CERN computer systems can be found at\
\>", 
  "Text"],

Cell[TextData[ButtonBox[
"http://wwwslap.cern.ch/~jowett/Madtomma/AboutFiles.html",
  ButtonData:>{
    URL[ "http://wwwslap.cern.ch/~jowett/Madtomma/AboutFiles.html"], None},
  ButtonStyle->"Hyperlink"]], "Program"],

Cell[TextData[{
  "and is not reproduced here.  I strongly recommend that you modify your \
kernel initialisation file once and for all as explained on this page.  Then \
all my packages will be found as easily as the Standard Packages that come \
with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "."
}], "Text",
  CellTags->"Setup section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loading the Package", "Subsection",
  CellTags->"Setup section"],

Cell[TextData[{
  "Once the package directory is on your search path, the ",
  StyleBox["Mfs", "Input"],
  " package can be loaded by evaluating the following cell. ",
  StyleBox["If you are using a copy of this notebook in order to work through \
the examples and you are invited to  evaluate all the initialisation cells in \
it, you should click \"NO\" and then go straight to the ",
    FontSlant->"Italic",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox["\"",
    FontSlant->"Italic"],
  StyleBox[ButtonBox["User's Guide and Examples",
    ButtonData:>"Examples section",
    ButtonStyle->"Hyperlink"],
    FontSlant->"Italic"],
  StyleBox["\" ",
    FontSlant->"Italic"],
  StyleBox["without evaluating the intermediate sections.",
    FontSlant->"Italic",
    FontColor->RGBColor[1, 0, 0]],
  StyleBox[" ",
    FontSlant->"Italic"],
  "However this should not normally happen."
}], "Text",
  CellTags->"Setup section"],

Cell[CellGroupData[{

Cell[BoxData[
    StyleBox[
      RowBox[{"Needs", "[", "\"\<Madtomma`Mfs`Mfs`\>\"", "]"}],
      "Input"]], "InputOnly",
  CellTags->"Setup section"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Version 2.0 of Madtomma`Mfs`Mfs` loaded.  Note function \
name changes since Version 1.x:\\n\"\>", "\[InvisibleSpace]", 
        InterpretationBox[GridBox[{
              {\("interpretDescriptors" \[Rule] "mfsInterpretKeys"\)},
              {\("keyValue" \[Rule] "mfsKeyValue"\)},
              {\("columnNames" \[Rule] "mfsColumnNames"\)},
              {\("descriptorNames" \[Rule] "mfsKeyNames"\)},
              {\("colValue" \[Rule] "mfsColumnValue"\)},
              {\("addDescriptor" \[Rule] "mfsAddKey"\)},
              {\("editDescriptor" \[Rule] "mfsEditKey"\)},
              {\("deleteDescriptor" \[Rule] "mfsDeleteKey"\)},
              {\("symplecticJ" \[Rule] "SymplecticJ"\)}
              },
            RowSpacings->1,
            ColumnSpacings->3,
            RowAlignments->Baseline,
            ColumnAlignments->{Left}],
          
          TableForm[ {"interpretDescriptors" -> "mfsInterpretKeys", 
            "keyValue" -> "mfsKeyValue", "columnNames" -> "mfsColumnNames", 
            "descriptorNames" -> "mfsKeyNames", "colValue" -> 
            "mfsColumnValue", "addDescriptor" -> "mfsAddKey", 
            "editDescriptor" -> "mfsEditKey", "deleteDescriptor" -> 
            "mfsDeleteKey", "symplecticJ" -> "SymplecticJ"}]]}],
      SequenceForm[ 
      "Version 2.0 of Madtomma`Mfs`Mfs` loaded.  Note function name changes \
since Version 1.x:\n", 
        TableForm[ {"interpretDescriptors" -> "mfsInterpretKeys", "keyValue" -> 
          "mfsKeyValue", "columnNames" -> "mfsColumnNames", "descriptorNames" -> 
          "mfsKeyNames", "colValue" -> "mfsColumnValue", "addDescriptor" -> 
          "mfsAddKey", "editDescriptor" -> "mfsEditKey", "deleteDescriptor" -> 
          "mfsDeleteKey", "symplecticJ" -> "SymplecticJ"}]],
      Editable->False]], "Print",
  GeneratedCell->False,
  CellAutoOverwrite->False]
}, Open  ]],

Cell[TextData[{
  "This is all you need to start using the package in your own applications.  \
 In interactive sessions, you will normally see a palette of buttons \
appearing on your screen.   This makes it easier to use the package: see ",
  ButtonBox["Section ",
    ButtonData:>"palette",
    ButtonStyle->"Hyperlink"],
  CounterBox["Section", "palette"],
  " below."
}], "Text",
  CellTags->"Setup section"],

Cell[TextData[{
  "These following sections are hidden when this notebook is used as the \
package documentation but may be inspected in the online copy that can be \
found in the appropriate  sub-directory of the directory added to the ",
  StyleBox["$Path", "Input"],
  " variable above."
}], "Text",
  CellTags->"Setup section"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interface", "Section",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell["\<\
This part declares the publicly visible functions, options, and values.\
\>", "Text",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{

Cell["Set up the package context, including public imports", "Subsection",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{

Cell[TextData[{
  "BeginPackage[\"",
  StyleBox["Madtomma`Mfs`Mfs`\",", "Input"],
  "\"Statistics`DataManipulation`\",\"JMJUtils`BumpEtc`\"]"
}], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \("Madtomma`Mfs`Mfs`"\)], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Usage messages for the exported functions and the context itself\
\>", "Subsection",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell["\<\
Mfs::usage = \"Mfs.m is a package for manipulating MFS \
data.\";\
\>", "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfs::usage = \ "\<mfs is a data object type containing a set of scalar \
variables with values and a set of labelled columns of data; typically it can \
represent the data structures in TFS files.\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(mfs\)\" is similar to \
existing symbol \"\!\(Mfs\)\"."\)], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsTypes::usage = "\<mfsTypes is a list of the types of data related to \
the basic mfs type.  Various mfs data functions will apply to the elements in \
the class.\>"\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \("mfsTypes is a list of the types of data related to the basic mfs type. \
 Various mfs data functions will apply to the elements in the class."\)], \
"Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(tfsRead::usage = "\<tfsRead[file] returns an mfs data object containing \
all the information in a TFS file.\>"\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \("tfsRead[file] returns an mfs data object containing all the \
information in a TFS file."\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(removeUnwantedLines::usage := \
"\<removeUnwantedLines[infile,outfile,string] copies file infile to outfile, \
removing all lines containing string.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(removeQuotes::usage := "\<removeQuotes[x] will remove any double \
quotes \" explicitly included in a string x.  If x is not a string then it is \
returned unchanged.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(stringRemoveLeadingTrailingBlanks::usage = \
"\<stringRemoveLeadingTrailingBlanks[string] removes leading and trailing \
blanks from a string.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("stringRemoveLeadingTrailingBlanks[string] removes leading and trailing \
blanks from a string."\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(tfsParseDescriptorLine::usage = "\<tfsParseDescriptorLine[string] takes \
a TFS descriptor line as a string and returns a list consisting of the TFS \
key and its value.\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(interpretTagValue::usage = "\<interpretTagValue[{\"tag\",val}] \
creates a variable tag and assigms it the value val.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"tfsInterpretDescriptorLine", "::", "usage"}], "=", 
      "\"\<tfsInterpretDescriptorLine[string] takes a TFS descriptor line as \
a string, creates a variable from the key name and assigns it the \
value.\>\""}]], "Input",
  Evaluatable->False,
  FontColor->RGBColor[0, 0, 1],
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(tfsFormatRules::usage = "\<tfsFormatRules is an option of tfsRead and \
related functions like tfsParseHeaderBlock.  It gives a set of rules for \
transforming TFS column formats into Mathematica data types.\>";\)\)], "Input",\

  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(tfsParseHeaderBlock::usage = "\<tfsParseHeaderBlock[file] returns the \
information in the header block of a TFS file as a structured list.  It is \
normally used inside readTfsTable.\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(mfsInterpretKeys::usage = "\<mfsInterpretKeys[mfsdata] creates a set of \
variables with values from the keys in an mfs (or related) data object. Any \
existing values are over-written.\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(mfsInterpretColumns::usage = "\<mfsInterpretColumns[mfsdata] creates a \
set of variables with values from the columns in an mfs (or related) data \
object. Any existing values are over-written.\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(mfsInterpret::usage = "\<mfsInterpret[mfsdata] creates a set of \
variables with values from the keys and columns in an mfs (or related) data \
object. Any existing values are over-written.\nmfsInterpret[\"filename\"] \
creates such variables using data from a TFS file.\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(interpretDescriptors::usage = "\<Obsolete function name.  Please use \
mfsInterpretKeys.\>"; \)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0],
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsKeyValue::usage = \ "\<mfsKeyValue[mfsdata,key] returns the value \
corresponding to a descriptor key (a string) in an mfs (or related) data \
object.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(keyValue::usage = "\<Obsolete function name.  Please use mfsKeyValue.\
\>";\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0],
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsColumnNames::usage\  = "\<mfsColumnNames[mfsdata] returns the list \
of column names in an mfs data (or related) object.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(columnNames::usage = "\<Obsolete function name.  Please use \
mfsColumnNames.\>";\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0],
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsKeyNames::usage = "\<mfsKeyNames[mfsdata] returns the list of key \
names in the header block of an mfs (or related) data object.\>";\)\)], \
"Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(descriptorNames::usage = "\<Obsolete function name.  Please use \
mfsKeyNames.\>";\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0],
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsColumn::usage = "\<mfsColumn[mfsdata,colname] returns the column \
of data labelled by the string colname in an mfs (or related) data object. A \
list of colnames may also be given to return a set of columns.  If colname is \
absent the entire block of columns is returned.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(mfsColumnValue::usage = "\<mfsColumnValue[mfsdata,row,key] extracts a \
value labelled by key in row from an mfsdata object.\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(colValue::usage = "\<Obsolete function name.  Please use \
mfsColumnValue.\>";\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0],
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsSelect::usage = "\<mfsSelect[mfsdata,criterion] extracts rows \
satisfying criterion (function) from an mfsdata object.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsMember::usage = "\<mfsMember[mfsdata,key,targetset] extracts rows \
of an mfsdata object for which values labelled by key belong to \
targetset.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(mfsNotMember::usage = "\<mfsNotMember[mfsdata,key,targetset] extracts \
rows of an mfsdata object for which values labelled by key DO NOT belong to \
targetset.\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(mfsRange::usage = "\<mfsRange[mfsdata,key,{min,max}] extracts rows of \
an mfsdata object for which values labelled by key lie within min and max. \
NOTE : min must be smaller than max !!!\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsDrop::usage\  = \ "\<mfsDrop is an option for mfsInterpret that \
specifieds whether the first and last line should be dropped.\>";\)\)], \
"Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsVerbose::usage\  = \ "\<mfsVerbose is an option for \
removeUnwantedLines, tfsParseHeaderBlock and tfsRead that specifieds whether \
informative messages should be printed.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(keepTemporaryFile::usage = "\<keepTemporaryFile is an option for \
tfsRead that causes a temporary file not to be deleted.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("keepTemporaryFile is an option for tfsRead that causes a temporary \
file not to be deleted."\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(mfsAddKey::usage = "\<mfsAddKey[mfsdata,{\"KEY\",value}] returns the \
mfs (or related) data object mfsdata with an additional key and \
value.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(addDescriptor::usage = "\<Obsolete function name.  Please use \
mfsAddKey.\>";\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0],
  CellTags->"Interface section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(mfsEditKey::usage\)\(\ \)\(=\)\(\ \
\)\("\<mfsEditKey[mfsdata,{key,newValue}] returns the mfs (or related) data \
object mfsdata with the value corresponding to the descriptor key replaced by \
newValue.\>"\)\(\ \)\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \("mfsEditKey[mfsdata,{key,newValue}] returns the mfs (or related) data \
object mfsdata with the value corresponding to the descriptor key replaced by \
newValue."\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(editDescriptor::usage = "\<Obsolete function name.  Please use \
mfsEditKey.\>";\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0],
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsDeleteKey::usage\  = \ "\<mfsDeleteKey[mfsdata,key] returns  the \
mfs (or related) data object mfsdata with the descriptor key \
removed.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(deleteDescriptor::usage = "\<Obsolete function name.  Please use \
mfsDeleteKey.\>";\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0],
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsDeleteColumn::usage = "\<mfsDeleteColumn[qp,\"colname\"] returns \
an mfs object equal to qp but with the column labelled colname removed. A \
list of column names can also be given.\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(mfsAddColumn::usage = "\<mfsAddColumn[qp,\"colname\",coldata] returns \
an mfs object equal to qp but with a new column labelled colname and \
containing data coldata added. A list of column names and columns of data can \
also be given.\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(mfsReverse::usage = "\<mfsReverse[mfsdata] returns the mfs object \
with the rows of the main block of columns in reverse order.\>";\)\)], "Input",\

  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsColumnMatch::usage = \
"\<mfsColumnMatch[{qp1,qp2,...},{\"col1\",\"col2\",...}] tests whether a list \
of column namesmatch in all the mfs objects in which they appear.\>";\)\)], \
"Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsMerge::usage = "\<mfsMerge[{qp1,qp2,...}] nerges a list of mfs \
objects into a single one containing all the header and column information in \
each of them.  The column lengths must match.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("mfsMerge[{qp1,qp2,...}] nerges a list of mfs objects into a single one \
containing all the header and column information in each of them.  The column \
lengths must match."\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(\(matchColumns::usage = "\<matchColumns is an option for mfsMerge that \
gives a list of column names that must match in all the mfs objects in which \
they appear.  The value Automatic insists that all possible matches hold.\>";\
\)\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsFixMAD8inconsistencies::usage = "\<mfsFixMAD8inconsistencies[qp] \
returns a new mfs object with corrections for inconsistencies that may arise \
from it's having been generated by MAD Version 8.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("mfsFixMAD8inconsistencies[qp] returns a new mfs object with \
corrections for inconsistencies that may arise from it's having been \
generated by MAD Version 8."\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsVersion2Update::usage = "\<mfsVersion2Update[oldfile,newfile] will \
create a new version of a file in which names of functions in Version 1.x of \
the Madtomma`Mfs`Mfs` package are changed to their equivalents in Version \
2.x.\>"\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \("mfsVersion2Update[oldfile,newfile] will create a new version of a file \
in which names of functions in Version 1.x of the Madtomma`Mfs`Mfs` package \
are changed to their equivalents in Version 2.x."\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(mfsVersion2UpdateRules::usage = "\<mfsVersion2UpdateRules is a list of \
string replacement rules that will change names of functions in Version 1.x \
of the Madtomma`Mfs`Mfs` package to their equivalents in Version 2.x.\>"; \
\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]]
}, Closed]],

Cell[CellGroupData[{

Cell["Error messages for the exported objects", "Subsection",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsKeyValue::notfound\  = \ "\<Descriptor `1` not found.\>";\)\)], \
"Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsKeyValue::notkey\  = \ "\<`1` is not a string, hence not a \
possible key.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsColumn::notfound\  = \ "\<Column `1` not found.\>";\)\)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsAddKey::badarg\  = \ "\<`1` not valid key-value pair\>";\)\)], \
"Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsEditKey::badarg\  = \ "\<`1` not valid key-value pair\>";\)\)], \
"Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsDeleteKey::badarg\  = \ "\<`1` not valid key-value pair\>";\)\)], \
"Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(mfsColumnValue::notfound = "\<`1` is not a proper column name.\>"; \)], \
"Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(mfsRange::badarg = "\<The first element of a range specification (`1`) \
should be smaller than the second one (`2`).\>"; \)], "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[BoxData[
    \(\(mfsAddColumn::collength = "\<Columns with different column lengths \
cannot be merged into an mfs object.\>"\ ;\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(mfs::oldname = "\<`1` is an obsolete function name.  Please use `2` \
from now on.\>";\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsMerge::badmatch = "\<Some columns specified by the matchColumns \
option do not match.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("Some columns specified by the matchColumns option do not match."\)], \
"Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsMerge::collength = "\<Not all columns have the same length. mfs \
objects cannot be merged.\>"\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \("Not all columns have the same length. mfs objects cannot be \
merged."\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(interpretTagValue::changename = "\<Invalid variable name `1` changed to \
`2`\>"; \)], "Input",
  InitializationCell->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Implementation", "Section",
  InitializationCell->True],

Cell["\<\
This part contains the actual definitions and any auxiliary functions that \
should not be visible outside.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Begin the private context (implementation part)", "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["Begin[\"`Private`\"]", "Input",
  InitializationCell->True],

Cell[BoxData[
    \("Madtomma`Mfs`Mfs`Private`"\)], "Output"]
}, Open  ]]
}, Closed]],

Cell["Read in any hidden imports", "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["\<\
Definition of auxiliary functions and local (static) variables\
\>", "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsTypes = {mfs}\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \({mfs}\)], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Definition of the exported functions", "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["Removing unwanted lines from a file", "Subsubsection"],

Cell[TextData[{
  "A grep-like utility. It makes a copy of the file with all the lines \
containing a target string removed. Define a version using streams for output \
to allow use of a temporary file obtained from ",
  StyleBox["OpenTemporary", "Input"],
  "], e.g., in ",
  StyleBox["tfsRead", "Input"],
  " below."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Options[removeUnwantedLines] = {mfsVerbose \[Rule] True}\)], "Input"],

Cell[BoxData[
    \({mfsVerbose \[Rule] True}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(removeUnwantedLines[rawFile_String, filteredFile_String, 
        unwanted_String, opts___Rule] := 
      Module[{oo}, oo = OpenWrite[filteredFile]; 
        removeUnwantedLines[rawFile, oo, unwanted, opts]; 
        Close[oo]]\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(removeUnwantedLines[rawFile_String, oo_OutputStream, unwanted_String, 
        opts___Rule] := 
      Module[{tt, ll}, \n\t\ttt = 
          OpenRead[rawFile]; \n\t\tverbose = \(mfsVerbose /. {opts}\)\  /. \ 
            Options[removeUnwantedLines]; \n\t\tIf[verbose, 
          Print["\<Input file: \>", tt, "\<  Output file: \>", oo], 
          Null]; \n\t\tll = "\<0Segment0\>"; \n\t\tWhile[
          Not[ll === EndOfFile], \n\t\t\tIf[
            StringMatchQ[ToString[ll], "\<*\>" <> unwanted <> "\<*\>"], Null, 
            WriteString[oo, ll <> "\<\n\>"]]; \n\t\t\tll = 
            Read[tt, String]]; \n\t\tClose[tt]; \n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(verbose\)\" is similar \
to existing symbol \"\!\(Verbose\)\"."\)], "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Removing quotes from strings", "Subsubsection"],

Cell["\<\
Since MAD8's TFS files have the strings delimited by quotes, \
ReadList returns strings containing quoted quotes (\"\\\"\").  We need to \
remove these from the columns of data, e.g., for the names of elements.  The \
following function will do it and leave numbers alone.  The order of pattern \
matching is for efficiency since we encounter Reals most often.\
\>", "Text"],

Cell[BoxData[{
    \(\(removeQuotes[x_Real] := x;\)\), "\n", 
    \(\(removeQuotes[x_String] := 
        StringReplace[x, "\<\"\>" -> "\<\>"];\)\), "\n", 
    \(removeQuotes[x_] := x\)}], "Input",
  InitializationCell->True],

Cell["\<\
MAD9 no longer puts the quotes around the element names, so this is \
no longer necessary.  However it does not create any problems either.\
\>", 
  "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Removing leading and trailing blanks", "Subsubsection"],

Cell["\<\
Necessary for MAD9 descriptor lines since most quotes have been \
suppressed.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(stringRemoveLeadingTrailingBlanks[str_] := \n\t
      Module[{after, 
          before}, \n\t\tStringJoin[\n\t\t\t\((Characters[
                  str]\n\t\t\t\t\t\t //. {"\< \>", 
                    after___} \[Rule] {after}\n\t\t\t)\) //. {before___, "\< \
\>"} \[Rule] {before}\n\t\t]\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(after\)\" is similar to \
existing symbol \"\!\(After\)\"."\)], "Message"],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(before\)\" is similar \
to existing symbol \"\!\(Before\)\"."\)], "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions for the header section", "Subsubsection"],

Cell["\<\
Parse a header line from a MAD TFS table, returning only the tag \
and its value.  The last character of the second word in the line, describing \
the format,  is used only to determine whether the last word is to be \
interpreted as a Fortran-form number or left as a string. In the latter case, \
double quotes are removed.  The three rules for substituting for the quotes \
seem to be necessary to avoid leading and trailing blanks on strings.  I \
don't quite understand this.\
\>", "Text"],

Cell[TextData[{
  "1/10/1999 now I do understand and had to add the ",
  StyleBox["stringRemoveLeadingTrailingBlanks", "Input"],
  " function to deal with it for MAD9 tables."
}], "Text"],

Cell[BoxData[
    \(tfsParseDescriptorLine[str_String] := 
      Module[{tp}, 
        tp = First[
            ReadList[StringToStream[str], {Word, Word, String}, 
              WordSeparators \[Rule] {"\< \>", "\<\"\>", "\<\t\>", \
"\<@\>"}]]; \[IndentingNewLine]Flatten[{First[tp], 
            If[StringTake[
                  tp\[LeftDoubleBracket]2\[RightDoubleBracket], {\(-1\)}] \
\[Equal] "\<s\>", 
              StringReplace[
                stringRemoveLeadingTrailingBlanks[
                  Last[tp]], {"\<\" \>" \[Rule] "\<\>", "\< \"\>" \[Rule] "\<\
\>", "\<\"\>" \[Rule] "\<\>"}], 
              ReadList[StringToStream[Last[tp]], Number]]}]]\)], "Input",
  InitializationCell->True],

Cell["\<\
This function returns a list of three items from the header block \
in a TFS file.  The first item is a list of tags and values , the second is \
the names of the columns in the main data block and the last is the position \
in the file where the header block ends.  This can be used later to read the \
main data block.\
\>", "Text"],

Cell["\<\
We need a set of rules for transforming the TFS formats for ReadList.  Only \
necessary in order to read strings given in quotes, e.g., element names from \
MAD.  This will not work if the strings contain blanks.\
\>", "Text"],

Cell["\<\
17/8/2000 Added %d format that I just found in a new MAD8 SURVEY \
TFS output although it's probably meant to be %hd.  See email to Hans Grote \
today.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(Options[tfsParseHeaderBlock] = {mfsVerbose \[Rule] False, 
          tfsFormatRules -> {"\<%e\>" -> Number, "\<%hd\>" -> 
                Number, "\<%d\>" -> Number, "\<%lf\>" -> Number, "\<%f\>" -> 
                Number, "\<%le\>" \[Rule] Number, "\<%s\>" -> 
                Word, "\<%16s\>" -> Word, "\<%32s\>" -> Word, "\<~\>" -> 
                Word}};\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Set::"write" \(\(:\)\(\ \)\) 
      "Tag \!\(tfsParseHeaderBlock\) in \!\(Options[tfsParseHeaderBlock]\) is \
Protected."\)], "Message"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Unprotect[tfsParseHeaderBlock]\)], "Input"],

Cell[BoxData[
    \({"tfsParseHeaderBlock"}\)], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Options[tfsParseHeaderBlock]\)], "Input"],

Cell[BoxData[
    \({mfsVerbose \[Rule] True, 
      tfsFormatRules \[Rule] {"%e" \[Rule] Number, "%hd" \[Rule] Number, 
          "%d" \[Rule] Number, "%lf" \[Rule] Number, "%f" \[Rule] Number, 
          "%le" \[Rule] Number, "%s" \[Rule] Word, "%16s" \[Rule] Word, 
          "%32s" \[Rule] Word, "~" \[Rule] Word}}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(tfsParseHeaderBlock[tfsFile_String, opts___Rule] := 
      Module[{tt, headers, keyvals, lastKeyPos, 
          fmtrules}, \n\t\t\tverbose = \(mfsVerbose /. {opts}\)\  /. \ 
            Options[tfsParseHeaderBlock]; \n\t\tfmtrules = \ \(tfsFormatRules \
/. {opts}\)\ \  /. \ Options[tfsParseHeaderBlock]; \n\t\ttt = 
          OpenRead[tfsFile]; \  (*\ get\ column\ header\ info\ *) \n\t\tll = 
          Find[tt, "\<*\>", AnchoredSearch -> True]; \n\t\theaders\  = \ 
          ReadList[StringToStream[ll], Word, 
            WordSeparators -> {"\< \>", "\<*\>", "\<,\>"}]; \n\t\tClose[
          tt]; \n\t\ttt = OpenRead[tfsFile]; \  (*\ 
          get\ column\ format\ info\ *) \n\t\tll = 
          Find[tt, "\<$\>", AnchoredSearch -> True]; \n\t\tfmts\  = \ 
          ReadList[StringToStream[ll], Word, 
              WordSeparators -> {"\< \>", "\<$\>", "\<,\>"}] /. 
            Flatten[fmtrules]; \n\t\tIf[verbose, Print[fmts]]; \n\t\tClose[
          tt]; \n\t\ttt = OpenRead[tfsFile]; \n\t\tll = "\<\>"; keyvals = {}; 
        lastKeyPos = 
          0; \n\t\tWhile[\n\t\t\tNot[ll === EndOfFile], \n\t\t\tIf[
            StringLength[ll] > 0 && 
              StringTake[ll, 1] == "\<@\>", \n\t\t\t\tAppendTo[keyvals, 
              tfsParseDescriptorLine[ll]]\n\t\t\t]; \n\t\t\tlastKeyPos = 
            StreamPosition[tt]; \n\t\t\tll = 
            Find[tt, {"\<@\>", "\<$\>", "\<*\>"}, 
              AnchoredSearch -> True];\n\t\t\t]; \n\t\tClose[tt]; {keyvals, 
          fmts, headers, lastKeyPos}\n\t]\)], "Input",
  InitializationCell->True],

Cell[TextData[{
  "Added three possible characters that begin lines in ",
  StyleBox["Find", "Input"],
  " command to allow the header lines to appear in any order.  This is \
necessary for MAD9 which now gives the column headers immediately before the \
columns."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create mfs data from TFS file", "Subsubsection"],

Cell["\<\
The following function reads all the information in a TFS table \
file and returns a mfs  data object. It also prints some information.\
\>", 
  "Text"],

Cell[TextData[{
  "Using ",
  StyleBox["ReadList", "Input"],
  " is much faster than a ",
  StyleBox["While", "Input"],
  " with ",
  StyleBox["Read", "Input"],
  " and tests on each line. So we first make a copy of the file with some \
unwanted lines removed.  The header data block is parsed and the file is \
reopened at the position of the end of the header block.  Then we can suck \
all the data into the temporary variable ",
  StyleBox["cols", "Input"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Options[tfsParseHeaderBlock]\)], "Input"],

Cell[BoxData[
    \({mfsVerbose \[Rule] False, 
      tfsFormatRules \[Rule] {"%e" \[Rule] Number, "%hd" \[Rule] Number, 
          "%d" \[Rule] Number, "%lf" \[Rule] Number, "%f" \[Rule] Number, 
          "%le" \[Rule] Number, "%s" \[Rule] Word, "%16s" \[Rule] Word, 
          "%32s" \[Rule] Word, "~" \[Rule] Word}}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Options[tfsRead] = 
      Options[tfsParseHeaderBlock] \[Union] {keepTemporaryFile -> False, 
          mfsVerbose \[Rule] False}\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \({keepTemporaryFile \[Rule] False, mfsVerbose \[Rule] False, 
      tfsFormatRules \[Rule] {"%e" \[Rule] Number, "%hd" \[Rule] Number, 
          "%d" \[Rule] Number, "%lf" \[Rule] Number, "%f" \[Rule] Number, 
          "%le" \[Rule] Number, "%s" \[Rule] Word, "%16s" \[Rule] Word, 
          "%32s" \[Rule] Word, "~" \[Rule] Word}}\)], "Output"]
}, Closed]],

Cell[BoxData[
    \(tfsRead[tfsFile_String, opts___Rule] := 
      Block[{tempFile, tt, hh, cols, particles, turns}, \n\t\ttempStream = 
          OpenTemporary[]; \n\t\tverbose = \(mfsVerbose /. {opts}\)\  /. \ 
            Options[tfsRead]; \n\t\tkeepTemp = \(keepTemporaryFile /. \
{opts}\)\  /. \ Options[tfsRead]; \n\t\tremoveUnwantedLines[tfsFile, 
          tempStream, "\<Segment\>"]; \n\t\tClose[
          tempStream]; \n\t\ttempFile = First[tempStream]; \n\t\thh = 
          tfsParseHeaderBlock[tempFile, opts]; \n\t\tIf[
          verbose, \n\t\t\tPrint["\<Header block:\n\>", 
            First[hh]\ , \ \n\t\t\t\t"\<\nColumns labels:  \>", 
            hh\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket]\ , \n\t\t\t\t\
"\<\nColumn formats:  \>", 
            hh\[LeftDoubleBracket]\(-3\)\[RightDoubleBracket], \ \ \ \ \ \ \n\
\t\t\t\t"\<\nColumn data starts at position \>", Last[hh], "\< in \>", 
            tempFile]\n\t\t]; \n\t\ttt = 
          OpenRead[tempFile]; \n\t\ \ SetStreamPosition[tt, 
          Last[hh]\ ]; \n\t\tcols\  = 
          Map[removeQuotes, 
            ReadList[tt, 
              hh\[LeftDoubleBracket]\(-3\)\[RightDoubleBracket]], {\(-1\)}]; \
\n\t\tClose[tt]; \n\t\tIf[
          keepTemp, \n\t\t\tPrint["\<Temporary file not deleted: \>", 
            tempFile], \n\t\t\tDeleteFile[tempFile]\n\t\t]; \ \n\t\tmfs[\ 
          First[hh], hh\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], 
          cols]\n\t\t]\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating new variables in the current  context", "Subsubsection"],

Cell[TextData[{
  "The functions in this section are a bit tricky.  They involve creating new \
variables in the current context with names constructed from TFS descriptors. \
 Watch the quotes in the definition of ",
  Cell[BoxData["interpretTagValue"], "Input",
    InitializationCell->True],
  " particularly."
}], "Text"],

Cell["\<\
This function takes a result of the above form, creates a variable \
using the tag and assigns it the value.\
\>", "Text"],

Cell[BoxData[
    \(interpretTagValue[{tag_String, value_}] := 
      Block[{temp, newtag}, \[IndentingNewLine]temp = 
          value; \[IndentingNewLine]newtag = 
          StringReplace[
            tag, {"\<_\>" \[Rule] "\<$$\>"}]; \[IndentingNewLine]If[
          newtag \[NotEqual] tag, 
          Message[interpretTagValue::changename, tag, 
            newtag]]; \[IndentingNewLine]ToExpression["\<Global`\>" <> 
            newtag <> "\< = \>" <> "\<Madtomma`Mfs`Mfs`Private`temp\>"]\n\t\t\
]\)], "Input",
  InitializationCell->True],

Cell["\<\
DEACTIVATED since probably not needed: This function combines the \
two functions above, creating a variable from a TFS header line and assigning \
it a value.\
\>", "Text",
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
    RowBox[{
      RowBox[{"tfsInterpretDescriptorLine", "[", "str_String", "]"}], ":=", 
      RowBox[{"interpretTagValue", "[", " ", 
        RowBox[{"tfsParseDescriptorLine", "[", "str", "]"}], "]"}]}]], "Input",\

  Evaluatable->False,
  FontColor->RGBColor[0, 0, 1]],

Cell["\<\
This function reads a TFS header block to create variables and \
assign their values.\
\>", "Text"],

Cell[BoxData[
    \(mfsInterpretKeys[qp_mfs, 
        opts___] := \((verbose = \(mfsVerbose /. {opts}\) /. 
            Options[mfsInterpret]; interpretTagValue\  /@ \ First[qp]; 
        If[verbose, 
          Print["\<Variables (re-)assigned: \>", 
            mfsKeyNames[qp]]])\)\)], "Input",
  InitializationCell->True],

Cell["\<\
This takes the block of columns and creates \"vector\" variables \
whose names are given by the column names.\
\>", "Text"],

Cell[BoxData[
    \(mfsInterpretColumns[qp_mfs, opts___] := 
      Block[{verbose, 
          drop}, \[IndentingNewLine]verbose = \(mfsVerbose /. {opts}\) /. 
            Options[mfsInterpret]; \[IndentingNewLine]drop = \(mfsDrop /. \
{opts}\) /. Options[mfsInterpret]; \[IndentingNewLine]If[
            drop, \[IndentingNewLine]\(interpretTagValue /@ 
                Transpose[{qp\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], 
                    Transpose[
                      Rest[Drop[
                          Last[qp], \(-1\)]]]}];\), \
\[IndentingNewLine]\(interpretTagValue /@ 
                Transpose[{qp\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], 
                    Transpose[
                      qp]}];\)]\[IndentingNewLine]\[IndentingNewLine]If[
            verbose, 
            Print["\<Variables (re-)assigned: \>", 
              mfsColumnNames[qp]]]]\)], "Input",
  InitializationCell->True],

Cell["\<\
The following combines the interpretation of columns and keys.  It \
can also take a file name as argument.\
\>", "Text"],

Cell[BoxData[
    \(\(Options[mfsInterpret] = {mfsVerbose \[Rule] False, 
          mfsDrop \[Rule] True};\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(mfsInterpret[qp_mfs, opts___] := \((mfsInterpretKeys[qp, opts]; 
        mfsInterpretColumns[qp, opts])\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(mfsInterpret[fn_String, opts___] := 
      mfsInterpret[tfsRead[fn], opts]\)], "Input",
  InitializationCell->True],

Cell[TextData[{
  "Consider testing for variables already defined with ",
  StyleBox["ValueQ", "Input"],
  "."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracting information from mfs data objects", "Subsubsection"],

Cell["The list of names of the keys", "Text"],

Cell[BoxData[
    \(mfsKeyNames[qp_mfs] := First[Transpose[First[qp]]]\)], "Input",
  InitializationCell->True],

Cell["\<\
Need to handle errors properly since  unevaluated expressions involving mfs \
objects are usually long.\
\>", "Text"],

Cell[BoxData[
    \(mfsKeyValue[qp_mfs, key_String] := 
      Module[{qp1, pp}, \n\t\tqp1 = First[qp]; \n\t\tpp = 
          Position[qp1, key]; \n\t\tIf[
          pp == {}, \n\t\t\t\((Message[mfsKeyValue::notfound, key]; Null)\), 
          Extract[qp1, 
            MapAt[\((# + 1)\) &, First[pp], \(-1\)]\ ]]\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(mfsKeyValue[qp_mfs, keys_List] := \(\((mfsKeyValue[qp, #])\) &\)\  /@ \ 
        keys\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(mfsKeyValue[qp_mfs, key_] := \((Message[mfsKeyValue::notkey, key]; 
        Null)\)\)], "Input",
  InitializationCell->True],

Cell["The list of names of the columns", "Text"],

Cell[BoxData[
    \(mfsColumnNames[qp_mfs] := qp[\([\(-2\)]\)]\)], "Input",
  InitializationCell->True],

Cell[TextData[{
  "Extract one of the columns using its name in the ",
  StyleBox["mfsColumnNames", "Input"],
  " list to locate its position."
}], "Text"],

Cell[BoxData[
    \(mfsColumn[qp_mfs, key_String] := 
      Module[{}, \n\t\tpos = Position[mfsColumnNames[qp], key]; \n\t\tIf[
          pos == {}, \((Message[mfsColumn::notfound, key]; Null)\), 
          Column[Last[qp], pos[\([1, 1]\)]\ ]]\n\t]\)], "Input",
  InitializationCell->True],

Cell["Make it work with sets of columns:", "Text"],

Cell[BoxData[
    \(mfsColumn[qp_mfs, keys_List] := \ \(mfsColumn[qp, #] &\)\  /@ \ 
        keys\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(mfsColumn[qp_mfs] := Last[qp]\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Selection in an mfs object", "Subsubsection"],

Cell["Extract a value of a parameter from a row.", "Text"],

Cell[BoxData[
    \(mfsColumnValue[qp_mfs, row_List, key_String] := \n
      If[MemberQ[mfsColumnNames[qp], key], \t\n
        First[Take[row, First[Position[mfsColumnNames[qp], key]]]], 
        Message[mfsColumnValue::notfound, key]]\)], "Input",
  InitializationCell->True],

Cell["Select rows satistying a certain criterion.", "Text"],

Cell[BoxData[
    \(mfsSelect[qp_mfs, crit_Function] := 
      Module[{}, \n\t\tReplacePart[
          qp, \n\t\t\tSelect[Last[qp], 
            crit[#] &\ ]\n\t\t, {\(-1\)}]\n\t]\)], "Input",
  InitializationCell->True],

Cell["\<\
A special case of mfsSelect - parameter values belong to a list.\
\>", "Text"],

Cell[BoxData[
    \(mfsMember[qp_mfs, key_String, targetset_List] := 
      mfsSelect[
        qp, \((MemberQ[targetset, 
              mfsColumnValue[qp, #, key]])\) &]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(mfsNotMember[qp_mfs, key_String, targetset_List] := 
      mfsSelect[
        qp, \(\(\[InvisibleSpace]\)\(!\) \((MemberQ[targetset, 
                mfsColumnValue[qp, #1, key]])\)\) &]\)], "Input",
  InitializationCell->True],

Cell["\<\
Extract rows for which parameter values  lie within a specified range.\
\>", "Text"],

Cell[BoxData[
    \(mfsRange[qp_mfs, key_String, {min_, max_}] := \n\t
      If[min < max, 
        mfsSelect[
          qp, \((\ \((mfsColumnValue[qp, #, key] \[GreaterEqual] 
                    min)\)\  && \ \((mfsColumnValue[qp, #, key] \[LessEqual] 
                    max)\))\) &], 
        Message[mfsRange::badarg, min, max]]\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Editing mfs objects", "Subsubsection"],

Cell["Add an item to the key list.", "Text"],

Cell[BoxData[{
    \(\(mfsAddKey[qp_mfs, {key_String, value_}] := \n\t
        ReplacePart[qp, Join[qp[\([1]\)], {{key, value}}], 1];\)\), "\n", 
    \(mfsAddKey[qp_mfs, badarg_] := \t\((Message[mfsAddKey::badarg, badarg]; 
        Null)\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(\(mfsDeleteKey[qp_mfs, key_String] := \n\t
        Module[{qp1, pp}, \n\t\tqp1 = First[qp]; \n\t\tpp = 
            Position[qp1, key]; \n\t\tIf[
            pp == {}, \n\t\t\t\((Message[mfsKeyValue::notfound, key]; 
              Null)\), 
            ReplacePart[qp, Select[qp1, \((Not[First[#] == key])\) &], 
              1]\n\t]];\)\), "\n", 
    \(mfsDeleteKey[qp_mfs, 
        badarg_] := \t\((Message[mfsDeleteKey::badarg, badarg]; 
        Null)\)\)}], "Input",
  InitializationCell->True],

Cell[BoxData[{
    \(\(mfsEditKey[qp_mfs, {key_String, newValue_}] := 
        Module[{qp1, pp}, \n\t\tqp1 = First[qp]; \n\t\tpp = 
            Position[qp1, key]; \n\t\tIf[
            pp == {}, \n\t\t\t\((Message[mfsKeyValue::notfound, key]; 
              Null)\), 
            ReplacePart[qp, 
              ReplacePart[qp1, newValue, 
                MapAt[\((# + 1)\) &, First[pp], \(-1\)]], 
              1]\n\t]];\)\), "\n", 
    \(mfsEditKey[qp_mfs, 
        badarg_] := \t\((Message[mfsEditKey::badarg, badarg]; 
        Null)\)\)}], "Input",
  InitializationCell->True],

Cell["Reverse the order of the rows in the block of columns.", "Text"],

Cell[BoxData[
    \(mfsReverse[qp_mfs] := \ 
      ReplacePart[qp, Reverse[Last[qp]], \(-1\)]\)], "Input",
  InitializationCell->True],

Cell["A function to remove a column or a set of columns.", "Text"],

Cell[BoxData[
    \(\(mfsDeleteColumn[qp_mfs, colname_String] := \n\t
        Module[{colpos}, \n\t\tcolpos = 
            Position[mfsColumnNames[qp], colname]; \n\t\tmfs[\n\t\t\tFirst[
              qp], \n\t\t\tDrop[
              qp\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket], 
              First[colpos]], \n\t\t\t\(Drop[#, First[colpos]] &\) /@ 
              Last[qp]\n\t\t]\n\t];\)\)], "Input",
  InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsDeleteColumn[qp_mfs, colnames : {__String}] := \n\t
      Module[{cols = colnames, qpr = qp}, \n\t\tWhile[
          cols =!= {}, \n\t\t\tqpr = 
            mfsDeleteColumn[qpr, First[cols]]; \n\t\t\tcols = 
            Rest[cols]\n\t\t]; \n\t\tqpr\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(colnames\)\" is similar \
to existing symbol \"\!\(colname\)\"."\)], "Message"]
}, Open  ]],

Cell["A function to add a column or set of columns", "Text"],

Cell[BoxData[
    \(mfsAddColumn[qp_mfs, colname_String, col_List] := \n\t
      mfsMerge[{qp, mfs[{}, {colname}, Transpose[{col}]]}]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(mfsAddColumn[qp_mfs, colnames : {__String}, cols : {__List}] := \n\t
      If[Equal @@ \((Length /@ cols)\), \n\t\tmfsMerge[{qp, 
            mfs[{}, colnames, Transpose[cols]]}], \n\t\t\((Message[
            mfsAddColumn::collength]; Null)\)\n\t\t]\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Merging mfs objects", "Subsubsection"],

Cell["The function mfsHeaderMerge is not exported by the package.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsHeaderMerge[h : {__List}] := \n\t
      Module[{done = {}, rest = Union @@ h, key, tomerge}, \n\t\tWhile[
          rest =!= {}, \n\t\t\tkey = First[First[rest]]; \n\t\t\ttomerge = \ 
            Select[rest, \((First[#] == key &)\)]; \n\t\t\tAppendTo[
            done, \n\t\t\t\tIf[Length[tomerge] == 1, 
              First[tomerge], {key, 
                Last /@ tomerge}]\n\t\t\t]; \n\t\t\trest = 
            Complement[rest, tomerge];\n\t\t\t]; \n\t\tdone\n\t]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(General::"spell1" \(\(:\)\(\ \)\) 
      "Possible spelling error: new symbol name \"\!\(rest\)\" is similar to \
existing symbol \"\!\(Rest\)\"."\)], "Message"]
}, Open  ]],

Cell["\<\
Merge two mfs objects.  This version only checks that the (last, \
hence all) columns have the same length and is now superseded.\
\>", "Text",
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
    \( (*\ \(mfsMerge[qp : {__mfs}] := \n\t
          If[Equal @@ \((\(Length[Last[#]] &\) /@ 
                  qp)\), \n\t\tmfs[\n\t\t\tmfsHeaderMerge[
                First /@ qp], \n\t\t\tJoin @@ \((\(Part[#, \(-2\)] &\) /@ 
                    qp)\), \n\t\t\tMapThread[Join, 
                Last /@ qp]\n\t\t], \n\t\t\((Message[
                mfsAddColumn::collength]; Null)\)\n\t];\)*) \)], "Input",
  FontColor->RGBColor[0, 0, 1]],

Cell["\<\
A function to check that a given column matches up before merging.  \
It checks that the column values are numerically equal in each mfs object.  \
Note that if the named column is absent from any of the mfs objects, then it \
is assumed to match!  So the function only tests whether the list of mfs \
objects contain incompatible versions of a given column.\
\>", "Text"],

Cell[BoxData[
    \(mfsColumnMatch[qp : {__mfs}, mcol_String] := \n\t
      Module[{}, \n\t\tEqual @@ \((\(mfsColumn[#, mcol] &\)\  /@ \ \((Select[
                  qp, MemberQ[mfsColumnNames[#], 
                      mcol] &])\))\)\n\t\t\t]\)], "Input",
  InitializationCell->True],

Cell["Extend to a list of column names.", "Text"],

Cell[BoxData[
    \(mfsColumnMatch[qp : {__mfs}, matchCols : {__String}] := 
      And @@ \(\((mfsColumnMatch[qp, #1] &)\) /@ matchCols\)\)], "Input",
  InitializationCell->True],

Cell["\<\
Need to take care of special cases where no matching columns are \
given.\
\>", "Text"],

Cell[BoxData[{
    \(\(mfsColumnMatch[qp : {__mfs}, {}] := True;\)\), "\n", 
    \(mfsColumnMatch[qp : {__mfs}] := True\)}], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(Options[mfsMerge] = {matchColumns -> {"\<NAME\>"}};\)\)], "Input",
  InitializationCell->True],

Cell["\<\
The following early version of mfsMerge is equivalent but goes in \
smaller steps.  Worth keeping in case I can no longer understand the \
optimised version.  Cell is not evaluatable.\
\>", "Text"],

Cell[BoxData[
    RowBox[{\(mfsMerge2[qp : {__mfs}, opts___?OptionQ]\), ":=", "\n", "\t", 
      RowBox[{"Module", "[", 
        RowBox[{\({matchCols, colswanted}\), ",", "\n", "\t\t", 
          RowBox[{
          \(matchCols = \(matchColumns /. {opts}\) /. Options[mfsMerge]\), 
            ";", "\n", "\t\t", 
            \(If[matchCols == Automatic, \n\t\t\t
              matchCols = Union@@\((mfsColumnNames/@qp)\)\n\t\t]\), ";", 
            "\n", "\t\t", 
            RowBox[{"If", "[", 
              RowBox[{
              \(mfsColumnMatch[qp, matchCols]\), ",", "\n", "\t\t\t", 
                RowBox[{"If", "[", 
                  RowBox[{
                  \(Equal@@\((\(Length[Last[#]]&\)/@qp)\)\), ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{
                    \(Print[
                        allcolnames = Join@@\((\(Part[#, \(-2\)]&\)/@qp)\)]
                        \), ";", "\n", "\t\t\t\t", 
                      \(Print[
                        colnameswanted = \(cnwanted = Union[allcolnames]\)]
                        \), ";", "\n", "\t\t\t\t", 
                      RowBox[{"allcols", "=", 
                        RowBox[{"Transpose", "[", 
                          StyleBox[\(MapThread[Join, Last/@qp]\),
                            FontColor->RGBColor[1, 0, 0]], 
                          StyleBox["]",
                            FontColor->RGBColor[1, 0, 0]]}]}], 
                      StyleBox[";",
                        FontColor->RGBColor[1, 0, 0]], "\n", "\t\t\t\t", 
                      \(Print[
                        colswantedpos = 
                          First/@
                            \((\(Position[allcolnames, #]&\)/@colnameswanted)
                              \)]\), ";", "\n", "\t\t\t\t", 
                      \(colswanted = Extract[allcols, colswantedpos]\), ";", 
                      "\n", "\t\t", 
                      RowBox[{"mfs", "[", "\n", "\t\t\t\t\t", 
                        RowBox[{
                        \(mfsHeaderMerge[First/@qp]\), ",", "\n", 
                          "\t\t\t\t\t", "colnameswanted", ",", "\n", 
                          "\t\t\t\t\t", 
                          StyleBox[\(Transpose[colswanted]\),
                            FontColor->RGBColor[1, 0, 0]]}], "\n", 
                        "\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
                    \((Message[mfsMerge::badmatch]; Null)\)}], "\n", 
                  "\t\t\t", "]"}], ",", "\n", "\t\t", 
                \((Message[mfsMerge::collength]; Null)\)}], "\n", "\t\t", 
              "]"}]}]}], "\n", "\t", "]"}]}]], "Input",
  Evaluatable->False,
  FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Here is the operational version developed out of that, introducing \
fewer temporary variables but much deeper nesting of functions.\
\>", "Text"],

Cell[BoxData[
    RowBox[{\(mfsMerge[qp : {__mfs}, opts___?OptionQ]\), ":=", "\n", "\t", 
      RowBox[{"Module", "[", 
        RowBox[{\({matchCols, colnameswanted, allcolnames}\), ",", "\n", 
          "\t\t", 
          
          RowBox[{\(matchCols = \(matchColumns /. {opts}\) /. 
                Options[mfsMerge]\), ";", "\n", 
            "\t\t", \(If[
              matchCols == Automatic, \n\t\t\tmatchCols = 
                Union @@ \((mfsColumnNames /@ qp)\)\n\t\t]\), ";", "\n", 
            "\t\t", 
            RowBox[{"If", "[", 
              
              RowBox[{\(mfsColumnMatch[qp, matchCols]\), ",", "\n", "\t\t\t", 
                
                RowBox[{"If", "[", 
                  
                  RowBox[{\(Equal @@ \((\(Length[Last[#]] &\) /@ qp)\)\), ",",
                     "\n", "\t\t\t\t", 
                    
                    RowBox[{\(colnameswanted = 
                        Union[allcolnames = 
                            Join @@ \((\(Part[#, \(-2\)] &\) /@ qp)\)]\), ";",
                       "\n", "\t\t", 
                      RowBox[{"mfs", "[", "\n", "\t\t\t\t\t", 
                        
                        RowBox[{\(mfsHeaderMerge[First /@ qp]\), ",", "\n", 
                          "\t\t\t\t\t", "colnameswanted", ",", "\n", 
                          "\t\t\t\t\t", 
                          
                          StyleBox[\(Transpose[
                              Extract[Transpose[MapThread[Join, Last /@ qp]], 
                                First /@ \((\(Position[allcolnames, #] &\) /@ 
                                      colnameswanted)\)]]\),
                            FontColor->RGBColor[0, 0, 1]]}], "\n", "\t\t\t\t",
                         "]"}]}], ",", "\n", 
                    "\t\t\t", \((Message[mfsMerge::badmatch]; Null)\)}], "\n",
                   "\t\t\t", "]"}], ",", "\n", 
                "\t\t", \((Message[mfsMerge::collength]; Null)\)}], "\n", 
              "\t\t", "]"}]}]}], "\n", "\t", "]"}]}]], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Correcting inconsistencies in MAD Version 8 output", "Subsubsection"],

Cell[TextData[{
  "TFS files from MAD  Version 8 have some problems.  The following function \
returns a new ",
  StyleBox["mfs", "Input"],
  " object with some of those inconsistencies dealts with, as follow.  In \
most cases, this will produce something closer to the output from MAD  \
Version 9."
}], "Text"],

Cell["\<\
Avoid overlap of names of closed orbit components with tracked \
coordinates.\
\>", "Text"],

Cell["Name the momentum of the 3rd mode properly in tracking data.", "Text"],

Cell[BoxData[
    \(mfsFixMAD8inconsistencies[qp_mfs] := 
      Module[{kv, ch}, \[IndentingNewLine]kv = 
          First[qp] /. {\[IndentingNewLine]{"\<X\>", x_} \[Rule] {"\<XC\>", 
                  x}, \[IndentingNewLine]{"\<PX\>", px_} \[Rule] {"\<PXC\>", 
                  px}, \[IndentingNewLine]{"\<Y\>", y_} \[Rule] {"\<YC\>", 
                  y}, \[IndentingNewLine]{"\<PY\>", py_} \[Rule] {"\<PYC\>", 
                  py}, \[IndentingNewLine]{"\<T\>", t_} \[Rule] {"\<TC\>", 
                  x}, \[IndentingNewLine]{"\<DELTAP\>", 
                  pt_} \[Rule] {"\<PTC\>", 
                  pt}\[IndentingNewLine]}; \[IndentingNewLine]ch = 
          qp\[LeftDoubleBracket]\(-2\)\[RightDoubleBracket] /. {"\<DELTAP\>" \
\[Rule] "\<PT\>"}; \
\[IndentingNewLine]ReplacePart[\[IndentingNewLine]ReplacePart[qp, 
            kv, {1}], \[IndentingNewLine]ch, {\(-2\)}\[IndentingNewLine]]\
\[IndentingNewLine]]\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Old names for various functions", "Subsubsection",
  FontColor->RGBColor[1, 0, 0]],

Cell["\<\
Earlier versions of this package had less systematic naming of \
functions.  For backwards compatibility, we still allow them to work but give \
a warning message.  These definitions should eventually be removed.\
\>", 
  "Text",
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \(\(interpretDescriptors[
          x__] := \((\n\t\tMessage[
            mfs : oldname, "\<interpretDescriptors\>", \
"\<mfsInterpretKeys\>"]; \n\t\tmfsInterpretKeys[x]\n\t)\);\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \(\(keyValue[
          x__] := \((\n\t\tMessage[
            mfs : oldname, "\<keyValue\>", "\<mfsKeyValue\>"]; \n\t\t\
mfsKeyValue[x]\n\t)\);\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \(\(columnNames[
          x__] := \((\n\t\tMessage[
            mfs : oldname, "\<columnNames\>", "\<mfsColumnNames\>"]; \n\t\t\
mfsColumnNames[x]\n\t)\);\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \(\(descriptorNames[
          x__] := \((\n\t\tMessage[
            mfs : oldname, "\<descriptorNames\>", "\<mfsKeyNames\>"]; \n\t\t\
mfsKeyNames[x]\n\t)\);\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \(\(colValue[
          x__] := \((\n\t\tMessage[
            mfs : oldname, "\<colValue\>", "\<mfsColumnValue\>"]; \n\t\t\
mfsColumnValue[x]\n\t)\);\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \(\(addDescriptor[
          x__] := \((\n\t\tMessage[
            mfs : oldname, "\<addDescriptor\>", "\<mfsAddKey\>"]; \n\t\t\
mfsAddKey[x]\n\t)\);\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \(\(editDescriptor[
          x__] := \((\n\t\tMessage[
            mfs : oldname, "\<editDescriptor\>", "\<mfsEditKey\>"]; \n\t\t\
mfsEditKey[x]\n\t)\);\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \(\(deleteDescriptor[
          x__] := \((\n\t\tMessage[
            mfs : oldname, "\<deleteDescriptor\>", "\<mfsDeleteKey\>"]; \n\t\t\
mfsDeleteKey[x]\n\t)\);\)\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]]
}, Closed]],

Cell[CellGroupData[{

Cell["Updating files that use old versions of the package", "Subsubsection",
  FontColor->RGBColor[1, 0, 0]],

Cell[CellGroupData[{

Cell[BoxData[
    \(mfsVersion2UpdateRules = {"\<interpretDescriptors\>" \[Rule] \
"\<mfsInterpretKeys\>", "\<keyValue\>" \[Rule] "\<mfsKeyValue\>", \
"\<columnNames\>" \[Rule] "\<mfsColumnNames\>", "\<descriptorNames\>" \[Rule] \
"\<mfsKeyNames\>", "\<colValue\>" \[Rule] "\<mfsColumnValue\>", \
"\<addDescriptor\>" \[Rule] "\<mfsAddKey\>", "\<editDescriptor\>" \[Rule] \
"\<mfsEditKey\>", "\<deleteDescriptor\>" \[Rule] "\<mfsDeleteKey\>", \
"\<symplecticJ\>" \[Rule] "\<SymplecticJ\>"}\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[
    \({"interpretDescriptors" \[Rule] "mfsInterpretKeys", 
      "keyValue" \[Rule] "mfsKeyValue", 
      "columnNames" \[Rule] "mfsColumnNames", 
      "descriptorNames" \[Rule] "mfsKeyNames", 
      "colValue" \[Rule] "mfsColumnValue", 
      "addDescriptor" \[Rule] "mfsAddKey", 
      "editDescriptor" \[Rule] "mfsEditKey", 
      "deleteDescriptor" \[Rule] "mfsDeleteKey", 
      "symplecticJ" \[Rule] "SymplecticJ"}\)], "Output"]
}, Open  ]],

Cell[BoxData[
    \(mfsVersion2Update[oldFile_String, newFile_String] := 
      stringReplaceInFile[oldFile, newFile, 
        mfsVersion2UpdateRules]\)], "Input",
  InitializationCell->True,
  FontColor->RGBColor[1, 0, 0]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End the private context", "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["End[ ]", "Input",
  InitializationCell->True],

Cell[BoxData[
    \("Madtomma`Mfs`Mfs`Private`"\)], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Epilogue", "Section",
  InitializationCell->True],

Cell["This section protects exported symbols and ends the package.", "Text"],

Cell[CellGroupData[{

Cell["Protect exported symbols", "Subsection",
  InitializationCell->True],

Cell[BoxData[
    RowBox[{"Protect", "[", 
      RowBox[{
      "mfsTypes", ",", "removeUnwantedLines", ",", "tfsParseDescriptorLine", 
        ",", "interpretTagValue", ",", 
        RowBox[{
          StyleBox["(*",
            FontColor->RGBColor[0, 0, 1]], 
          StyleBox[
            RowBox[{"tfsInterpretDescriptorLine", ","}],
            FontColor->RGBColor[0, 0, 1]], 
          StyleBox["*)",
            FontColor->RGBColor[0, 0, 1]]}], "tfsParseHeaderBlock", ",", 
        "mfsColumn", ",", "mfsSelect", ",", " ", "mfsMember", ",", " ", 
        "mfsRange", ",", "mfsReverse", ",", "mfsAddKey", ",", "mfsKeyNames", 
        ",", "mfsColumnNames", ",", "mfsInterpretKeys", ",", "mfsKeyValue", 
        ",", "mfsColumnValue", ",", "mfsEditKey", ",", "mfsDeleteColumn", ",",
         "mfsAddColumn", ",", "mfsMerge", ",", "mfsDeleteKey", ",", "\n", 
        "\t", 
        StyleBox["addDescriptor",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox[",",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox["editDescriptor",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox[",",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox["interpretDescriptors",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox[",",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox["deleteDescriptor",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox[",",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox["colValue",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox[",",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox["keyValue",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox[",",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox["columnNames",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox[",",
          FontColor->RGBColor[1, 0, 0]], 
        StyleBox["descriptorNames",
          FontColor->RGBColor[1, 0, 0]]}], "\n", "]"}]], "Input",
  InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["End the package context", "Subsection",
  InitializationCell->True],

Cell["EndPackage[ ]", "Input",
  InitializationCell->True],

Cell["\<\
Open the palette to make it easy.  This has to be done outside the \
package context.\
\>", "Text"],

Cell[BoxData[
    \(If[$Remote, 
      Print["\<Remote kernel: MfsPalette.nb will not be opened\>"], 
      NotebookOpen[
        ToFileName[packageSourceDirectory["\<Mfs\>"], "\<MfsPalette.nb\>"]]]
      \)], "Input",
  InitializationCell->True],

Cell[BoxData[
    RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Version 2.21 of Madtomma`Mfs`Mfs` loaded.  Note function name \
changes since Version 1.x:\\n\>\"", ",", 
        RowBox[{"TableForm", "[", "mfsVersion2UpdateRules", "]"}]}], 
      "]"}]], "Input",
  InitializationCell->True]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic documentation", "Section"],

Cell["\<\
A quick way  to document this package is to list the names of the \
functions it exports [1]:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Names", "[", "\"\<Madtomma`Mfs`Mfs`*\>\"", "]"}]], "Input",
  CellTags->"Setup section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"addDescriptor\"\>", ",", "\<\"columnNames\"\>", 
        ",", "\<\"colValue\"\>", ",", "\<\"deleteDescriptor\"\>", 
        ",", "\<\"descriptorNames\"\>", ",", "\<\"editDescriptor\"\>", 
        ",", "\<\"interpretDescriptors\"\>", ",", "\<\"interpretTagValue\"\>",
         ",", "\<\"keepTemporaryFile\"\>", ",", "\<\"keyValue\"\>", 
        ",", "\<\"matchColumns\"\>", ",", "\<\"mfs\"\>", ",", "\<\"Mfs\"\>", 
        ",", "\<\"mfsAddColumn\"\>", ",", "\<\"mfsAddKey\"\>", 
        ",", "\<\"mfsColumn\"\>", ",", "\<\"mfsColumnMatch\"\>", 
        ",", "\<\"mfsColumnNames\"\>", ",", "\<\"mfsColumnValue\"\>", 
        ",", "\<\"mfsDeleteColumn\"\>", ",", "\<\"mfsDeleteKey\"\>", 
        ",", "\<\"mfsEditKey\"\>", ",", "\<\"mfsInterpretKeys\"\>", 
        ",", "\<\"mfsKeyNames\"\>", ",", "\<\"mfsKeyValue\"\>", 
        ",", "\<\"mfsMember\"\>", ",", "\<\"mfsMerge\"\>", 
        ",", "\<\"mfsRange\"\>", ",", "\<\"mfsReverse\"\>", 
        ",", "\<\"mfsSelect\"\>", ",", "\<\"mfsTypes\"\>", 
        ",", "\<\"mfsVersion2Update\"\>", 
        ",", "\<\"mfsVersion2UpdateRules\"\>", ",", "\<\"removeQuotes\"\>", 
        ",", "\<\"removeUnwantedLines\"\>", 
        ",", "\<\"stringRemoveLeadingTrailingBlanks\"\>", 
        ",", "\<\"tfsFormatRules\"\>", 
        ",", "\<\"tfsInterpretDescriptorLine\"\>", 
        ",", "\<\"tfsParseDescriptorLine\"\>", 
        ",", "\<\"tfsParseHeaderBlock\"\>", ",", "\<\"tfsRead\"\>", 
        ",", "\<\"Verbose\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
and then print their usage messages that say what they do.  \
Normally these messages are accessible by typing, e.g., \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "mfsMember"}]], "Input"],

Cell[BoxData["\<\"mfsMember[mfsdata,key,targetset] extracts rows of an \
mfsdata object for which values labelled by key belong to targetset.\"\>"], \
"Print"]
}, Open  ]],

Cell["\<\
but the following utility function generates the same information \
in formatted form (the following subsections!).\
\>", "Text"],

Cell[BoxData[
    RowBox[{"UsageCells", "[", 
      RowBox[{"Names", "[", "\"\<Madtomma`Mfs`Mfs`*\>\"", "]"}], 
      "]"}]], "Input"],

Cell[CellGroupData[{

Cell["addDescriptor", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["Obsolete function name.  Please use mfsAddKey.", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["columnNames", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["Obsolete function name.  Please use mfsColumnNames.", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["colValue", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["Obsolete function name.  Please use mfsColumnValue.", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["deleteDescriptor", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["Obsolete function name.  Please use mfsDeleteKey.", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["descriptorNames", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["Obsolete function name.  Please use mfsKeyNames.", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["editDescriptor", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["Obsolete function name.  Please use mfsEditKey.", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["interpretDescriptors", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["Obsolete function name.  Please use mfsInterpretKeys.", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["interpretTagValue", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
interpretTagValue[{\"tag\",val}] creates a variable tag and assigms \
it the value val.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["keepTemporaryFile", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
keepTemporaryFile is an option for tfsRead that causes a temporary \
file not to be deleted.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["keyValue", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["Obsolete function name.  Please use mfsKeyValue.", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["matchColumns", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
matchColumns is an option for mfsMerge that gives a list of column \
names that must match in all the mfs objects in which they appear.  The value \
Automatic insists that all possible matches hold.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfs", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfs is a data object type containing a set of scalar variables with \
values and a set of labelled columns of data; typically it can represent the \
data structures in TFS files.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mfs", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["Mfs.m is a package for manipulating MFS data.", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsAddColumn", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsAddColumn[qp,\"colname\",coldata] returns an mfs object equal to \
qp but with a new column labelled colname and containing data coldata added. \
A list of column names and columns of data can also be given.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsAddKey", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsAddKey[mfsdata,{\"KEY\",value}] returns the mfs (or related) \
data object mfsdata with an additional key and value.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsColumn", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsColumn[mfsdata,colname] returns the column of data labelled by \
the string colname in an mfs (or related) data object. A list of colnames may \
also be given to return a set of columns.  If colname is absent the entire \
block of columns is returned.
 mfsColumn[TrackTabledata,n,colname] extracts a list of coordinates of \
particle n labelled by the string colname from a TrackTable data object. A \
list of colnames may also be given to return a set of lists.  If colname is \
absent the entire block of coordinates is returned. If the particle number is \
absent a list of the requested column for all the particles is returned.
 mfsColumn[SurvivalData,colname], mfsColumn[SurvivalData,particle,colname], \
mfsColumn[SurvivalData] are the obvious extensions to SurvivalTable \
objects.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsColumnMatch", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsColumnMatch[{qp1,qp2,...},{\"col1\",\"col2\",...}] tests whether \
a list of column namesmatch in all the mfs objects in which they \
appear.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsColumnNames", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsColumnNames[mfsdata] returns the list of column names in an mfs \
data (or related) object.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsColumnValue", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsColumnValue[mfsdata,row,key] extracts a value labelled by key in \
row from an mfsdata object.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsDeleteColumn", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsDeleteColumn[qp,\"colname\"] returns an mfs object equal to qp \
but with the column labelled colname removed. A list of column names can also \
be given.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsDeleteKey", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsDeleteKey[mfsdata,key] returns  the mfs (or related) data object \
mfsdata with the descriptor key removed.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsEditKey", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsEditKey[mfsdata,{key,newValue}] returns the mfs (or related) \
data object mfsdata with the value corresponding to the descriptor key \
replaced by newValue.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsInterpretKeys", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsInterpretKeys[mfsdata] creates a set of variables with values \
from the keys in an mfs (or related) data object.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsKeyNames", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsKeyNames[mfsdata] returns the list of key names in the header \
block of an mfs (or related) data object.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsKeyValue", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsKeyValue[mfsdata,key] returns the value corresponding to a \
descriptor key (a string) in an mfs (or related) data object.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsMember", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsMember[mfsdata,key,targetset] extracts rows of an mfsdata object \
for which values labelled by key belong to targetset.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsMerge", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsMerge[{qp1,qp2,...}] nerges a list of mfs objects into a single \
one containing all the header and column information in each of them.  The \
column lengths must match.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsRange", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsRange[mfsdata,key,{min,max}] extracts rows of an mfsdata object \
for which values labelled by key lie within min and max. NOTE : min must be \
smaller than max !!!\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsReverse", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsReverse[mfsdata] returns the mfs object with the rows of the \
main block of columns in reverse order.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsSelect", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsSelect[mfsdata,criterion] extracts rows satisfying criterion \
(function) from an mfsdata object.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsTypes", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell[BoxData[
    RowBox[{
      RowBox[{"Message", "::", "\<\"name\"\>"}], 
      RowBox[{
      ":", " "}], "\<\"Message name \\!\\(\\(\\({EigenTable, MatrixTable, \
mfs, SurvivalTable, TrackTable}\\)\\) :: \\\"usage\\\"\\) is not of the form \
symbol::name or symbol::name::language.\"\>"}]], "Message"],

Cell["\<\
MessageName[{EigenTable, MatrixTable, mfs, SurvivalTable, \
TrackTable}, usage]\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsVersion2Update", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
mfsVersion2Update[oldfile,newfile] will create a new version of a \
file in which names of functions in Version 1.x of the Madtomma`Mfs`Mfs` \
package are changed to their equivalents in Version 2.x.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsVersion2UpdateRules", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell[BoxData[
    RowBox[{
      RowBox[{"Message", "::", "\<\"name\"\>"}], 
      RowBox[{
      ":", " "}], "\<\"Message name \\!\\(\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\) :: \\\"usage\\\"\\) is not of the form symbol::name or \
symbol::name::language.\"\>"}]], "Message"],

Cell["\<\
MessageName[{interpretDescriptors -> mfsInterpretKeys, keyValue -> \
mfsKeyValue, columnNames -> mfsColumnNames, descriptorNames -> mfsKeyNames, \
colValue -> mfsColumnValue, addDescriptor -> mfsAddKey, editDescriptor -> \
mfsEditKey, deleteDescriptor -> mfsDeleteKey, symplecticJ -> SymplecticJ}, \
usage]\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["removeQuotes", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
removeQuotes[x] will remove any double quotes \" explicitly \
included in a string x.  If x is not a string then it is returned \
unchanged.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["removeUnwantedLines", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
removeUnwantedLines[infile,outfile,string] copies file infile to \
outfile, removing all lines containing string.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["stringRemoveLeadingTrailingBlanks", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
stringRemoveLeadingTrailingBlanks[string] removes leading and \
trailing blanks from a string.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["tfsFormatRules", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
tfsFormatRules is an option of tfsRead and related functions like \
tfsParseHeaderBlock.  It gives a set of rules for transforming TFS column \
formats into Mathematica data types.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["tfsInterpretDescriptorLine", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
tfsInterpretDescriptorLine[string] takes a TFS descriptor line as a \
string, creates a variable from the key name and assigns it the value.\
\>", \
"Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["tfsParseDescriptorLine", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
tfsParseDescriptorLine[string] takes a TFS descriptor line as a \
string and returns a list consisting of the TFS key and its value.\
\>", \
"Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["tfsParseHeaderBlock", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
tfsParseHeaderBlock[file] returns the information in the header \
block of a TFS file as a structured list.  It is normally used inside \
readTfsTable.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["tfsRead", "Subsection",
  GeneratedCell->True,
  CellAutoOverwrite->True],

Cell["\<\
tfsRead[file] returns an mfs data object containing all the \
information in a TFS file.\
\>", "Text",
  GeneratedCell->True,
  CellAutoOverwrite->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["mfsVerbose", "Subsection"],

Cell["\<\
mfsVerbose is an option for removeUnwantedLines, \
tfsParseHeaderBlock and tfsRead that specifieds whether informative messages \
should be printed.\
\>", "Text"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["User's Guide and Examples", "Section",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell["Creating  an mfs object from a file of data", "Subsection",
  CellTags->"Examples section"],

Cell["\<\
First, let us define a sample data file.  This one was created in \
MAD using the ARCHIVE command to save the TRACK table generated by tracking a \
number of particles from the same initial condition with quantum \
fluctuations.   Here we specify the file path and name in a \
system-indepemdent  manner.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"sampleFile", "=", 
      RowBox[{"ToFileName", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"AfsHomeDirectory", "[", "\"\<jowett\>\"", "]"}], ",", 
              "\"\<public\>\"", ",", "\"\<math\>\"", ",", "\"\<Madtomma\>\"", 
              ",", "\"\<Mfs\>\"", ",", "\"\<Examples\>\""}], "}"}], ",", 
          "\"\<qkick.tfs\>\""}], "]"}]}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"P:\\\\cern.ch\\\\user\\\\j\\\\jowett\\\\public\\\\math\\\\\
Madtomma\\\\Mfs\\\\Examples\\\\qkick.tfs\"\>"], "Output"]
}, Open  ]],

Cell["Choose some directory of your own for the examples", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"SetDirectory", "[", "$TemporaryPrefix", "]"}]], "Input"],

Cell[BoxData["\<\"C:\\\\TEMP\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
  "Having loaded the package, we can list all the data types  in the ",
  StyleBox["mfs", "Input"],
  " class by evaluating:"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData["mfsTypes"], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", "mfs", "}"}]], "Output"]
}, Open  ]],

Cell["\<\
The most common applications will start by reading a TFS \
file:\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "tfsRead"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"tfsRead[file] returns an mfs data object containing all the \
information in a TFS file.\"\>"], "Print"]
}, Open  ]],

Cell["\<\
In any expression which evaluates to an mfs data object, it is \
worth remembering to add a semi-colon to suppress  printing as these can be \
very long.\
\>", "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"qpmfs", "=", 
        RowBox[{"tfsRead", "[", 
          RowBox[{"sampleFile", ",", 
            RowBox[{"mfsVerbose", "\[Rule]", "False"}]}], "]"}]}], 
      ";"}]], "InputOnly",
  CellTags->"Examples section"],

Cell["\<\
MAD users know that this leads to a file containing various pieces \
of descriptive information at the top, followed by a body of columns listing \
the coordinates of the surviving particles on successive turns, separated by \
comment lines.\
\>", "Text",
  CellTags->"Examples section"],

Cell[TextData[{
  "Since only one of the particles survives the full tracking time, the \
others being lost after varying numbers of turns, the number of lines of the \
TFS file corresponding to each turn gradually dwindles.  The ",
  StyleBox["tfsRead", "Input"],
  " function deals with  these details automatically."
}], "Text",
  CellTags->"Examples section"],

Cell[TextData[{
  "Now the symbols ",
  StyleBox["qpmfs ", "Input"],
  "contains an mfs data object which we can print in abbreviated form:"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Short", "[", 
      RowBox[{"qpmfs", ",", "8"}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[
      RowBox[{"mfs", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"\<\"TYPE\"\>", ",", "\<\"TRACK\"\>"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"\<\"X\"\>", ",", 
                  RowBox[{"-", "0.00038835361175100004`"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"\<\"PX\"\>", ",", 
                  RowBox[{"-", "0.0000167029349567`"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"\<\"Y\"\>", ",", 
                  RowBox[{"-", "0.00038184396626099996`"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"\<\"PY\"\>", ",", 
                  RowBox[{"-", "2.9493485039200003`*^-6"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"\<\"ET\"\>", ",", "0.0000102626001956`"}], "}"}], 
              ",", 
              RowBox[{"{", 
                RowBox[{"\<\"EY\"\>", ",", "1.05428403375`*^-10"}], "}"}], 
              ",", 
              RowBox[{"{", 
                RowBox[{"\<\"EX\"\>", ",", "2.98256612951`*^-8"}], "}"}], ",",
               
              RowBox[{"{", 
                RowBox[{"\<\"E11\"\>", ",", "5.25333002895`"}], "}"}], ",", 
              RowBox[{"\[LeftSkeleton]", "31", "\[RightSkeleton]"}], ",", 
              RowBox[{"{", 
                RowBox[{"\<\"E63\"\>", ",", 
                  RowBox[{"-", "0.00011706941393`"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"\<\"E64\"\>", ",", "0.000342355037377`"}], "}"}], 
              ",", 
              RowBox[{"{", 
                RowBox[{"\<\"E65\"\>", ",", "0.004009558592179999`"}], "}"}], 
              ",", 
              RowBox[{"{", 
                RowBox[{"\<\"E66\"\>", ",", "0.420458776176`"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"\<\"COMMENT\"\>", ",", "\<\"\"\>"}], "}"}], ",", 
              RowBox[{"{", 
                
                RowBox[{"\<\"ORIGIN\"\>", 
                  ",", "\<\"MAD 8.21/11 RS6000 - AIX\"\>"}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{"\<\"DATE\"\>", ",", "\<\"01/05/97\"\>"}], "}"}], ",",
               
              RowBox[{"{", 
                RowBox[{"\<\"TIME\"\>", ",", "\<\"15.40.36\"\>"}], "}"}]}], 
            "}"}], ",", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ",", 
          RowBox[{"{", 
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}], 
        "]"}],
      (Short[ #, 8]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "The option ",
  StyleBox["mfsVerbose->False", "Input"],
  " can be used to suppress the printed information in ",
  StyleBox["tfsRead", "Input"],
  " and other functiions."
}], "Text",
  CellTags->"Examples section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
An easy  way to use an mfs object: automatic variable \
assignment\
\>", "Subsection",
  CellTags->"mfsInterpret"],

Cell[TextData[{
  "In relatively simple situations, it is sufficient to transform the ",
  StyleBox["mfs", "Input"],
  " data object into a set of ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " variables whose  names are given by  turning the strings identifying the \
data in the original TFS file into symbols.  These symbols are then assigned \
the corresponding values.  This is most easily understood by example."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsInterpret", "[", "qpmfs", "]"}]], "Input"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Variables (re-)assigned: \"\>", "\[InvisibleSpace]", 
        RowBox[{"{", 
          
          RowBox[{"\<\"TYPE\"\>", ",", "\<\"X\"\>", ",", "\<\"PX\"\>", 
            ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", ",", "\<\"ET\"\>", 
            ",", "\<\"EY\"\>", ",", "\<\"EX\"\>", ",", "\<\"E11\"\>", 
            ",", "\<\"E12\"\>", ",", "\<\"E13\"\>", ",", "\<\"E14\"\>", 
            ",", "\<\"E15\"\>", ",", "\<\"E16\"\>", ",", "\<\"E21\"\>", 
            ",", "\<\"E22\"\>", ",", "\<\"E23\"\>", ",", "\<\"E24\"\>", 
            ",", "\<\"E25\"\>", ",", "\<\"E26\"\>", ",", "\<\"E31\"\>", 
            ",", "\<\"E32\"\>", ",", "\<\"E33\"\>", ",", "\<\"E34\"\>", 
            ",", "\<\"E35\"\>", ",", "\<\"E36\"\>", ",", "\<\"E41\"\>", 
            ",", "\<\"E42\"\>", ",", "\<\"E43\"\>", ",", "\<\"E44\"\>", 
            ",", "\<\"E45\"\>", ",", "\<\"E46\"\>", ",", "\<\"E51\"\>", 
            ",", "\<\"E52\"\>", ",", "\<\"E53\"\>", ",", "\<\"E54\"\>", 
            ",", "\<\"E55\"\>", ",", "\<\"E56\"\>", ",", "\<\"E61\"\>", 
            ",", "\<\"E62\"\>", ",", "\<\"E63\"\>", ",", "\<\"E64\"\>", 
            ",", "\<\"E65\"\>", ",", "\<\"E66\"\>", ",", "\<\"COMMENT\"\>", 
            ",", "\<\"ORIGIN\"\>", ",", "\<\"DATE\"\>", ",", "\<\"TIME\"\>"}],
           "}"}]}],
      SequenceForm[ 
      "Variables (re-)assigned: ", {"TYPE", "X", "PX", "Y", "PY", "ET", "EY", 
        "EX", "E11", "E12", "E13", "E14", "E15", "E16", "E21", "E22", "E23", 
        "E24", "E25", "E26", "E31", "E32", "E33", "E34", "E35", "E36", "E41", 
        "E42", "E43", "E44", "E45", "E46", "E51", "E52", "E53", "E54", "E55", 
        "E56", "E61", "E62", "E63", "E64", "E65", "E66", "COMMENT", "ORIGIN", 
        "DATE", "TIME"}],
      Editable->False]], "Print"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Variables (re-)assigned: \"\>", "\[InvisibleSpace]", 
        RowBox[{"{", 
          
          RowBox[{"\<\"TURNS\"\>", ",", "\<\"PARTICLE\"\>", ",", "\<\"X\"\>", 
            ",", "\<\"PX\"\>", ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", 
            ",", "\<\"T\"\>", ",", "\<\"DELTAP\"\>"}], "}"}]}],
      SequenceForm[ 
      "Variables (re-)assigned: ", {"TURNS", "PARTICLE", "X", "PX", "Y", "PY",
         "T", "DELTAP"}],
      Editable->False]], "Print"]
}, Open  ]],

Cell[TextData[{
  "The first group of variables are the keys given in the header part of the \
TFS file.   Thus, for example, a new variable ",
  StyleBox["TIME", "Input"],
  " has been created and assigned the value associated with the key \"TIME\" \
in the TFS file:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData["TIME"], "Input"],

Cell[BoxData["\<\"15.40.36\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
  "Similarly, there is a variable ",
  StyleBox["E11", "Input"],
  " that can now be used in calculations"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    SuperscriptBox["E11", "2"]], "Input"],

Cell[BoxData["27.597476393067804`"], "Output"]
}, Open  ]],

Cell[TextData[{
  "The data in the columns of the TFS file is assigned to some vector \
variables that may, for example be plotted.  The ",
  StyleBox["Transpose", "Input"],
  " operation is necessary to turn a pair of lists of numbers into a list of \
pairs of numbers."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"ListPlot", "[", 
      RowBox[{"Transpose", "[", 
        RowBox[{"{", 
          RowBox[{"T", ",", "Y"}], "}"}], "]"}], "]"}]], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.123577 7.19357 0.268963 48.0785 [
[.26745 .25646 -12 -9 ]
[.26745 .25646 12 0 ]
[.41132 .25646 -12 -9 ]
[.41132 .25646 12 0 ]
[.55519 .25646 -12 -9 ]
[.55519 .25646 12 0 ]
[.69906 .25646 -12 -9 ]
[.69906 .25646 12 0 ]
[.84293 .25646 -9 -9 ]
[.84293 .25646 9 0 ]
[.98681 .25646 -12 -9 ]
[.98681 .25646 12 0 ]
[.11108 .07665 -36 -4.5 ]
[.11108 .07665 0 4.5 ]
[.11108 .17281 -36 -4.5 ]
[.11108 .17281 0 4.5 ]
[.11108 .36512 -30 -4.5 ]
[.11108 .36512 0 4.5 ]
[.11108 .46128 -30 -4.5 ]
[.11108 .46128 0 4.5 ]
[.11108 .55743 -30 -4.5 ]
[.11108 .55743 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.26745 .26896 m
.26745 .27521 L
s
[(0.02)] .26745 .25646 0 1 Mshowa
.41132 .26896 m
.41132 .27521 L
s
[(0.04)] .41132 .25646 0 1 Mshowa
.55519 .26896 m
.55519 .27521 L
s
[(0.06)] .55519 .25646 0 1 Mshowa
.69906 .26896 m
.69906 .27521 L
s
[(0.08)] .69906 .25646 0 1 Mshowa
.84293 .26896 m
.84293 .27521 L
s
[(0.1)] .84293 .25646 0 1 Mshowa
.98681 .26896 m
.98681 .27521 L
s
[(0.12)] .98681 .25646 0 1 Mshowa
.125 Mabswid
.15955 .26896 m
.15955 .27271 L
s
.19551 .26896 m
.19551 .27271 L
s
.23148 .26896 m
.23148 .27271 L
s
.30342 .26896 m
.30342 .27271 L
s
.33938 .26896 m
.33938 .27271 L
s
.37535 .26896 m
.37535 .27271 L
s
.44729 .26896 m
.44729 .27271 L
s
.48326 .26896 m
.48326 .27271 L
s
.51922 .26896 m
.51922 .27271 L
s
.59116 .26896 m
.59116 .27271 L
s
.62713 .26896 m
.62713 .27271 L
s
.6631 .26896 m
.6631 .27271 L
s
.73503 .26896 m
.73503 .27271 L
s
.771 .26896 m
.771 .27271 L
s
.80697 .26896 m
.80697 .27271 L
s
.8789 .26896 m
.8789 .27271 L
s
.91487 .26896 m
.91487 .27271 L
s
.95084 .26896 m
.95084 .27271 L
s
.08761 .26896 m
.08761 .27271 L
s
.05164 .26896 m
.05164 .27271 L
s
.01567 .26896 m
.01567 .27271 L
s
.25 Mabswid
0 .26896 m
1 .26896 L
s
.12358 .07665 m
.12983 .07665 L
s
[(-0.004)] .11108 .07665 1 0 Mshowa
.12358 .17281 m
.12983 .17281 L
s
[(-0.002)] .11108 .17281 1 0 Mshowa
.12358 .36512 m
.12983 .36512 L
s
[(0.002)] .11108 .36512 1 0 Mshowa
.12358 .46128 m
.12983 .46128 L
s
[(0.004)] .11108 .46128 1 0 Mshowa
.12358 .55743 m
.12983 .55743 L
s
[(0.006)] .11108 .55743 1 0 Mshowa
.125 Mabswid
.12358 .10069 m
.12733 .10069 L
s
.12358 .12473 m
.12733 .12473 L
s
.12358 .14877 m
.12733 .14877 L
s
.12358 .19684 m
.12733 .19684 L
s
.12358 .22088 m
.12733 .22088 L
s
.12358 .24492 m
.12733 .24492 L
s
.12358 .293 m
.12733 .293 L
s
.12358 .31704 m
.12733 .31704 L
s
.12358 .34108 m
.12733 .34108 L
s
.12358 .38916 m
.12733 .38916 L
s
.12358 .4132 m
.12733 .4132 L
s
.12358 .43724 m
.12733 .43724 L
s
.12358 .48532 m
.12733 .48532 L
s
.12358 .50936 m
.12733 .50936 L
s
.12358 .53339 m
.12733 .53339 L
s
.12358 .05261 m
.12733 .05261 L
s
.12358 .02857 m
.12733 .02857 L
s
.12358 .00453 m
.12733 .00453 L
s
.12358 .58147 m
.12733 .58147 L
s
.12358 .60551 m
.12733 .60551 L
s
.25 Mabswid
.12358 0 m
.12358 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.008 w
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.12358 .26896 Mdot
.1594 .24654 Mdot
.16712 .24706 Mdot
.15243 .24949 Mdot
.15061 .24684 Mdot
.17139 .24632 Mdot
.15864 .24823 Mdot
.1512 .24767 Mdot
.16381 .24912 Mdot
.1604 .24869 Mdot
.16466 .24731 Mdot
.16476 .24776 Mdot
.1636 .24901 Mdot
.15468 .24853 Mdot
.16487 .24755 Mdot
.15897 .24848 Mdot
.16264 .24859 Mdot
.25806 .2478 Mdot
.27654 .2476 Mdot
.21706 .25705 Mdot
.24003 .25068 Mdot
.2735 .24807 Mdot
.25761 .24976 Mdot
.23778 .25117 Mdot
.26078 .25372 Mdot
.23749 .25518 Mdot
.24896 .24893 Mdot
.26697 .24855 Mdot
.2511 .25396 Mdot
.23641 .25042 Mdot
.25189 .25202 Mdot
.2422 .25294 Mdot
.25644 .25181 Mdot
.37451 .21749 Mdot
.41117 .22426 Mdot
.31147 .23601 Mdot
.37008 .22508 Mdot
.39525 .21668 Mdot
.38682 .22084 Mdot
.35028 .22531 Mdot
.38433 .22911 Mdot
.32991 .23936 Mdot
.35596 .22032 Mdot
.39331 .21856 Mdot
.3726 .2306 Mdot
.33688 .22349 Mdot
.36357 .23252 Mdot
.35116 .22322 Mdot
.37687 .21861 Mdot
.45194 .20481 Mdot
.51057 .18849 Mdot
.38437 .22261 Mdot
.47605 .19514 Mdot
.49578 .18458 Mdot
.50788 .18334 Mdot
.43536 .211 Mdot
.49017 .20293 Mdot
.42003 .21384 Mdot
.45287 .18809 Mdot
.51179 .18019 Mdot
.45972 .21336 Mdot
.4212 .20047 Mdot
.45077 .20693 Mdot
.44523 .20321 Mdot
.46992 .20259 Mdot
.4812 .242 Mdot
.55089 .25518 Mdot
.42277 .25295 Mdot
.52685 .24928 Mdot
.55444 .23482 Mdot
.58808 .20977 Mdot
.48111 .24764 Mdot
.55338 .23748 Mdot
.44717 .2675 Mdot
.50671 .19803 Mdot
.56131 .21091 Mdot
.49457 .26532 Mdot
.47816 .21912 Mdot
.4823 .26942 Mdot
.49495 .22106 Mdot
.51743 .1835 Mdot
.49575 .20162 Mdot
.56593 .23853 Mdot
.42456 .21651 Mdot
.52801 .22653 Mdot
.59486 .17106 Mdot
.65645 .11301 Mdot
.4901 .22002 Mdot
.58128 .18808 Mdot
.42991 .2445 Mdot
.53993 .14166 Mdot
.5961 .16698 Mdot
.48198 .2414 Mdot
.51761 .1498 Mdot
.45154 .26172 Mdot
.50721 .21477 Mdot
.53898 .1707 Mdot
.48933 .38221 Mdot
.53266 .41158 Mdot
.39256 .36273 Mdot
.47275 .42403 Mdot
.62447 .39858 Mdot
.7149 .35612 Mdot
.46752 .38746 Mdot
.54705 .40964 Mdot
.35977 .37544 Mdot
.58326 .37202 Mdot
.60898 .41843 Mdot
.42096 .38391 Mdot
.55739 .33666 Mdot
.37356 .39968 Mdot
.46716 .41915 Mdot
.51908 .36942 Mdot
.46985 .34091 Mdot
.44831 .40349 Mdot
.33813 .351 Mdot
.34977 .4205 Mdot
.63002 .32352 Mdot
.76432 .31827 Mdot
.39808 .37979 Mdot
.44715 .39913 Mdot
.2581 .36665 Mdot
.61806 .29613 Mdot
.57019 .39359 Mdot
.31932 .37519 Mdot
.59738 .26947 Mdot
.26025 .38391 Mdot
.39073 .40775 Mdot
.48639 .37249 Mdot
.41427 .38288 Mdot
.30932 .32581 Mdot
.26663 .3477 Mdot
.21251 .32182 Mdot
.57229 .38496 Mdot
.76712 .42127 Mdot
.29993 .34651 Mdot
.32456 .36443 Mdot
.18142 .31142 Mdot
.60707 .41367 Mdot
.46274 .41274 Mdot
.20724 .30448 Mdot
.6311 .38252 Mdot
.16009 .28968 Mdot
.27954 .3426 Mdot
.42342 .44119 Mdot
.33426 .38024 Mdot
.22481 .58814 Mdot
.21784 .32047 Mdot
.1156 .28127 Mdot
.48318 .45112 Mdot
.67383 .41097 Mdot
.22397 .3298 Mdot
.20399 .3761 Mdot
.16031 .32573 Mdot
.54725 .40257 Mdot
.35738 .56912 Mdot
.14871 .29498 Mdot
.60793 .3582 Mdot
.13638 .28444 Mdot
.19615 .28515 Mdot
.33346 .41518 Mdot
.25723 .25886 Mdot
.20123 .26159 Mdot
.11323 .19982 Mdot
.50427 .32106 Mdot
.19869 .24003 Mdot
.18431 .32178 Mdot
.22448 .32768 Mdot
.4294 .33251 Mdot
.1899 .26915 Mdot
.52653 .36048 Mdot
.18339 .25599 Mdot
.17539 .19492 Mdot
.27517 .24345 Mdot
.21209 .3088 Mdot
.21779 .19915 Mdot
.20588 .24689 Mdot
.22224 .20601 Mdot
.30374 .57637 Mdot
.35849 .3193 Mdot
.27797 .25866 Mdot
.43085 .56537 Mdot
.29154 .27972 Mdot
.21177 .17723 Mdot
.28036 .24579 Mdot
.21556 .25406 Mdot
.26307 .21122 Mdot
.34133 .2917 Mdot
.28697 .2283 Mdot
.53023 .47195 Mdot
.38845 .33212 Mdot
.42549 .39162 Mdot
.27129 .14875 Mdot
.33974 .26391 Mdot
.29343 .2799 Mdot
.30674 .19827 Mdot
.4524 .27026 Mdot
.35429 .20905 Mdot
.73048 .58595 Mdot
.478 .24346 Mdot
.55054 .35129 Mdot
.31636 .22737 Mdot
.40589 .20563 Mdot
.41354 .42835 Mdot
.31502 .20223 Mdot
.50276 .29309 Mdot
.38087 .19771 Mdot
.5595 .26877 Mdot
.70668 .54424 Mdot
.34872 .25112 Mdot
.46243 .24887 Mdot
.56116 .46817 Mdot
.30894 .24735 Mdot
.48561 .2032 Mdot
.388 .2245 Mdot
.57971 .20235 Mdot
.38352 .30912 Mdot
.48385 .18074 Mdot
.29386 .32215 Mdot
.41755 .20031 Mdot
.36555 .19899 Mdot
.52704 .14281 Mdot
.38669 .39996 Mdot
.45741 .18676 Mdot
.27967 .3075 Mdot
.30033 .19577 Mdot
.34813 .26241 Mdot
.39994 .15153 Mdot
.32599 .36766 Mdot
.38759 .21825 Mdot
.27563 .33602 Mdot
.34695 .27911 Mdot
.23031 .36021 Mdot
.22897 .25241 Mdot
.31988 .20477 Mdot
.27357 .31732 Mdot
.33898 .28073 Mdot
.0812 .39315 Mdot
.16025 .20748 Mdot
.27747 .26598 Mdot
.26612 .2766 Mdot
.3089 .35264 Mdot
.02381 .348 Mdot
.11779 .17107 Mdot
.27891 .18433 Mdot
.25021 .21018 Mdot
.2786 .32376 Mdot
.07681 .30775 Mdot
.11684 .22399 Mdot
.33741 .11178 Mdot
.25754 .18771 Mdot
.25195 .30661 Mdot
.25377 .49634 Mdot
.1531 .18623 Mdot
.25447 .21238 Mdot
.23306 .29124 Mdot
.5195 .58388 Mdot
.2561 .26851 Mdot
.24933 .21911 Mdot
.21752 .24344 Mdot
.39814 .25828 Mdot
.24283 .2876 Mdot
.21257 .22467 Mdot
.55946 .12331 Mdot
.25708 .33826 Mdot
.22285 .20538 Mdot
.72186 .25957 Mdot
.28246 .31836 Mdot
.23013 .23402 Mdot
.88991 .27409 Mdot
.28745 .31245 Mdot
.21633 .21272 Mdot
.27353 .28829 Mdot
.23643 .27801 Mdot
.24486 .23773 Mdot
.30129 .27797 Mdot
.21545 .20428 Mdot
.37207 .23323 Mdot
.22061 .17955 Mdot
.42303 .31438 Mdot
.23414 .25983 Mdot
.43958 .27169 Mdot
.26777 .27043 Mdot
.4068 .33637 Mdot
.30245 .30482 Mdot
.32713 .3355 Mdot
.30417 .3493 Mdot
.22234 .29212 Mdot
.27967 .32246 Mdot
.16792 .41571 Mdot
.24026 .2634 Mdot
.25841 .60332 Mdot
.21843 .21999 Mdot
.20855 .19185 Mdot
.18952 .24265 Mdot
.19454 .25831 Mdot
.22642 .30218 Mdot
.24147 .32998 Mdot
.23562 .30621 Mdot
.22502 .26605 Mdot
.21924 .23068 Mdot
.21342 .20416 Mdot
.19732 .24574 Mdot
.18505 .27782 Mdot
.19343 .30735 Mdot
.20593 .31735 Mdot
.21957 .28874 Mdot
.23328 .25075 Mdot
.21993 .21145 Mdot
.18474 .21167 Mdot
.17518 .27619 Mdot
.17402 .32185 Mdot
.18823 .31077 Mdot
.21092 .29063 Mdot
.23065 .23601 Mdot
.236 .20849 Mdot
.23375 .23338 Mdot
.19787 .29019 Mdot
.13947 .3142 Mdot
.09205 .30916 Mdot
.07344 .24904 Mdot
.08284 .21463 Mdot
.1273 .23002 Mdot
.17886 .2725 Mdot
.22428 .29244 Mdot
.24881 .32788 Mdot
.2457 .28305 Mdot
.21528 .22721 Mdot
.15386 .21338 Mdot
.09656 .27339 Mdot
.08301 .2997 Mdot
.10332 .32275 Mdot
.12675 .27201 Mdot
.16807 .23755 Mdot
.21331 .22073 Mdot
.24369 .25021 Mdot
.25013 .28092 Mdot
.23281 .32327 Mdot
.19106 .28501 Mdot
.13073 .22375 Mdot
.07797 .21421 Mdot
.06332 .28116 Mdot
.09007 .31019 Mdot
.14293 .31853 Mdot
.19713 .28296 Mdot
.22545 .22736 Mdot
.22852 .20482 Mdot
.20209 .26528 Mdot
.17463 .32136 Mdot
.14744 .30695 Mdot
.13656 .26471 Mdot
.16059 .22469 Mdot
.19384 .23359 Mdot
.18733 .28013 Mdot
.156 .32043 Mdot
.12897 .27657 Mdot
.09783 .22736 Mdot
.07283 .23424 Mdot
.07635 .28278 Mdot
.10539 .30406 Mdot
.14472 .30771 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{35, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/A000`40O003h00Oogoo8Goo003oOolQ
Ool00?moob5oo`00ogoo8Goo000WOol00`00Oomoo`3fOol002Moo`800?Moo`009goo00<007ooOol0
mWoo000WOol00`00Oomoo`3fOol002Moo`03001oogoo0?Ioo`009goo00<007ooOol0mWoo000WOol0
0`00Oomoo`3fOol002Moo`800?Moo`009goo00<007ooOol0mWoo000WOol00`00Oomoo`3fOol002Mo
o`03001oogoo0?Ioo`009goo00<007ooOol0mWoo000WOol00`00Oomoo`3fOol002Moo`03001oogoo
0?Ioo`009goo0P00mgoo000WOol00`00Oomoo`3fOol002Moo`03001oogoo0?Ioo`009goo00<007oo
Ool0mWoo000WOol00`00Oomoo`3fOol000Qoo`8000Aoo`8000Aoo`8000Aoo`8000Eoo`<000=oo`03
001oogoo0?Ioo`001goo00@007ooOol000Qoo`04001oogoo0002Ool01000Oomoo`001Goo00<007oo
Ool00Woo00<007ooOol0mWoo0007Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002
Ool50003Ool3003fOol00003Ool000000080009oo`04001oogoo0008Ool01000Oomoo`000Woo00@0
07ooOol0009oo`04001oogoo0004Ool00`00Oomoo`3fOol000Moo`04001oogoo0008Ool01000Oomo
o`000Woo00@007ooOol000=oo`03001oo`0000Aoo`03001oogoo0?Ioo`0027oo0P002Woo0P0017oo
0P001Goo0P0017oo00<007ooOol0mWoo000WOol00`00Oomoo`3fOol002Moo`03001oogoo0?Ioo`00
9goo0P00mgoo000WOol00`00Oomoo`3fOol002Moo`03001oogoo0?Ioo`009goo00<007ooOol0=goo
00<007ooOol0E7oo00<007ooOol0IGoo000WOol00`00Oomoo`0gOol00`00Oomoo`1DOol00`00Oomo
o`1UOol002Moo`03001oogoo0?Ioo`009goo00<007ooOol0Lgoo00<007ooOol0P7oo000WOol2001d
Ool00`00Oomoo`20Ool002Moo`03001oogoo0?Ioo`009goo00<007ooOol0mWoo000WOol00`00Oomo
o`3fOol002Moo`03001oogoo06Yoo`05001oogooOol00027Ool002Moo`03001oogoo06Yoo`05001o
ogooOol00027Ool002Moo`8002Ioo`03001oogoo041oo`03001oogoo08]oo`009goo00<007ooOol0
9Goo00<007ooOol087oo00<007ooOol07Goo00<007ooOol0Rgoo000WOol00`00Oomoo`18Ool00`00
Oomoo`2[Ool002Moo`03001oogoo0?Ioo`009goo00<007ooOol0mWoo0008Ool20004Ool20004Ool2
0004Ool20003Ool40004Ool00`00Oomoo`1mOol00`00Oomoo`1fOol000Moo`04001oogoo0008Ool0
1000Oomoo`000Woo00@007ooOol0009oo`03001oogoo00=oo`03001oo`00071oo`03001oogoo00ao
o`03001oogoo07Ioo`001goo00@007ooOol000Qoo`04001oogoo0002Ool01000Oomoo`000goo00<0
07ooOol00Woo00<007oo00000P00KWoo00<007ooOol037oo00<007ooOol0MWoo00000goo00000002
0002Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0004Ool00`00Oomoo`03Ool00`00
Oomoo`0DOol01000Oomoo`00CWoo00<007ooOol0SGoo0007Ool01000Oomoo`0027oo00@007ooOol0
009oo`04001oogoo0002Ool01000Oomoo`0017oo00<007ooOol057oo00@007ooOol004Moo`03001o
ogoo00=oo`800003Ool007oo08aoo`0027oo0P002Woo0P0017oo0P0017oo0P001Goo00<007ooOol0
17oo00<007ooOol06Woo00<007ooOol00goo00<007ooOol0;Goo00<007ooOol01Goo00@007ooOol0
009oo`04001oogoo002=Ool002Moo`03001oogoo00Aoo`03001oogoo01Yoo`03001oogoo00=oo`03
001oogoo02aoo`8000Yoo`05001oogooOol0000BOol00`00Oomoo`1jOol002Moo`03001oogoo00Yo
o`03001oogoo00Moo`03001oogoo03moo`03001oogoo00eoo`03001oogoo011oo`03001oogoo07Yo
o`009goo0P002goo00<007ooOol01goo00<007ooOol05Woo0P0057oo00<007ooOol05goo00<007oo
Ool01Goo00<007ooOol0SWoo000TOol01000Oomoo`0067oo00<007ooOol057oo0P000Woo00<007oo
Ool02Woo00<007ooOol00Woo00<007ooOol01goo0P003Woo00<007ooOol00Woo00@007ooOol001=o
o`03001oogoo07Yoo`0097oo00@007ooOol001Moo`<00003Ool007oo01Ioo`8000]oo`03001oogoo
00Qoo`04001oogooOol20005Ool00`00Ool00004Ool01000Oomoogoo0P0000=oo`00Ool05Goo00<0
07ooOol0NWoo000WOol00`00Oomoo`06Ool00`00Oomoo`0<Ool01`00Ool007oo001oo`0001Ioo`03
001oogoo00Ioo`03001oogoo00]oo`03001oogoo00Qoo`03001oo`0000Aoo`04001oogooOol2002E
Ool002Moo`03001oogoo00Eoo`8000Ioo`03001oogoo00Ioo`8000=oo`04001oogooOol200000goo
001oo`0GOol00`00Oomoo`0COol00`00Oomoo`02Ool00`00Ool0000KOol00`00Oomoo`04Ool00`00
Oomoo`1hOol001Yoo`8000]oo`03001oogoo00Eoo`03001oogoo00Eoo`03001oogoo00Ioo`8000Mo
o`800003Ool007oo029oo`03001oogoo00Aoo`80009oo`03001oogoo00Aoo`03001oogoo00Yoo`03
001oogoo00aoo`03001oogoo00Aoo`03001oogoo07Qoo`006Woo0P002goo00<007ooOol05Goo0P00
27oo00<007ooOol06Woo00<007ooOol00Woo00H007ooOol007oo0006Ool2000>Ool01000Oomoo`00
17oo00<007ooOol0SWoo000UOol01000Ool000005Woo0P0027oo00<007ooOol05Goo00H007ooOol0
07oo0004Ool01P00Oomoo`00Ool000Aoo`03001oogoo00moo`06001oogoo001oo`00Tgoo000OOol0
0`00Oomoo`03Ool01000Ool000001goo00<007ooOol037oo00@007ooOol001Qoo`03001oogoo00=o
o`04001oogoo0005Ool01000Oomoogoo0P001Goo00<007ooOol057oo00<007ooOol01Woo00<007oo
Ool0R7oo000OOol00`00Oomoo`05Ool00`00Oomoo`06Ool00`00Oomoo`0<Ool200000goo001oo`02
0004Ool20004Ool200000goo001oo`040002Ool00`00Oomoo`06Ool00`00Oomoo`03Ool3000017oo
000007oo0P0017oo0P001Goo0`004Woo0`000goo0P0017oo0P000goo0`004goo0P0017oo0P0017oo
0P0017oo0P005Woo0P0017oo0P000goo1@005Goo0P0017oo0P000goo1@0000=oo`0000000P000Woo
000IOol00`00Oomoo`0;Ool00`00Oomoo`0@Ool00`00Oomoo`03Ool00`00Oomoo`0200000goo001o
o`07Ool00`00Oomoo`0200000goo001oo`0AOol00`00Ool00002Ool20007Ool01000Oomoo`001Goo
00<007ooOol047oo00@007ooOol000Ioo`03001oo`00009oo`04001oogoo0002Ool00`00Oomoo`0?
Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo000DOol01000Oomoo`002Woo00<007oo
Ool057oo00@007ooOol000Yoo`05001oogooOol00005Ool001Uoo`03001oogoo00]oo`03001oogoo
00Qoo`03001oogoo00Eoo`03001oogoo00Ioo`800003Ool0000000Moo`04001oogoo0003Ool01@00
Oomoogoo00003Goo00<007oo00000Woo00<007ooOol01Woo00@007ooOol0009oo`D0015oo`04001o
ogoo0006Ool01P00Ool00000Ool0009oo`04001oogoo000AOol01000Oomoo`0027oo00@007ooOol0
009oo`04001oogoo000DOol01000Oomoo`002Woo00<007ooOol057oo00@007ooOol000Yoo`03001o
ogoo009oo`03001oogoo009oo`009goo00<007ooOol027oo00<007ooOol00goo00@007ooOol000Mo
o`800003Ool0000000Moo`04001oogoo0004Ool01000Oomoo`0017oo00<007ooOol027oo00@007oo
Ool000Qoo`04001oogoo0002Ool01000Oomoo`0027oo00<007ooOol01goo00@007ooOol000Ioo`06
001oo`00001oo`000Woo0`004Woo00@007ooOol000Qoo`04001oogoo0003Ool2000EOol01000Oomo
o`002Woo00<007ooOol057oo00@007ooOol000Yoo`03001oogoo00=oo`03001oogoo005oo`009goo
00<007ooOol02Goo00<007ooOol00Woo00@007oo000000Aoo`04001oogoo0002Ool00`00Oomoo`06
Ool40002Ool01000Oomoo`001Woo00<007ooOol027oo00@007ooOol000Qoo`03001oogoo0080009o
o`03001oo`0000Moo`8000Uoo`04001oogoo0008Ool01000Oomoo`000goo00<007ooOol04Goo00@0
07ooOol000Qoo`04001oogoo0002Ool01000Oomoo`0057oo00@007ooOol000Yoo`03001oogoo01Ao
o`04001oogoo000:Ool01@00Oomoogoo00000Woo0@000Goo0Goo000IOol00`00Oomoo`0;Ool20005
Ool60006Ool01000Oomoo`000Woo00@007ooOomoo`8000=oo`06001oo`00Ool007oo0`0017oo0P00
00=oo`00Ool047oo0P002Woo0P0000=oo`00Ool00Woo0P000goo00@007ooOomoo`8000Yoo`8000Yo
o`8000Aoo`<0019oo`8000Yoo`8000Aoo`8001Ioo`8000Yoo`8001Moo`8000Yoo`8000Aoo`8000=o
o`006Goo00<007ooOol02goo00<007ooOol017oo1@002Woo00<007ooOol00goo1@0000Moo`00Ool0
07oo001oo`020008Ool00`00Oomoo`08Ool00`00Oomoo`0AOol00`00Oomoo`08Ool00`00Oomoo`02
Ool00`00Oomoo`09Ool00`00Oomoo`29Ool002Moo`03001oogoo00eoo`03001oogoo00Eoo`80009o
o`D00003Ool007oo008001Moo`03001oogoo015oo`03001oogoo021oo`03001oogoo089oo`009goo
00<007ooOol03Goo00@007ooOol000Aoo`8000Aoo`06001oogooOol007oo0P000goo00<007ooOol0
7Woo00<007ooOol09goo00<007ooOol0;7oo00<007ooOol0Dgoo000WOol00`00Oomoo`0@Ool00`00
Ool00008Ool20004Ool00`00Oomoo`02Ool00`00Oomoo`0>Ool01000Oomoo`0037oo00<007ooOol0
37oo00<007ooOol0Agoo00<007ooOol0Dgoo000WOol01000Oomoo`004Goo00<007ooOol00goo00D0
07ooOomoo`0000Uoo`03001oogoo00ioo`04001oogoo000JOol2000;Ool00`00Oomoo`2AOol000Eo
ool001<000Uoo`002Goo00<007ooOol01goo00<007ooOol01goo00<007oo00001Woo0P002Goo00D0
07ooOomoo`00009oo`04001oogoo0008Ool00`00Oomoo`04Ool01000Oomoo`002Goo00<007ooOol0
1goo00<007ooOol01goo00<007ooOol01Woo00<007ooOol01Goo00@007oo000000Moo`8000Uoo`03
001oogoo00Moo`03001oogoo00Moo`8000Moo`03001oogoo00Moo`03001oogoo00Moo`03001oogoo
00Moo`03001oogoo00Moo`03001oogoo00Ioo`03001oogoo00Moo`03001oogoo00Moo`03001oo`00
00Moo`03001oogoo00Moo`03001oogoo00Moo`03001oogoo00Yoo`007goo00<007ooOol01Goo0P00
2goo0P0000=oo`00Ool037oo00<007ooOol01Goo0P0027oo00<007ooOol02Goo00<007ooOol03goo
00<007ooOol09Goo00<007ooOol097oo00<007ooOol097oo00<007ooOol02Goo00<007ooOol06Goo
00<007ooOol02Woo000FOol01000Oomoo`002Woo00<007ooOol00P002goo00<007ooOol00P0000=o
o`00Ool02Goo00D007ooOomoo`0000=oo`03001oogoo00Aoo`800003Ool007oo00Qoo`03001oo`00
0;aoo`005Woo00@007ooOol000Yoo`04001oogoo0002Ool00`00Oomoo`0;Ool3000=Ool2000:Ool2
000;Ool00`00Oomoo`2lOol002Moo`04001oogoo0005Ool00`00Oomoo`06Ool30005Ool00`00Oomo
o`03Ool20006Ool00`00Oomoo`3>Ool002Moo`03001oogoo00Ioo`03001oogoo00Qoo`04001oogoo
0002Ool200001Goo001oogoo00001goo00<007ooOol047oo00<007ooOol0:Goo00<007ooOol0Sgoo
000WOol20004Ool00`00Oomoo`0>Ool00`00Oomoo`0200000goo001oo`0LOol00`00Oomoo`0YOol0
0`00Oomoo`0LOol00`00Oomoo`1`Ool001]oo`03001oogoo00Uoo`03001oogoo00=oo`03001oogoo
07eoo`03001oogoo071oo`006goo00<007ooOol00goo00<007ooOol00goo00<007ooOol04goo00<0
07ooOol00Woo00<007ooOol04Woo00<007ooOol0aWoo000JOol00`00Oomoo`04Ool00`00Oomoo`03
Ool00`00Oomoo`02Ool2000;Ool01@00Oomoogoo000017oo00@007ooOol000=oo`03001oogoo00Eo
o`03001oogoo00=oo`03001oogoo0<Ioo`006Woo00<007ooOol00P0027oo00<007ooOol00Woo0P00
27oo00@007oo000000Eoo`03001oogoo00=oo`05001oogooOol00007Ool00`00Oomoo`0IOol00`00
Oomoo`2`Ool001eoo`8000Qoo`05001oogooOol0000:Ool00`00Ool00006Ool00`00Oomoo`0AOol0
0`00Oomoo`0GOol00`00Oomoo`08Ool00`00Oomoo`2UOol002Moo`80009oo`80011oo`03001oogoo
00moo`03001oogoo0080019oo`03001oogoo00moo`03001oogoo05Yoo`03001oogoo04Qoo`008Goo
00<007ooOol00goo00<007ooOol00Woo00@007ooOol000Aoo`04001oogoo0005Ool01000Ool00000
0goo00<007ooOol027oo00@007oo0000009oo`03001oogoo00ioo`03001oogoo02Eoo`03001oogoo
04Aoo`03001oogoo04Qoo`008Goo00<007ooOol00goo00<007ooOol01Goo0P000goo00@007ooOol0
00Moo`8000=oo`03001oogoo00Yoo`05001oogooOol00003Ool00`00Oomoo`0bOol00`00Oomoo`0P
Ool00`00Oomoo`1/Ool002Moo`03001oogoo00Ioo`03001oogoo00moo`03001oogoo009oo`03001o
o`0000Moo`03001oogoo00Eoo`03001oogoo05Eoo`03001oogoo06aoo`009goo00<007ooOol067oo
00<007ooOol00Woo00<007oo00009Goo00<007ooOol027oo00<007ooOol0Xgoo000WOol00`00Oomo
o`0VOol00`00Oomoo`0;Ool00`00Oomoo`0>Ool00`00Oomoo`02Ool00`00Oomoo`03Ool00`00Oomo
o`0POol00`00Oomoo`20Ool002Moo`03001oogoo025oo`03001oogoo009oo`03001oogoo00]oo`03
001oogoo01=oo`03001oogoo00ioo`03001oogoo01Eoo`03001oogoo081oo`009goo0P008Woo00<0
07ooOol00goo00<007ooOol0<Goo00<007ooOol0V7oo000;Ool00`00Oomoo`0IOol00`00Oomoo`0S
Ool01@00Oomoogoo000017oo00<007ooOol0agoo000;Ool00`00Oomoo`0IOol00`00Oomoo`0SOol0
0`00Oomoo`06Ool01000Ool000001goo00<007ooOol0=goo00<007ooOol0PWoo000WOol00`00Oomo
o`0^Ool20007Ool00`00Oomoo`0gOol00`00Oomoo`0ZOol00`00Oomoo`1EOol000Qoo`8000Aoo`80
00Aoo`8000Aoo`8000=oo`@000Aoo`03001oogoo085oo`03001oogoo01Yoo`03001oogoo05Eoo`00
1goo00@007ooOol000Qoo`04001oogoo0002Ool01000Oomoo`000Woo00<007ooOol01Goo00<007oo
Ool06Goo00<007ooOol0:Woo00<007ooOol08Goo00<007ooOol057oo00<007ooOol0LWoo0007Ool0
1000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0003Ool00`00Oomoo`04Ool3000IOol00`00
Oomoo`05Ool00`00Oomoo`0?Ool00`00Oomoo`0@Ool00`00Oomoo`0QOol00`00Oomoo`29Ool000Mo
o`04001oogoo0008Ool01000Oomoo`000Woo00@007ooOol000Aoo`03001oogoo00=oo`03001oogoo
025oo`03001oogoo00moo`8003=oo`03001oogoo08]oo`001goo00@007ooOol000Qoo`04001oogoo
0002Ool01000Oomoo`000Woo00@007ooOol000Aoo`03001oogoo03Aoo`03001oogoo02Qoo`03001o
ogoo00Ioo`03001oogoo00moo`03001oogoo07Uoo`0027oo0P002Woo0P0017oo0P0017oo0P001Goo
00<007ooOol04Woo00<007ooOol07Goo00<007ooOol027oo00<007ooOol07goo00<007ooOol067oo
00<007ooOol0NGoo000WOol00`00Oomoo`0BOol00`00Oomoo`0MOol01@00Oomoogoo00001Woo00<0
07ooOol01goo00<007ooOol0[7oo000WOol00`00Oomoo`0ROol00`00Oomoo`0AOol00`00Oomoo`0>
Ool00`00Oomoo`02Ool00`00Ool0000AOol00`00Oomoo`0DOol00`00Oomoo`0=Ool00`00Oomoo`1/
Ool002Moo`03001oogoo029oo`03001oogoo02Moo`03001oo`0000]oo`03001oogoo00=oo`03001o
ogoo01Aoo`03001oogoo00eoo`03001oogoo06aoo`009goo0P00D7oo00<007ooOol027oo00<007oo
Ool0VGoo000KOol00`00Oomoo`09Ool00`00Oomoo`1?Ool00`00Oomoo`0TOol00`00Oomoo`1mOol0
01]oo`03001oogoo00Uoo`03001oogoo045oo`04001oogoo000@Ool00`00Oomoo`0NOol00`00Oomo
o`0<Ool00`00Oomoo`1^Ool002Moo`03001oogoo045oo`04001oogoo000@Ool00`00Oomoo`0HOol0
0`00Oomoo`0BOol00`00Oomoo`1^Ool002Moo`03001oogoo05Eoo`03001oogoo01Qoo`03001oogoo
08=oo`009goo00<007ooOol0AGoo00<007ooOol0:7oo00<007ooOol087oo00<007ooOol0H7oo000W
Ool20016Ool00`00Oomoo`0AOol00`00Oomoo`0@Ool01@00Oomoogoo00003goo00<007ooOol047oo
00<007ooOol0H7oo000WOol00`00Oomoo`08Ool00`00Oomoo`0[Ool00`00Oomoo`0POol00`00Oomo
o`0@Ool00`00Oomoo`0AOol2001dOol002Moo`03001oogoo00Qoo`03001oogoo02]oo`05001oogoo
Ool0000OOol00`00Oomoo`0TOol00`00Oomoo`0XOol00`00Oomoo`17Ool002Moo`03001oogoo03Yo
o`03001oogoo01eoo`03001oo`0004moo`03001oogoo04Moo`009goo00<007ooOol0Bgoo00<007oo
Ool03Woo00<007ooOol0Ugoo000WOol00`00Oomoo`1;Ool00`00Oomoo`2XOol002Moo`03001oogoo
0?Ioo`009goo0P00mgoo000WOol00`00Oomoo`1>Ool00`00Oomoo`2UOol002Moo`03001oogoo04io
o`03001oogoo0:Eoo`009goo00<007ooOol0GWoo00<007ooOol0UGoo000WOol00`00Oomoo`1NOol0
0`00Oomoo`2EOol000Qoo`8000Aoo`8000Aoo`8000Aoo`8000Eoo`<000=oo`03001oogoo0?Ioo`00
1goo00@007ooOol000Qoo`04001oogoo0002Ool01000Oomoo`001Goo00<007ooOol00Woo00<007oo
Ool0mWoo0007Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002Ool50003Ool3003f
Ool000Moo`04001oogoo0008Ool01000Oomoo`000Woo00@007ooOol0009oo`04001oogoo0004Ool0
0`00Oomoo`1dOol00`00Oomoo`1oOol000Moo`04001oogoo0008Ool01000Oomoo`000Woo00@007oo
Ool000=oo`03001oo`0000Aoo`03001oogoo06]oo`03001oogoo00Ioo`03001oogoo07moo`0027oo
0P002Woo0P0017oo0P001Goo0P0017oo00<007ooOol0Jgoo00<007ooOol0R7oo000WOol00`00Oomo
o`3fOol002Moo`03001oogoo0?Ioo`009goo0P00mgoo000WOol00`00Oomoo`3fOol002Moo`03001o
ogoo0?Ioo`009goo00<007ooOol087oo00<007ooOol0dgoo000WOol00`00Oomoo`0POol00`00Oomo
o`3COol002Moo`03001oogoo0?Ioo`009goo00<007ooOol0mWoo000WOol2003gOol002Moo`03001o
ogoo0?Ioo`009goo00<007ooOol0mWoo000WOol00`00Oomoo`3fOol002Moo`03001oogoo0?Ioo`00
9goo00<007ooOol0mWoo000WOol2003gOol002Moo`03001oogoo0?Ioo`009goo00<007ooOol0mWoo
000WOol00`00Oomoo`2KOol00`00Oomoo`1HOol002Moo`03001oogoo09]oo`03001oogoo05Qoo`00
27oo0P0017oo0P0017oo0P0017oo0P000goo0`001Goo00<007ooOol0mWoo0007Ool01000Oomoo`00
27oo00@007ooOol0009oo`04001oogoo0002Ool01000Oomoo`0017oo00<007ooOol0mWoo0007Ool0
1000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002Ool01000Oomoo`0017oo0`00mWoo0007
Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002Ool30005Ool00`00Oomoo`3fOol0
00Moo`04001oogoo0008Ool01000Oomoo`000Woo00@007ooOol000=oo`03001oogoo00Aoo`03001o
ogoo051oo`03001oogoo0:=oo`0027oo0P002Woo0P0017oo0P0017oo0`0017oo00<007ooOol0?7oo
00<007ooOol04Goo00<007ooOol0Xgoo000WOol00`00Oomoo`0lOol00`00Oomoo`2gOol002Moo`03
001oogoo02ioo`03001oogoo0<Eoo`009goo0P00;goo00<007ooOol0aGoo000WOol00`00Oomoo`1X
Ool00`00Oomoo`0gOol00`00Oomoo`1AOol002Moo`03001oogoo01Qoo`03001oogoo04eoo`03001o
ogoo03Moo`03001oogoo055oo`009goo00<007ooOol067oo00<007ooOol0fgoo000WOol00`00Oomo
o`3fOol002Moo`03001oogoo0?Ioo`009goo00<007ooOol08Goo00<007ooOol0dWoo000WOol2000R
Ool00`00Oomoo`3BOol002Moo`03001oogoo0?Ioo`009goo00<007ooOol0mWoo000WOol00`00Oomo
o`3fOol00?moob5oo`00ogoo8Goo003oOolQOol00?moob5oo`00\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-0.0200751, -0.00590936, \
0.000509369, 7.62124*^-05}}],

Cell[BoxData[
    TagBox[
      RowBox[{"\[SkeletonIndicator]", "Graphics", "\[SkeletonIndicator]"}],
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell["Or we might take the scalar product of the X and PX columns", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"X", ".", "PX"}]], "Input"],

Cell[BoxData[
    RowBox[{"-", "0.0002666888216002709`"}]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Rather than continue with furthere illustrative examples, it is better to \
recommend that the user becomes familiar with standard ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " operations so that he can easily do what he wants himself."
}], "Text"],

Cell["\<\
The example contains tracking data for 16 particles so there are 16 \
X values for turn 0, for turn 1, etc. (until some particles are lost):\
\>", \
"Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Take", "[", 
      RowBox[{"TURNS", ",", "18"}], "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "1", ",", "1"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Take", "[", 
      RowBox[{"X", ",", "18"}], "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
      "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
        ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.00504514`", 
        ",", "0.0050658199999999995`"}], "}"}]], "Output"]
}, Open  ]],

Cell["We can plot them against turn number with", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"ListPlot", "[", 
      RowBox[{"Transpose", "[", 
        RowBox[{"{", 
          RowBox[{"TURNS", ",", "X"}], "}"}], "]"}], "]"}]], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.00881834 0.327226 15.8582 [
[.20018 .31473 -6 -9 ]
[.20018 .31473 6 0 ]
[.37654 .31473 -6 -9 ]
[.37654 .31473 6 0 ]
[.55291 .31473 -6 -9 ]
[.55291 .31473 6 0 ]
[.72928 .31473 -6 -9 ]
[.72928 .31473 6 0 ]
[.90564 .31473 -9 -9 ]
[.90564 .31473 9 0 ]
[.01131 .01006 -30 -4.5 ]
[.01131 .01006 0 4.5 ]
[.01131 .08935 -36 -4.5 ]
[.01131 .08935 0 4.5 ]
[.01131 .16864 -30 -4.5 ]
[.01131 .16864 0 4.5 ]
[.01131 .24794 -36 -4.5 ]
[.01131 .24794 0 4.5 ]
[.01131 .40652 -30 -4.5 ]
[.01131 .40652 0 4.5 ]
[.01131 .48581 -24 -4.5 ]
[.01131 .48581 0 4.5 ]
[.01131 .5651 -30 -4.5 ]
[.01131 .5651 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.20018 .32723 m
.20018 .33348 L
s
[(20)] .20018 .31473 0 1 Mshowa
.37654 .32723 m
.37654 .33348 L
s
[(40)] .37654 .31473 0 1 Mshowa
.55291 .32723 m
.55291 .33348 L
s
[(60)] .55291 .31473 0 1 Mshowa
.72928 .32723 m
.72928 .33348 L
s
[(80)] .72928 .31473 0 1 Mshowa
.90564 .32723 m
.90564 .33348 L
s
[(100)] .90564 .31473 0 1 Mshowa
.125 Mabswid
.0679 .32723 m
.0679 .33098 L
s
.11199 .32723 m
.11199 .33098 L
s
.15608 .32723 m
.15608 .33098 L
s
.24427 .32723 m
.24427 .33098 L
s
.28836 .32723 m
.28836 .33098 L
s
.33245 .32723 m
.33245 .33098 L
s
.42063 .32723 m
.42063 .33098 L
s
.46473 .32723 m
.46473 .33098 L
s
.50882 .32723 m
.50882 .33098 L
s
.597 .32723 m
.597 .33098 L
s
.64109 .32723 m
.64109 .33098 L
s
.68519 .32723 m
.68519 .33098 L
s
.77337 .32723 m
.77337 .33098 L
s
.81746 .32723 m
.81746 .33098 L
s
.86155 .32723 m
.86155 .33098 L
s
.94974 .32723 m
.94974 .33098 L
s
.99383 .32723 m
.99383 .33098 L
s
.25 Mabswid
0 .32723 m
1 .32723 L
s
.02381 .01006 m
.03006 .01006 L
s
[(-0.02)] .01131 .01006 1 0 Mshowa
.02381 .08935 m
.03006 .08935 L
s
[(-0.015)] .01131 .08935 1 0 Mshowa
.02381 .16864 m
.03006 .16864 L
s
[(-0.01)] .01131 .16864 1 0 Mshowa
.02381 .24794 m
.03006 .24794 L
s
[(-0.005)] .01131 .24794 1 0 Mshowa
.02381 .40652 m
.03006 .40652 L
s
[(0.005)] .01131 .40652 1 0 Mshowa
.02381 .48581 m
.03006 .48581 L
s
[(0.01)] .01131 .48581 1 0 Mshowa
.02381 .5651 m
.03006 .5651 L
s
[(0.015)] .01131 .5651 1 0 Mshowa
.125 Mabswid
.02381 .02592 m
.02756 .02592 L
s
.02381 .04178 m
.02756 .04178 L
s
.02381 .05764 m
.02756 .05764 L
s
.02381 .0735 m
.02756 .0735 L
s
.02381 .10521 m
.02756 .10521 L
s
.02381 .12107 m
.02756 .12107 L
s
.02381 .13693 m
.02756 .13693 L
s
.02381 .15279 m
.02756 .15279 L
s
.02381 .1845 m
.02756 .1845 L
s
.02381 .20036 m
.02756 .20036 L
s
.02381 .21622 m
.02756 .21622 L
s
.02381 .23208 m
.02756 .23208 L
s
.02381 .26379 m
.02756 .26379 L
s
.02381 .27965 m
.02756 .27965 L
s
.02381 .29551 m
.02756 .29551 L
s
.02381 .31137 m
.02756 .31137 L
s
.02381 .34308 m
.02756 .34308 L
s
.02381 .35894 m
.02756 .35894 L
s
.02381 .3748 m
.02756 .3748 L
s
.02381 .39066 m
.02756 .39066 L
s
.02381 .42238 m
.02756 .42238 L
s
.02381 .43823 m
.02756 .43823 L
s
.02381 .45409 m
.02756 .45409 L
s
.02381 .46995 m
.02756 .46995 L
s
.02381 .50167 m
.02756 .50167 L
s
.02381 .51752 m
.02756 .51752 L
s
.02381 .53338 m
.02756 .53338 L
s
.02381 .54924 m
.02756 .54924 L
s
.02381 .58096 m
.02756 .58096 L
s
.02381 .59682 m
.02756 .59682 L
s
.02381 .61267 m
.02756 .61267 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.008 w
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.02381 .32723 Mdot
.03263 .40723 Mdot
.03263 .40756 Mdot
.03263 .40198 Mdot
.03263 .41316 Mdot
.03263 .4024 Mdot
.03263 .41113 Mdot
.03263 .40804 Mdot
.03263 .40357 Mdot
.03263 .40822 Mdot
.03263 .40615 Mdot
.03263 .40088 Mdot
.03263 .39983 Mdot
.03263 .41139 Mdot
.03263 .40865 Mdot
.03263 .40138 Mdot
.03263 .39811 Mdot
.04145 .20908 Mdot
.04145 .20379 Mdot
.04145 .20604 Mdot
.04145 .20942 Mdot
.04145 .20753 Mdot
.04145 .20742 Mdot
.04145 .20942 Mdot
.04145 .20642 Mdot
.04145 .19807 Mdot
.04145 .20543 Mdot
.04145 .20733 Mdot
.04145 .21195 Mdot
.04145 .2051 Mdot
.04145 .19965 Mdot
.04145 .21083 Mdot
.04145 .2155 Mdot
.05026 .51755 Mdot
.05026 .53407 Mdot
.05026 .52336 Mdot
.05026 .52648 Mdot
.05026 .51935 Mdot
.05026 .51812 Mdot
.05026 .51475 Mdot
.05026 .52688 Mdot
.05026 .53436 Mdot
.05026 .52368 Mdot
.05026 .5238 Mdot
.05026 .51697 Mdot
.05026 .5198 Mdot
.05026 .53568 Mdot
.05026 .51403 Mdot
.05026 .49964 Mdot
.05908 .15098 Mdot
.05908 .1523 Mdot
.05908 .14874 Mdot
.05908 .15286 Mdot
.05908 .15454 Mdot
.05908 .16174 Mdot
.05908 .15728 Mdot
.05908 .15617 Mdot
.05908 .15433 Mdot
.05908 .15382 Mdot
.05908 .1576 Mdot
.05908 .15569 Mdot
.05908 .15133 Mdot
.05908 .15222 Mdot
.05908 .15806 Mdot
.05908 .16125 Mdot
.0679 .53684 Mdot
.0679 .48922 Mdot
.0679 .52418 Mdot
.0679 .50625 Mdot
.0679 .51041 Mdot
.0679 .53491 Mdot
.0679 .52128 Mdot
.0679 .51783 Mdot
.0679 .48231 Mdot
.0679 .54941 Mdot
.0679 .53755 Mdot
.0679 .5078 Mdot
.0679 .54426 Mdot
.0679 .48514 Mdot
.0679 .53904 Mdot
.0679 .55701 Mdot
.07672 .18773 Mdot
.07672 .28322 Mdot
.07672 .20851 Mdot
.07672 .25163 Mdot
.07672 .24951 Mdot
.07672 .21568 Mdot
.07672 .21561 Mdot
.07672 .23437 Mdot
.07672 .27843 Mdot
.07672 .18197 Mdot
.07672 .20844 Mdot
.07672 .24252 Mdot
.07672 .18241 Mdot
.07672 .27334 Mdot
.07672 .1867 Mdot
.07672 .14417 Mdot
.08554 .35928 Mdot
.08554 .26057 Mdot
.08554 .33877 Mdot
.08554 .29404 Mdot
.08554 .27631 Mdot
.08554 .29844 Mdot
.08554 .32228 Mdot
.08554 .30937 Mdot
.08554 .28352 Mdot
.08554 .35999 Mdot
.08554 .3159 Mdot
.08554 .30758 Mdot
.08554 .34915 Mdot
.08554 .30338 Mdot
.08554 .36692 Mdot
.08554 .44572 Mdot
.09436 .41353 Mdot
.09436 .47468 Mdot
.09436 .43276 Mdot
.09436 .45179 Mdot
.09436 .48229 Mdot
.09436 .48297 Mdot
.09436 .44599 Mdot
.09436 .44557 Mdot
.09436 .46296 Mdot
.09436 .41007 Mdot
.09436 .45308 Mdot
.09436 .45092 Mdot
.09436 .42815 Mdot
.09436 .4441 Mdot
.09436 .41351 Mdot
.09436 .33623 Mdot
.10317 .1756 Mdot
.10317 .10921 Mdot
.10317 .17017 Mdot
.10317 .21788 Mdot
.10317 .11613 Mdot
.10317 .13675 Mdot
.10317 .14904 Mdot
.10317 .20883 Mdot
.10317 .16221 Mdot
.10317 .17752 Mdot
.10317 .13714 Mdot
.10317 .17612 Mdot
.10317 .1714 Mdot
.10317 .23763 Mdot
.10317 .18585 Mdot
.10317 .2385 Mdot
.11199 .51088 Mdot
.11199 .35376 Mdot
.11199 .52838 Mdot
.11199 .49352 Mdot
.11199 .32578 Mdot
.11199 .53319 Mdot
.11199 .52613 Mdot
.11199 .47327 Mdot
.11199 .53818 Mdot
.11199 .50588 Mdot
.11199 .45189 Mdot
.11199 .51943 Mdot
.11199 .52773 Mdot
.11199 .49916 Mdot
.11199 .51833 Mdot
.11199 .4865 Mdot
.12081 .11391 Mdot
.12081 .1378 Mdot
.12081 .16282 Mdot
.12081 .01472 Mdot
.12081 .13237 Mdot
.12081 .27567 Mdot
.12081 .15692 Mdot
.12081 .09792 Mdot
.12081 .15442 Mdot
.12081 .08884 Mdot
.12081 .15777 Mdot
.12081 .14922 Mdot
.12081 .13756 Mdot
.12963 .54774 Mdot
.12963 .48325 Mdot
.12963 .56016 Mdot
.12963 .52918 Mdot
.12963 .42331 Mdot
.12963 .45372 Mdot
.12963 .50787 Mdot
.12963 .32177 Mdot
.12963 .54319 Mdot
.12963 .46423 Mdot
.12963 .56042 Mdot
.13845 .13463 Mdot
.13845 .26797 Mdot
.13845 .16627 Mdot
.13845 .19285 Mdot
.13845 .35942 Mdot
.13845 .25056 Mdot
.13845 .19117 Mdot
.13845 .29464 Mdot
.13845 .14817 Mdot
.14727 .5611 Mdot
.14727 .25952 Mdot
.14727 .40268 Mdot
.14727 .3464 Mdot
.14727 .1914 Mdot
.14727 .26336 Mdot
.14727 .32246 Mdot
.14727 .23585 Mdot
.14727 .44268 Mdot
.15608 .17336 Mdot
.15608 .48826 Mdot
.15608 .36981 Mdot
.15608 .40252 Mdot
.15608 .49507 Mdot
.15608 .46379 Mdot
.15608 .51095 Mdot
.15608 .32157 Mdot
.1649 .33297 Mdot
.1649 .15237 Mdot
.1649 .19768 Mdot
.1649 .18968 Mdot
.1649 .15239 Mdot
.1649 .1817 Mdot
.1649 .22956 Mdot
.17372 .47553 Mdot
.17372 .50697 Mdot
.17372 .51684 Mdot
.17372 .46699 Mdot
.17372 .37988 Mdot
.17372 .49454 Mdot
.18254 .28182 Mdot
.18254 .08737 Mdot
.18254 .13154 Mdot
.18254 .27866 Mdot
.18254 .40782 Mdot
.18254 .1188 Mdot
.19136 .25373 Mdot
.19136 .55118 Mdot
.19136 .3131 Mdot
.19136 .16362 Mdot
.19136 .52893 Mdot
.20018 .49254 Mdot
.20018 .14246 Mdot
.20018 .45488 Mdot
.20018 .52003 Mdot
.20018 .11967 Mdot
.20899 .15039 Mdot
.20899 .45493 Mdot
.20899 .16709 Mdot
.20899 .15486 Mdot
.20899 .54602 Mdot
.21781 .4719 Mdot
.21781 .29879 Mdot
.21781 .52851 Mdot
.21781 .42598 Mdot
.21781 .18565 Mdot
.22663 .28056 Mdot
.22663 .2548 Mdot
.22663 .21691 Mdot
.22663 .34391 Mdot
.22663 .60332 Mdot
.23545 .26021 Mdot
.23545 .49105 Mdot
.23545 .23933 Mdot
.23545 .21044 Mdot
.24427 .492 Mdot
.24427 .14403 Mdot
.24427 .51278 Mdot
.25309 .15336 Mdot
.25309 .51669 Mdot
.25309 .26216 Mdot
.2619 .47623 Mdot
.2619 .2016 Mdot
.2619 .24035 Mdot
.27072 .28584 Mdot
.27072 .34094 Mdot
.27072 .4909 Mdot
.27954 .24991 Mdot
.27954 .43035 Mdot
.27954 .33984 Mdot
.28836 .49204 Mdot
.28836 .17558 Mdot
.28836 .21861 Mdot
.29718 .1518 Mdot
.29718 .53629 Mdot
.29718 .30994 Mdot
.306 .4642 Mdot
.306 .18445 Mdot
.31481 .2871 Mdot
.31481 .35903 Mdot
.32363 .24909 Mdot
.32363 .40964 Mdot
.33245 .49737 Mdot
.33245 .17486 Mdot
.34127 .18037 Mdot
.34127 .50542 Mdot
.35009 .38783 Mdot
.35009 .10332 Mdot
.35891 .39861 Mdot
.35891 .453 Mdot
.36772 .17836 Mdot
.36772 .46676 Mdot
.37654 .49329 Mdot
.38536 .23873 Mdot
.39418 .29166 Mdot
.403 .47083 Mdot
.41182 .18644 Mdot
.42063 .39311 Mdot
.42945 .39105 Mdot
.43827 .18661 Mdot
.44709 .47112 Mdot
.45591 .28434 Mdot
.46473 .24706 Mdot
.47354 .48392 Mdot
.48236 .21567 Mdot
.49118 .31747 Mdot
.5 .44719 Mdot
.50882 .19991 Mdot
.51764 .3735 Mdot
.52646 .40985 Mdot
.53527 .19515 Mdot
.54409 .41429 Mdot
.55291 .36604 Mdot
.56173 .20841 Mdot
.57055 .42909 Mdot
.57937 .34968 Mdot
.58818 .20765 Mdot
.597 .44283 Mdot
.60582 .32571 Mdot
.61464 .22537 Mdot
.62346 .4404 Mdot
.63228 .31306 Mdot
.64109 .23619 Mdot
.64991 .42619 Mdot
.65873 .33984 Mdot
.66755 .22389 Mdot
.67637 .41167 Mdot
.68519 .36235 Mdot
.694 .21329 Mdot
.70282 .40664 Mdot
.71164 .36355 Mdot
.72046 .22349 Mdot
.72928 .38652 Mdot
.7381 .38259 Mdot
.74691 .23367 Mdot
.75573 .3519 Mdot
.76455 .40795 Mdot
.77337 .23562 Mdot
.78219 .32503 Mdot
.79101 .42264 Mdot
.79982 .24943 Mdot
.80864 .30248 Mdot
.81746 .42106 Mdot
.82628 .28852 Mdot
.8351 .27066 Mdot
.84392 .39655 Mdot
.85273 .34052 Mdot
.86155 .25249 Mdot
.87037 .36074 Mdot
.87919 .38631 Mdot
.88801 .26 Mdot
.89683 .31546 Mdot
.90564 .39718 Mdot
.91446 .29946 Mdot
.92328 .27656 Mdot
.9321 .39046 Mdot
.94092 .33789 Mdot
.94974 .25935 Mdot
.95855 .35966 Mdot
.96737 .38146 Mdot
.97619 .26527 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{398.125, 246.063},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006>0000mQ000`40O003h00OogooSgoo003oOon?
Ool00?moohmoo`00ogooSgoo003oOon?Ool00?moohmoo`00ogooSgoo003oOon?Ool00?moohmoo`00
ogooSgoo003oOon?Ool002Qoo`03001oogoo0?moofAoo`003Woo0P0017oo0P0017oo0P000goo1000
1Goo00<007ooOol0ogooI7oo000=Ool01000Oomoo`0027oo00@007ooOol0009oo`03001oogoo00Io
o`03001oogoo0?moofAoo`003Goo00@007ooOol000Qoo`04001oogoo0003Ool00`00Oomoo`05Ool3
003oOomTOol000Moo`@0009oo`04001oogoo0008Ool01000Oomoo`0017oo00<007ooOol017oo00<0
07ooOol0ogooI7oo000=Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0005Ool00`00
Oomoo`0POol00`00Oomoo`3oOom1Ool000ioo`8000Yoo`8000Aoo`8000Ioo`03001oogoo021oo`03
001oogoo0?mood5oo`00:7oo00<007ooOol0ogooI7oo000XOol00`00Oomoo`3oOomTOol002Qoo`80
0?moofEoo`00:7oo00<007ooOol0ogooI7oo000XOol00`00Oomoo`3oOomTOol002Qoo`03001oogoo
0?moofAoo`00:7oo00<007ooOol0ogooI7oo000XOol00`00Oomoo`3oOomTOol002Qoo`800?moofEo
o`00:7oo00<007ooOol0ogooI7oo000XOol00`00Oomoo`3oOomTOol002Qoo`03001oogoo0?moofAo
o`00:7oo00<007ooOol0ogooI7oo000XOol00`00Oomoo`3oOomTOol002Qoo`800?moofEoo`00:7oo
00<007ooOol0ogooI7oo000XOol00`00Oomoo`3oOomTOol002Qoo`03001oogoo0?moofAoo`00:7oo
00<007ooOol0ogooI7oo000XOol2003oOomUOol002Qoo`03001oogoo0?moofAoo`00:7oo00<007oo
Ool0ogooI7oo000XOol00`00Oomoo`3oOomTOol000Qoo`8000Aoo`8000Aoo`8000=oo`D0009oo`80
00Ioo`03001oogoo0?moofAoo`001goo00@007ooOol000Qoo`04001oogoo0004Ool01@00Oomoogoo
00000Woo00<007ooOol00goo00<007ooOol0=Woo00<007ooOol0ogoo:goo0007Ool01000Oomoo`00
27oo00@007ooOol000Aoo`03001oogoo00Aoo`03001oogoo00=oo`<0021oo`03001oogoo01=oo`03
001oogoo0?moob]oo`0000=oo`0000000P000Woo00@007ooOol000Qoo`04001oogoo0004Ool00`00
Oomoo`02Ool20006Ool00`00Oomoo`0POol00`00Oomoo`3oOom1Ool000Moo`04001oogoo0008Ool0
1000Oomoo`0017oo00<007ooOol00Woo00<007ooOol01Goo00<007ooOol0ogooI7oo0008Ool2000:
Ool20004Ool20004Ool30005Ool00`00Oomoo`0POol00`00Oomoo`3oOom1Ool002Qoo`03001oogoo
021oo`03001oogoo0?mood5oo`00:7oo00<007ooOol0Lgoo00<007ooOol0kGoo000XOol2001dOol0
0`00Oomoo`3]Ool002Qoo`03001oogoo01Uoo`03001oogoo0?moodQoo`00:7oo00<007ooOol06Goo
00<007ooOol0ogooB7oo000XOol00`00Oomoo`0POol00`00Oomoo`3oOom1Ool002Qoo`03001oogoo
01Uoo`03001oogoo00Aoo`03001oogoo0?mood5oo`00:7oo00<007ooOol06Goo00<007ooOol06Woo
00<007ooOol017oo00<007ooOol0ogoo97oo000XOol2000gOol00`00Oomoo`04Ool00`00Oomoo`3o
OolTOol002Qoo`03001oogoo0?moofAoo`00:7oo00<007ooOol0ogooI7oo000XOol00`00Oomoo`0f
Ool00`00Oomoo`3oOol[Ool002Qoo`03001oogoo021oo`03001oogoo01=oo`03001oogoo0?moob]o
o`00:7oo00<007ooOol06Goo00<007ooOol017oo00<007ooOol00goo00<007ooOol0ogoo>goo000X
Ool2000JOol00`00Oomoo`04Ool00`00Oomoo`03Ool00`00Oomoo`3oOolkOol002Qoo`03001oogoo
01Uoo`03001oogoo00Aoo`03001oogoo01Yoo`03001oogoo0?moobAoo`00:7oo00<007ooOol03goo
00<007ooOol0:goo00<007ooOol03Goo00<007ooOol0ogoo57oo000XOol00`00Oomoo`0?Ool00`00
Oomoo`0kOol00`00Oomoo`3oOolDOol002Qoo`03001oogoo00Uoo`03001oogoo00eoo`03001oogoo
00Aoo`03001oogoo00=oo`03001oogoo01Moo`03001oogoo0?moob5oo`00:7oo0P002Woo00<007oo
Ool03Goo00<007ooOol017oo00<007ooOol00goo00<007ooOol01goo00<007ooOol03Goo00<007oo
Ool03Goo00<007ooOol03Goo00<007ooOol0ogoo0Goo000XOol00`00Oomoo`09Ool00`00Oomoo`0D
Ool00`00Oomoo`0=Ool00`00Oomoo`0=Ool00`00Oomoo`0=Ool00`00Oomoo`0=Ool00`00Oomoo`3o
Ool1Ool002Qoo`03001oogoo00Uoo`03001oogoo01Aoo`03001oogoo01eoo`03001oogoo0?moob5o
o`00:7oo00<007ooOol02Goo00<007ooOol057oo00<007ooOol0ogoo@Goo000>Ool20004Ool20004
Ool20003Ool50004Ool00`00Oomoo`09Ool00`00Oomoo`0=Ool00`00Oomoo`04Ool00`00Oomoo`0F
Ool00`00Oomoo`3oOolXOol000eoo`04001oogoo0008Ool01000Oomoo`0017oo00<007ooOol017oo
00<007ooOol02Goo00<007ooOol03Goo00<007ooOol017oo00<007ooOol00goo00<007ooOol047oo
00<007ooOol017oo00<007ooOol0ogoo8Goo000=Ool01000Oomoo`0027oo00@007ooOol000Aoo`03
001oogoo00Aoo`<002Ioo`03001oogoo01Moo`03001oogoo0?moob5oo`001goo10000Woo00@007oo
Ool000Qoo`04001oogoo0004Ool00`00Oomoo`04Ool00`00Oomoo`0IOol00`00Oomoo`3oOom8Ool0
00eoo`04001oogoo0008Ool01000Oomoo`0017oo00<007ooOol017oo00<007ooOol06Goo00<007oo
Ool047oo00<007ooOol0?Woo00<007ooOol0lgoo000>Ool2000:Ool20004Ool20006Ool00`00Oomo
o`0IOol00`00Oomoo`0@Ool00`00Oomoo`0^Ool00`00Oomoo`0=Ool00`00Oomoo`3cOol002Qoo`03
001oogoo01Uoo`03001oogoo045oo`03001oogoo011oo`03001oogoo00Moo`03001oogoo0>Ioo`00
:7oo00<007ooOol03goo00<007ooOol07Woo00<007ooOol0?Goo00<007ooOol01goo00<007ooOol0
iWoo000XOol2000@Ool00`00Oomoo`07Ool00`00Oomoo`0DOol00`00Oomoo`0@Ool00`00Oomoo`0M
Ool00`00Oomoo`3mOol002Qoo`03001oogoo00moo`03001oogoo00Moo`03001oogoo02Moo`03001o
ogoo01eoo`03001oogoo02Aoo`03001oogoo00Moo`03001oogoo0<aoo`00:7oo00<007ooOol03goo
00<007ooOol057oo00@007ooOol000Ioo`03001oogoo05Moo`03001oogoo00Moo`03001oogoo0<ao
o`00:7oo00<007ooOol09Woo00@007ooOol000Ioo`03001oogoo0?mooc5oo`00:7oo00<007ooOol0
9Woo00<007ooOol0SWoo00<007ooOol0ZGoo000XOol00`00Oomoo`03Ool00`00Oomoo`0ZOol00`00
Oomoo`1jOol00`00Oomoo`07Ool00`00Oomoo`2YOol002Qoo`8000Aoo`03001oogoo02Yoo`03001o
ogoo021oo`03001oogoo05Moo`03001oogoo0;=oo`00:7oo00<007ooOol00goo00<007ooOol0CGoo
00<007ooOol0ogoo3Woo000XOol00`00Oomoo`03Ool00`00Oomoo`34Ool00`00Oomoo`2FOol002Qo
o`03001oogoo00=oo`03001oogoo00Uoo`03001oogoo00Moo`03001oogoo02eoo`03001oogoo07Eo
o`03001oogoo00Ioo`03001oogoo09Ioo`00:7oo00<007ooOol00goo00<007ooOol02Goo00<007oo
Ool01goo00<007ooOol0;Goo00<007ooOol0MGoo00<007ooOol0;Goo00<007ooOol0Kgoo000XOol2
0004Ool00`00Oomoo`09Ool00`00Oomoo`2BOol00`00Oomoo`1:Ool00`00Oomoo`1_Ool002Qoo`03
001oogoo00=oo`03001oogoo00Uoo`03001oogoo00Moo`03001oogoo02Yoo`03001oogoo01Aoo`03
001oogoo04Aoo`03001oogoo0;aoo`00:7oo00<007ooOol06Goo00<007ooOol0:Woo00<007ooOol0
57oo00<007ooOol0ogoo17oo000XOol00`00Oomoo`3WOol00`00Oomoo`0AOol00`00Oomoo`1UOol0
02Qoo`03001oogoo0=Aoo`03001oogoo011oo`03001oogoo015oo`03001oogoo06Eoo`00:7oo00<0
07ooOol0<7oo00<007ooOol0XGoo00<007ooOol0S7oo000XOol2000aOol00`00Oomoo`3oOolaOol0
02Qoo`03001oogoo00moo`03001oogoo0?9oo`03001oogoo05aoo`00:7oo00<007ooOol03goo00<0
07ooOol01goo00<007ooOol03Goo00<007ooOol0/Woo00<007ooOol08goo00<007ooOol01goo00<0
07ooOol0DWoo000XOol00`00Oomoo`0IOol00`00Oomoo`0=Ool00`00Oomoo`0MOol00`00Oomoo`07
Ool00`00Oomoo`0ZOol00`00Oomoo`1KOol00`00Oomoo`0]Ool00`00Oomoo`1BOol000Qoo`8000Ao
o`8000Aoo`8000Aoo`8000Aoo`8000Ioo`03001oogoo00moo`03001oogoo00Moo`03001oogoo02eo
o`03001oogoo00Moo`03001oogoo02Yoo`03001oogoo0>1oo`001goo00@007ooOol000Qoo`04001o
ogoo0002Ool01000Oomoo`000Woo00@007ooOol000Eoo`03001oogoo00moo`03001oogoo0?mooe9o
o`001goo00@007ooOol000Qoo`04001oogoo0002Ool01000Oomoo`001Goo00<007ooOol00goo0`00
JWoo00<007ooOol0<7oo00<007ooOol0`goo00000goo000000020002Ool01000Oomoo`0027oo00@0
07ooOol0009oo`04001oogoo0003Ool20006Ool00`00Oomoo`0?Ool00`00Oomoo`0DOol00`00Oomo
o`0aOol00`00Oomoo`0=Ool00`00Oomoo`0`Ool00`00Oomoo`1hOol00`00Oomoo`18Ool000Moo`04
001oogoo0008Ool01000Oomoo`000Woo00@007ooOol000=oo`03001oogoo00Eoo`03001oogoo00mo
o`03001oogoo01Aoo`03001oogoo011oo`03001oogoo01ioo`03001oogoo0;]oo`03001oogoo01=o
o`03001oogoo039oo`0027oo0P002Woo0P0017oo0P0017oo0`001Goo00<007ooOol0>Goo00<007oo
Ool02Woo00<007ooOol0iGoo00<007ooOol0<Woo000XOol00`00Oomoo`0YOol00`00Oomoo`0JOol0
1000Oomoo`00kWoo00<007ooOol04goo00<007ooOol04Woo000XOol00`00Oomoo`0COol00`00Oomo
o`0COol00`00Oomoo`0MOol00`00Oomoo`04Ool00`00Oomoo`3UOol00`00Oomoo`0COol00`00Oomo
o`0BOol002Qoo`8001Aoo`03001oogoo01=oo`03001oogoo02Aoo`03001oogoo0?moo`Ioo`03001o
ogoo00Qoo`00:7oo00<007ooOol09Woo00@007ooOol00?moobmoo`03001oogoo00Qoo`00:7oo00<0
07ooOol09Woo00<007ooOol0ngoo00<007ooOol0?7oo000XOol00`00Oomoo`0?Ool00`00Oomoo`3o
OolCOol00`00Oomoo`0lOol002Qoo`03001oogoo00moo`05001oogooOol0000<Ool00`00Oomoo`3o
OolSOol00`00Oomoo`0KOol002Qoo`03001oogoo00moo`05001oogooOol0000<Ool00`00Oomoo`0C
Ool00`00Oomoo`3oOol=Ool00`00Oomoo`0KOol002Qoo`80011oo`03001oogoo02Aoo`03001oogoo
00eoo`03001oogoo0?mooa]oo`00:7oo00<007ooOol03goo00D007ooOomoo`00029oo`03001oogoo
00eoo`03001oogoo055oo`03001oogoo0<Ioo`00:7oo00<007ooOol03goo00D007ooOomoo`00049o
o`03001oogoo00eoo`03001oogoo035oo`03001oogoo0<Ioo`00:7oo00<007ooOol0EWoo00<007oo
Ool03Goo00<007ooOol0^7oo00<007ooOol0?goo000XOol00`00Oomoo`0hOol40003Ool2000jOol3
0002Ool200000goo001oo`0dOol30004Ool2000iOol20004Ool2000NOol00`00Oomoo`0COol50002
Ool20004Ool2000MOol002Qoo`8001Aoo`03001oogoo011oo`03001oogoo00moo`03001oogoo00=o
o`04001oogoo000jOol01000Oomoo`000Woo0P00=Goo00@007ooOol0009oo`04001oogoo000gOol0
1000Oomoo`000Woo00@007ooOol003Eoo`05001oogooOol00002Ool01000Oomoo`000Woo00<007oo
Ool06Woo000XOol00`00Oomoo`0COol00`00Oomoo`0@Ool00`00Oomoo`0@Ool00`00Oomoo`02Ool0
1000Oomoo`00=goo1@0000Eoo`00Oomoo`0003Ioo`04001oogoo0002Ool01000Oomoo`00=goo00@0
07ooOol0009oo`04001oogoo000eOol01@00Oomoogoo00000Woo00@007ooOol0009oo`03001oogoo
01Yoo`00:7oo00<007ooOol04goo00<007ooOol097oo00D007ooOomoo`00009oo`03001oo`0003Eo
o`04001oogoo0002Ool01000Oomoo`00=Woo0`000goo00@007ooOol003Qoo`8000=oo`04001oogoo
000eOol01@00Oomoogoo00000Woo0P0000Eoo`00Oomoo`0001aoo`00:7oo00<007ooOol04goo00<0
07ooOol08Woo00@007ooOol0009oo`06001oogoo001oo`00=Woo00<007oo00000Woo00@007ooOol0
03Moo`03001oogoo009oo`04001oogoo000gOol01000Oomoo`000Woo00@007ooOol001Moo`03001o
ogoo01]oo`05001oogooOol00002Ool200001Goo001oogoo000077oo000XOol00`00Oomoo`0COol0
0`00Oomoo`0SOol20004Ool2000jOol20003Ool2000hOol30003Ool2000iOol20004Ool2000HOol0
0`00Oomoo`0JOol20004Ool20004Ool2000MOol002Qoo`03001oogoo01=oo`03001oogoo0?moodio
o`00:7oo0P0057oo00<007ooOol0BWoo00<007ooOol0ogoo0Goo000XOol00`00Oomoo`0iOol00`00
Oomoo`0TOol00`00Oomoo`1gOol00`00Oomoo`26Ool002Qoo`03001oogoo01=oo`03001oogoo02=o
o`03001oogoo06]oo`03001oogoo031oo`03001oogoo05ioo`03001oogoo02Eoo`00:7oo00<007oo
Ool04goo00<007ooOol0TGoo00<007ooOol0TGoo00<007ooOol09Goo000XOol00`00Oomoo`0COol0
0`00Oomoo`0=Ool00`00Oomoo`03Ool01000Oomoo`00ogoo=goo000XOol00`00Oomoo`0COol00`00
Oomoo`06Ool00`00Oomoo`04Ool00`00Oomoo`03Ool01000Oomoo`00Y7oo00<007ooOol0?Goo00<0
07ooOol0Cgoo000OOooo001`000002Moo`8000moo`03001oogoo00eoo`03001oogoo00eoo`03001o
ogoo00eoo`03001oogoo00ioo`03001oogoo00eoo`03001oogoo00eoo`03001oogoo00eoo`03001o
ogoo00eoo`03001oogoo00eoo`03001oogoo00eoo`03001oogoo00eoo`03001oogoo00eoo`03001o
ogoo00ioo`03001oogoo00eoo`03001oogoo00eoo`03001oogoo00eoo`03001oogoo00eoo`03001o
ogoo00eoo`03001oogoo00eoo`03001oogoo00eoo`03001oogoo00eoo`03001oogoo005oo`00:7oo
00<007ooOol0<7oo00<007ooOol02Woo00<007ooOol0?Woo00<007ooOol0?Goo00<007ooOol0?Woo
00<007ooOol0?Goo00<007ooOol08Goo000XOol00`00Oomoo`0FOol00`00Oomoo`0GOol00`00Oomo
o`3oOolaOol002Qoo`03001oogoo01=oo`04001oogoo003oOoleOol00`00Oomoo`0EOol002Qoo`03
001oogoo01=oo`03001oogoo041oo`05001oogooOol00029Ool00`00Oomoo`14Ool00`00Oomoo`0M
Ool00`00Oomoo`0EOol002Qoo`8004Moo`03001oogoo00eoo`05001oogooOol00029Ool00`00Oomo
o`14Ool00`00Oomoo`0eOol002Qoo`03001oogoo02Uoo`03001oogoo01Yoo`03001oogoo0?mooa]o
o`00:7oo00<007ooOol04goo00<007ooOol04goo00<007ooOol0Vgoo00<007ooOol0VGoo000XOol0
0`00Oomoo`0COol00`00Oomoo`2aOol00`00Oomoo`0mOol00`00Oomoo`1IOol002Qoo`03001oogoo
01aoo`03001oogoo0>Qoo`03001oogoo05Uoo`00:7oo00<007ooOol077oo00<007ooOol0ogooAGoo
000XOol2000DOol00`00Oomoo`0@Ool00`00Oomoo`0mOol00`00Oomoo`38Ool00`00Oomoo`0NOol0
0`00Oomoo`0>Ool002Qoo`03001oogoo01=oo`03001oogoo011oo`03001oogoo03eoo`03001oogoo
08Eoo`03001oogoo00Ioo`03001oogoo03Moo`03001oogoo01ioo`03001oogoo00ioo`00:7oo00<0
07ooOol04goo00<007ooOol0Ygoo00<007ooOol0;Woo00<007ooOol01Woo00<007ooOol0JGoo000X
Ool00`00Oomoo`0COol00`00Oomoo`2WOol00`00Oomoo`2SOol002Qoo`03001oogoo02aoo`03001o
ogoo0?moocEoo`00:7oo0P00;Goo00<007ooOol0PWoo00<007ooOol0[goo000XOol00`00Oomoo`2a
Ool00`00Oomoo`2_Ool002Qoo`03001oogoo03=oo`03001oogoo0?moobioo`00:7oo00<007ooOol0
<goo00<007ooOol0bgoo00<007ooOol0DGoo00<007ooOol02goo000XOol00`00Oomoo`3oOol2Ool0
0`00Oomoo`1AOol00`00Oomoo`0;Ool002Qoo`03001oogoo07=oo`03001oogoo08Qoo`03001oogoo
03Aoo`03001oogoo02]oo`00:7oo0P00M7oo00<007ooOol06Woo00<007ooOol0Jgoo00<007ooOol0
=7oo00<007ooOol047oo00<007ooOol067oo000XOol00`00Oomoo`2=Ool01000Oomoo`00]goo00<0
07ooOol067oo000XOol00`00Oomoo`2=Ool00`00Oomoo`2HOol00`00Oomoo`0hOol002Qoo`03001o
o`0007Moo`03001oogoo0:ioo`03001oogoo01=oo`03001oogoo029oo`0027oo0P0017oo0P0017oo
0P0017oo0P0017oo0P001Woo00<007oo0000;7oo00<007ooOol0B7oo00<007ooOol0a7oo00<007oo
Ool08Woo0007Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002Ool01000Oomoo`00
1Goo00<007oo0000:Goo00@007ooOol00?moocMoo`001goo00@007ooOol000Qoo`04001oogoo0002
Ool01000Oomoo`001Goo00<007ooOol00goo0`00:Goo00<007ooOol02Woo00<007ooOol0^goo00<0
07ooOol057oo00<007ooOol0EGoo0007Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo
0003Ool20006Ool00`00Ool0000FOol00`00Oomoo`0MOol00`00Oomoo`0aOol00`00Oomoo`17Ool0
0`00Oomoo`0mOol00`00Oomoo`0DOol00`00Oomoo`1EOol000Moo`04001oogoo0008Ool01000Oomo
o`000Woo00@007ooOol000=oo`03001oogoo00Eoo`03001oo`0001Ioo`03001oogoo055oo`03001o
ogoo04Moo`03001oogoo03=oo`03001oogoo07Ioo`0027oo0P002Woo0P0017oo0P0017oo0`001Goo
00<007oo00005Woo00<007ooOol0XGoo00<007ooOol0;Goo00<007ooOol0MWoo000XOol00`00Oomo
o`2jOol00`00Oomoo`2VOol002Qoo`03001oogoo0?mooamoo`03001oogoo049oo`00:7oo0P0097oo
00<007ooOol0kWoo00<007ooOol01goo00<007ooOol0@Woo000XOol00`00Oomoo`0SOol00`00Oomo
o`0MOol00`00Oomoo`2KOol00`00Oomoo`0`Ool00`00Oomoo`1<Ool002Qoo`03001oogoo01Ioo`03
001oogoo02Yoo`03001oogoo07ioo`03001oogoo01Yoo`03001oogoo07moo`00:7oo00<007ooOol0
5Woo00<007ooOol0@Goo00<007ooOol0Igoo00<007ooOol0W7oo000XOol00`00Oomoo`0FOol00`00
Oomoo`11Ool00`00Oomoo`3oOol7Ool002Qoo`03001oogoo01Ioo`03001oogoo0?mood]oo`00:7oo
0P00f7oo00<007ooOol0RGoo000XOol00`00Oomoo`0YOol00`00Oomoo`2QOol00`00Oomoo`07Ool0
0`00Oomoo`29Ool002Qoo`03001oogoo01=oo`04001oogoo000BOol00`00Oomoo`2QOol00`00Oomo
o`2COol002Qoo`03001oogoo01=oo`04001oogoo002COol00`00Oomoo`2fOol002Qoo`03001oogoo
01Ioo`03001oogoo095oo`03001oogoo0;Ioo`00:7oo0P005goo00<007ooOol00goo00<007ooOol0
17oo00<007ooOol0DGoo00<007ooOol0jGoo000XOol00`00Oomoo`0FOol00`00Oomoo`03Ool00`00
Oomoo`04Ool00`00Oomoo`0GOol01000Oomoo`00=Woo00<007ooOol0jGoo000XOol00`00Oomoo`0m
Ool01000Oomoo`00ogoo8goo000XOol00`00Oomoo`3oOomTOol002Qoo`03001oogoo01Ioo`03001o
ogoo00Yoo`03001oogoo00Ioo`03001oogoo03Aoo`03001oogoo0?eoo`00:7oo00<007ooOol05Woo
00<007ooOol02Woo00<007ooOol01Woo00<007ooOol017oo00<007ooOol0;Goo00<007ooOol057oo
00<007ooOol0iWoo000XOol2000dOol00`00Oomoo`14Ool00`00Oomoo`0:Ool00`00Oomoo`3IOol0
02Qoo`03001oogoo01aoo`03001oogoo02Aoo`03001oogoo045oo`03001oogoo00eoo`03001oogoo
0<Uoo`00:7oo00<007ooOol05Woo00<007ooOol00goo00<007ooOol057oo00<007ooOol03Goo00<0
07ooOol03Goo00<007ooOol0@Goo00<007ooOol0bGoo000XOol00`00Oomoo`0FOol00`00Oomoo`0J
Ool00`00Oomoo`0MOol00`00Oomoo`3oOol>Ool000ioo`8000Aoo`8000Aoo`8000=oo`D000Aoo`03
001oogoo0?moofAoo`003Goo00@007ooOol000Qoo`04001oogoo0004Ool00`00Oomoo`04Ool00`00
Oomoo`0<Ool00`00Oomoo`07Ool00`00Oomoo`0:Ool00`00Oomoo`1jOol00`00Oomoo`30Ool000eo
o`04001oogoo0008Ool01000Oomoo`0017oo00<007ooOol017oo0`0037oo00<007ooOol01goo00<0
07ooOol00goo00<007ooOol017oo00<007ooOol0NWoo00<007ooOol0`7oo000=Ool01000Oomoo`00
27oo00@007ooOol000Aoo`03001oogoo00Aoo`03001oogoo00aoo`03001oogoo00eoo`03001oogoo
00eoo`03001oogoo0?moocEoo`003Goo00@007ooOol000Qoo`04001oogoo0004Ool00`00Oomoo`04
Ool00`00Oomoo`0<Ool00`00Oomoo`0MOol00`00Oomoo`0>Ool00`00Oomoo`09Ool01@00Oomoogoo
000027oo00<007ooOol017oo00<007ooOol0ogoo17oo000>Ool2000:Ool20004Ool20006Ool00`00
Oomoo`0LOol00`00Oomoo`0=Ool00`00Oomoo`04Ool00`00Oomoo`07Ool00`00Oomoo`09Ool01@00
Oomoogoo000027oo00<007ooOol017oo00<007ooOol07Goo00<007ooOol0hgoo000XOol00`00Oomo
o`0LOol00`00Oomoo`0=Ool00`00Oomoo`04Ool00`00Oomoo`0gOol00`00Oomoo`0=Ool00`00Oomo
o`3SOol002Qoo`03001oogoo00Ioo`03001oogoo01=oo`03001oogoo04ioo`03001oogoo0?=oo`00
:7oo0P001goo00<007ooOol04goo00<007ooOol0ogooAGoo000XOol00`00Oomoo`0<Ool00`00Oomo
o`0=Ool00`00Oomoo`1AOol00`00Oomoo`3`Ool002Qoo`03001oogoo00aoo`03001oogoo00eoo`03
001oogoo00Aoo`03001oogoo00eoo`03001oogoo03Yoo`03001oogoo0?1oo`00:7oo00<007ooOol0
37oo00<007ooOol03Goo00<007ooOol017oo00<007ooOol01Woo00<007ooOol017oo00<007ooOol0
ogoo;Woo000XOol00`00Oomoo`06Ool00`00Oomoo`03Ool00`00Oomoo`0=Ool00`00Oomoo`0=Ool0
0`00Oomoo`0NOol00`00Oomoo`3oOolDOol002Qoo`03001oogoo00Ioo`03001oogoo02Yoo`03001o
ogoo01Moo`04001oogoo003oOolCOol002Qoo`8000Moo`03001oogoo00=oo`03001oogoo00eoo`03
001oogoo01Aoo`03001oogoo00Moo`03001oogoo011oo`03001oogoo0?mooa5oo`00:7oo00<007oo
Ool01Woo00<007ooOol00goo00<007ooOol03Goo00<007ooOol07Woo00<007ooOol0ogoo97oo000X
Ool00`00Oomoo`06Ool00`00Oomoo`03Ool00`00Oomoo`3oOomEOol002Qoo`03001oogoo00Ioo`03
001oogoo00=oo`03001oogoo00eoo`03001oogoo02Aoo`03001oogoo0?mooaioo`00:7oo00<007oo
Ool01Woo00<007ooOol04goo00<007ooOol017oo00<007ooOol04goo00<007ooOol01goo00<007oo
Ool0ogoo7Woo000XOol2000MOol00`00Oomoo`04Ool00`00Oomoo`0COol00`00Oomoo`3oOolXOol0
02Qoo`03001oogoo00Ioo`03001oogoo00=oo`03001oogoo00eoo`03001oogoo045oo`03001oogoo
0?moo`5oo`00:7oo00<007ooOol01Woo00<007ooOol00goo00<007ooOol03Goo00<007ooOol0@Goo
00<007ooOol0ogoo0Goo000XOol00`00Oomoo`0<Ool00`00Oomoo`0=Ool00`00Oomoo`3oOom5Ool0
02Qoo`03001oogoo00aoo`03001oogoo01Aoo`03001oogoo0?moocioo`00:7oo00<007ooOol037oo
00<007ooOol057oo00<007ooOol06Woo00<007ooOol0ogoo8Goo000XOol2000=Ool00`00Oomoo`0D
Ool00`00Oomoo`0JOol00`00Oomoo`3oOolQOol002Qoo`03001oogoo00aoo`03001oogoo01Aoo`03
001oogoo01=oo`03001oogoo0?moobQoo`00:7oo00<007ooOol0>Goo00<007ooOol0ogoo:7oo000X
Ool00`00Oomoo`0<Ool00`00Oomoo`3oOomEOol000Qoo`8000Aoo`8000Aoo`8000=oo`D0009oo`80
00Ioo`03001oogoo00aoo`03001oogoo01Aoo`03001oogoo00=oo`03001oogoo0?moocQoo`001goo
00@007ooOol000Qoo`04001oogoo0004Ool01@00Oomoogoo00000Woo00<007ooOol00goo00<007oo
Ool08goo00<007ooOol00goo00<007ooOol0ogoo>7oo0007Ool01000Oomoo`0027oo00@007ooOol0
00Aoo`03001oogoo00Aoo`03001oogoo00=oo`<00?moofAoo`001goo00@007ooOol000Qoo`04001o
ogoo0004Ool00`00Oomoo`02Ool20006Ool00`00Oomoo`3oOomTOol000Moo`04001oogoo0008Ool0
1000Oomoo`0017oo00<007ooOol00Woo00<007ooOol01Goo00<007ooOol0ogooI7oo0008Ool2000:
Ool20004Ool20004Ool30005Ool00`00Oomoo`3oOomTOol002Qoo`03001oogoo0?moofAoo`00:7oo
00<007ooOol0ogooI7oo000XOol2003oOomUOol002Qoo`03001oogoo0?moofAoo`00:7oo00<007oo
Ool0ogooI7oo000XOol00`00Oomoo`3oOomTOol002Qoo`03001oogoo0?moofAoo`00:7oo00<007oo
Ool0ogooI7oo000XOol2003oOomUOol002Qoo`03001oogoo0?moofAoo`00:7oo00<007ooOol0AWoo
00<007ooOol0ogoo6goo000XOol00`00Oomoo`16Ool00`00Oomoo`3oOolKOol002Qoo`03001oogoo
0?moofAoo`00:7oo0P00ogooIGoo000XOol00`00Oomoo`3oOomTOol002Qoo`03001oogoo0?moofAo
o`00ogooSgoo003oOon?Ool00?moohmoo`00ogooSgoo003oOon?Ool00?moohmoo`00ogooSgoo003o
Oon?Ool00?moohmoo`00\
\>"],
  ImageRangeCache->{{{0, 397.125}, {245.063, 0}} -> {-12.5949, -0.022374, \
0.31047, 0.000172645}}],

Cell[BoxData[
    TagBox[
      RowBox[{"\[SkeletonIndicator]", "Graphics", "\[SkeletonIndicator]"}],
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell["\<\
This approach works very well if we are interested in the contents \
of just oneTFS file at a time and there is no clash  of variable names.  \
Notice however that there is already a problem in this example: since the \
data were created with MAD Version 8, the name \"X\" is used both for the \
closed orbit component in the header and for a co-ordinate in tracking.  So \
the tracked X overwrote the closed orbit value.  Similary for PX, Y, PY, \
...\
\>", "Text"],

Cell["\<\
This problem does not arise with data from MAD Version 9 where the \
names for quantities are carefully chosen and unique (closed orbit components \
are called XC, PXC, ...).\
\>", "Text"],

Cell[TextData[{
  "The overwriting of variable content is unavoidable if a subsequent ",
  StyleBox["mfs", "Input"],
  " data object containing an \"X\" column is given to ",
  StyleBox["mfsInterpret", "Input"],
  ".  A simple way to avoid this is to copy the information to a new variable \
whose name does not occur in the TFS files:  "
}], "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"X1", "=", "X"}], ";"}]], "Input"],

Cell["\<\
The more general functions described in the following sections do \
not have these limitations and allow you to work with similar data from any \
number of TFS files.\
\>", "Text"],

Cell["\<\
Later versions of the package may provide an option not to \
overwrite existing variable assignments.\
\>", "Text"],

Cell[TextData[{
  "If the argument to ",
  StyleBox["mfsInterpret", "Input"],
  " is a string, then it is interpreted as the name of a TFS file.  Thus we \
could have   generated the key and column variables directly  without \
assigning the mfs object ",
  StyleBox["qpmfs", "Input"],
  " by typing  simply"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsInterpret", "[", "sampleFile", "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
      "Number", ",", "Number", ",", "Number", ",", "Number", ",", "Number", 
        ",", "Number", ",", "Number", ",", "Number"}], "}"}]], "Print"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Header block:\\n\"\>", "\[InvisibleSpace]", 
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\<\"TYPE\"\>", ",", "\<\"TRACK\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"X\"\>", ",", 
                RowBox[{"-", "0.00038835361175100004`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"PX\"\>", ",", 
                RowBox[{"-", "0.0000167029349567`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"Y\"\>", ",", 
                RowBox[{"-", "0.00038184396626099996`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"PY\"\>", ",", 
                RowBox[{"-", "2.9493485039200003`*^-6"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"ET\"\>", ",", "0.0000102626001956`"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"EY\"\>", ",", "1.05428403375`*^-10"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"EX\"\>", ",", "2.98256612951`*^-8"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E11\"\>", ",", "5.25333002895`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E12\"\>", ",", 
                RowBox[{"-", "3.43414759638`*^-17"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E13\"\>", ",", "0.185018159186`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E14\"\>", ",", "0.0829796374966`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E15\"\>", ",", 
                RowBox[{"-", "0.0026510085008000003`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E16\"\>", ",", 
                RowBox[{"-", "0.0111704421761`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E21\"\>", ",", "0.011563874218500001`"}], "}"}], 
            ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E22\"\>", ",", "0.190232632187`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E23\"\>", ",", "0.00199451841627`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E24\"\>", ",", "0.00440399981552`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E25\"\>", ",", 
                RowBox[{"-", "0.0000414979161278`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E26\"\>", ",", "0.0013772593876200002`"}], "}"}], 
            ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E31\"\>", ",", 
                RowBox[{"-", "0.118845072845`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E32\"\>", ",", "0.0846274349415`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E33\"\>", ",", "5.35717075012`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E34\"\>", ",", "1.0125579562`*^-16"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"E35\"\>", ",", 
                RowBox[{"-", "0.00436134264581`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E36\"\>", ",", 
                RowBox[{"-", "0.00337974309699`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E41\"\>", ",", "0.00148938982552`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E42\"\>", ",", 
                RowBox[{"-", "0.00652173877267`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E43\"\>", ",", "0.003038214738`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E44\"\>", ",", "0.186544772125`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E45\"\>", ",", 
                RowBox[{"-", "0.000051178374618`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E46\"\>", ",", "0.000242385635122`"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"E51\"\>", ",", 
                RowBox[{"-", "0.0174585465196`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E52\"\>", ",", 
                RowBox[{"-", "0.0050503245767`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E53\"\>", ",", 
                RowBox[{"-", "0.00377175447184`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E54\"\>", ",", 
                RowBox[{"-", "0.0018883004966399998`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E55\"\>", ",", "2.37836715853`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E56\"\>", ",", 
                RowBox[{"-", "7.68138184883`*^-17"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E61\"\>", ",", 
                RowBox[{"-", "0.000102914870556`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E62\"\>", ",", "0.000189745354973`"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"E63\"\>", ",", 
                RowBox[{"-", "0.00011706941393`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E64\"\>", ",", "0.000342355037377`"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"E65\"\>", ",", "0.004009558592179999`"}], "}"}], 
            ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E66\"\>", ",", "0.420458776176`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"COMMENT\"\>", ",", "\<\"\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{"\<\"ORIGIN\"\>", 
                ",", "\<\"MAD 8.21/11 RS6000 - AIX\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"DATE\"\>", ",", "\<\"01/05/97\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"TIME\"\>", ",", "\<\"15.40.36\"\>"}], "}"}]}], 
          "}"}], "\[InvisibleSpace]", "\<\"\\nColumns labels:  \"\>", 
        "\[InvisibleSpace]", 
        RowBox[{"{", 
          
          RowBox[{"\<\"TURNS\"\>", ",", "\<\"PARTICLE\"\>", ",", "\<\"X\"\>", 
            ",", "\<\"PX\"\>", ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", 
            ",", "\<\"T\"\>", ",", "\<\"DELTAP\"\>"}], "}"}], 
        "\[InvisibleSpace]", "\<\"\\nColumn formats:  \"\>", 
        "\[InvisibleSpace]", 
        RowBox[{"{", 
          RowBox[{
          "Number", ",", "Number", ",", "Number", ",", "Number", ",", 
            "Number", ",", "Number", ",", "Number", ",", "Number"}], "}"}], 
        "\[InvisibleSpace]", "\<\"\\nColumn data starts at position \"\>", 
        "\[InvisibleSpace]", "2335", "\[InvisibleSpace]", "\<\" in \"\>", 
        "\[InvisibleSpace]", "\<\"C:\\\\TEMP\\\\000004a00259\"\>"}],
      SequenceForm[ 
      "Header block:\n", {{"TYPE", "TRACK"}, {"X", -.00038835361175100004}, {
        "PX", -.000016702934956699999}, {"Y", -.00038184396626099996}, {
        "PY", -.29493485039200003*^-5}, {"ET", .0000102626001956}, {
        "EY", .105428403375*^-9}, {"EX", .29825661295099999*^-7}, {"E11", 
        5.2533300289499998}, {"E12", -.343414759638*^-16}, {
        "E13", .18501815918600001}, {"E14", .082979637496600006}, {
        "E15", -.0026510085008000003}, {"E16", -.0111704421761}, {
        "E21", .011563874218500001}, {"E22", .19023263218700001}, {
        "E23", .0019945184162700001}, {"E24", .0044039998155200001}, {
        "E25", -.000041497916127799997}, {"E26", .0013772593876200002}, {
        "E31", -.118845072845}, {"E32", .084627434941500004}, {"E33", 
        5.3571707501199999}, {"E34", .10125579562*^-15}, {
        "E35", -.0043613426458099999}, {"E36", -.00337974309699}, {
        "E41", .00148938982552}, {"E42", -.00652173877267}, {
        "E43", .0030382147380000001}, {"E44", .18654477212500001}, {
        "E45", -.000051178374618000002}, {"E46", .00024238563512200001}, {
        "E51", -.0174585465196}, {"E52", -.0050503245767000004}, {
        "E53", -.0037717544718399998}, {"E54", -.0018883004966399998}, {"E55",
         2.3783671585300001}, {"E56", -.76813818488300005*^-16}, {
        "E61", -.00010291487055600001}, {"E62", .000189745354973}, {
        "E63", -.00011706941393}, {"E64", .00034235503737700001}, {
        "E65", .0040095585921799994}, {"E66", .42045877617600003}, {"COMMENT",
         ""}, {"ORIGIN", "MAD 8.21/11 RS6000 - AIX"}, {"DATE", "01/05/97"}, {
        "TIME", "15.40.36"}}, "\nColumns labels:  ", {"TURNS", "PARTICLE", 
        "X", "PX", "Y", "PY", "T", "DELTAP"}, "\nColumn formats:  ", {Number, 
        Number, Number, Number, Number, Number, Number, Number}, 
        "\nColumn data starts at position ", 2335, " in ", 
        "C:\\TEMP\\000004a00259"],
      Editable->False]], "Print"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Variables (re-)assigned: \"\>", "\[InvisibleSpace]", 
        RowBox[{"{", 
          
          RowBox[{"\<\"TYPE\"\>", ",", "\<\"X\"\>", ",", "\<\"PX\"\>", 
            ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", ",", "\<\"ET\"\>", 
            ",", "\<\"EY\"\>", ",", "\<\"EX\"\>", ",", "\<\"E11\"\>", 
            ",", "\<\"E12\"\>", ",", "\<\"E13\"\>", ",", "\<\"E14\"\>", 
            ",", "\<\"E15\"\>", ",", "\<\"E16\"\>", ",", "\<\"E21\"\>", 
            ",", "\<\"E22\"\>", ",", "\<\"E23\"\>", ",", "\<\"E24\"\>", 
            ",", "\<\"E25\"\>", ",", "\<\"E26\"\>", ",", "\<\"E31\"\>", 
            ",", "\<\"E32\"\>", ",", "\<\"E33\"\>", ",", "\<\"E34\"\>", 
            ",", "\<\"E35\"\>", ",", "\<\"E36\"\>", ",", "\<\"E41\"\>", 
            ",", "\<\"E42\"\>", ",", "\<\"E43\"\>", ",", "\<\"E44\"\>", 
            ",", "\<\"E45\"\>", ",", "\<\"E46\"\>", ",", "\<\"E51\"\>", 
            ",", "\<\"E52\"\>", ",", "\<\"E53\"\>", ",", "\<\"E54\"\>", 
            ",", "\<\"E55\"\>", ",", "\<\"E56\"\>", ",", "\<\"E61\"\>", 
            ",", "\<\"E62\"\>", ",", "\<\"E63\"\>", ",", "\<\"E64\"\>", 
            ",", "\<\"E65\"\>", ",", "\<\"E66\"\>", ",", "\<\"COMMENT\"\>", 
            ",", "\<\"ORIGIN\"\>", ",", "\<\"DATE\"\>", ",", "\<\"TIME\"\>"}],
           "}"}]}],
      SequenceForm[ 
      "Variables (re-)assigned: ", {"TYPE", "X", "PX", "Y", "PY", "ET", "EY", 
        "EX", "E11", "E12", "E13", "E14", "E15", "E16", "E21", "E22", "E23", 
        "E24", "E25", "E26", "E31", "E32", "E33", "E34", "E35", "E36", "E41", 
        "E42", "E43", "E44", "E45", "E46", "E51", "E52", "E53", "E54", "E55", 
        "E56", "E61", "E62", "E63", "E64", "E65", "E66", "COMMENT", "ORIGIN", 
        "DATE", "TIME"}],
      Editable->False]], "Print"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Variables (re-)assigned: \"\>", "\[InvisibleSpace]", 
        RowBox[{"{", 
          
          RowBox[{"\<\"TURNS\"\>", ",", "\<\"PARTICLE\"\>", ",", "\<\"X\"\>", 
            ",", "\<\"PX\"\>", ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", 
            ",", "\<\"T\"\>", ",", "\<\"DELTAP\"\>"}], "}"}]}],
      SequenceForm[ 
      "Variables (re-)assigned: ", {"TURNS", "PARTICLE", "X", "PX", "Y", "PY",
         "T", "DELTAP"}],
      Editable->False]], "Print"]
}, Open  ]],

Cell["which is equivalent to", "Text"],

Cell[BoxData[
    RowBox[{"mfsInterpret", "[", 
      RowBox[{"tfsRead", "[", "sampleFile", "]"}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More general usage of the package", "Subsection",
  CellTags->"Examples section"],

Cell[TextData[{
  "The ",
  ButtonBox["section on interpreting mfs objects",
    ButtonData:>"mfsInterpret",
    ButtonStyle->"Hyperlink"],
  " provided a simple way to get hold of and calculate with the data inside \
mfs objects or TFS files which many users will find adequate for many \
purposes.  Sometimes more general mechanisms are necessary to allow more \
elaborate programming.  These are explained in this section."
}], "Text"],

Cell[CellGroupData[{

Cell["Extracting header information from an mfs object", "Subsubsection",
  CellTags->"Examples section"],

Cell[TextData[{
  "In this example, the TFS file contained a TRACK table from MAD.  The \
header block of the file contains various descriptors that are converted into \
",
  StyleBox["keys",
    FontSlant->"Italic"],
  " and associated ",
  StyleBox["values",
    FontSlant->"Italic"],
  " in the mfs data object. To find out what they are we can evaluate"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsKeyNames", "[", "qpmfs", "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"TYPE\"\>", ",", "\<\"X\"\>", ",", "\<\"PX\"\>", 
        ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", ",", "\<\"ET\"\>", 
        ",", "\<\"EY\"\>", ",", "\<\"EX\"\>", ",", "\<\"E11\"\>", 
        ",", "\<\"E12\"\>", ",", "\<\"E13\"\>", ",", "\<\"E14\"\>", 
        ",", "\<\"E15\"\>", ",", "\<\"E16\"\>", ",", "\<\"E21\"\>", 
        ",", "\<\"E22\"\>", ",", "\<\"E23\"\>", ",", "\<\"E24\"\>", 
        ",", "\<\"E25\"\>", ",", "\<\"E26\"\>", ",", "\<\"E31\"\>", 
        ",", "\<\"E32\"\>", ",", "\<\"E33\"\>", ",", "\<\"E34\"\>", 
        ",", "\<\"E35\"\>", ",", "\<\"E36\"\>", ",", "\<\"E41\"\>", 
        ",", "\<\"E42\"\>", ",", "\<\"E43\"\>", ",", "\<\"E44\"\>", 
        ",", "\<\"E45\"\>", ",", "\<\"E46\"\>", ",", "\<\"E51\"\>", 
        ",", "\<\"E52\"\>", ",", "\<\"E53\"\>", ",", "\<\"E54\"\>", 
        ",", "\<\"E55\"\>", ",", "\<\"E56\"\>", ",", "\<\"E61\"\>", 
        ",", "\<\"E62\"\>", ",", "\<\"E63\"\>", ",", "\<\"E64\"\>", 
        ",", "\<\"E65\"\>", ",", "\<\"E66\"\>", ",", "\<\"COMMENT\"\>", 
        ",", "\<\"ORIGIN\"\>", ",", "\<\"DATE\"\>", ",", "\<\"TIME\"\>"}], 
      "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
  " The function ",
  StyleBox["mfsKeyValue", "Input"],
  " can be used to extract the values corresponding to the keys:"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"\[Epsilon]", " ", "=", " ", 
      RowBox[{"mfsKeyValue", "[", 
        RowBox[{"qpmfs", ",", "\"\<EX\>\""}], "]"}]}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["2.98256612951`*^-8"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsKeyValue", "[", 
      RowBox[{"qpmfs", ",", "\"\<ORIGIN\>\""}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"MAD 8.21/11 RS6000 - AIX\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
  "If a ",
  "key",
  " does not exist, an error message will be given and a ",
  StyleBox["Null", "Input"],
  " value returned."
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsKeyValue", "[", 
      RowBox[{"qpmfs", ",", "\"\<QX\>\""}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"mfsKeyValue", "::", "\<\"notfound\"\>"}], 
      RowBox[{
      ":", " "}], "\<\"Descriptor \\!\\(\\\"QX\\\"\\) not found.\"\>"}]], \
"Message"]
}, Open  ]],

Cell["\<\
Lists can be extracted with one call, e.g,  to get four components \
of the closed orbit\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsKeyValue", "[", 
      RowBox[{"qpmfs", ",", 
        RowBox[{"{", 
          RowBox[{
          "\"\<X\>\"", ",", "\"\<PX\>\"", ",", "\"\<Y\>\"", ",", 
            "\"\<PY\>\""}], "}"}]}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{"-", "0.00038835361175100004`"}], ",", 
        RowBox[{"-", "0.0000167029349567`"}], ",", 
        RowBox[{"-", "0.00038184396626099996`"}], ",", 
        RowBox[{"-", "2.9493485039200003`*^-6"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Of course, lists can be used in many ways in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "."
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"ArcTan", " ", "@@", " ", 
      RowBox[{"mfsKeyValue", "[", 
        RowBox[{"qpmfs", ",", 
          RowBox[{"{", 
            RowBox[{"\"\<X\>\"", ",", "\"\<PX\>\""}], "}"}]}], 
        "]"}]}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"-", "3.098609540537677`"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracting column information from an mfs object", "Subsubsection",
  CellTags->"Examples section"],

Cell["\<\
The body of the original TFS file contained columns of data.  To \
find out what these are we use:\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsColumnNames", "[", "qpmfs", "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"TURNS\"\>", ",", "\<\"PARTICLE\"\>", ",", "\<\"X\"\>", 
        ",", "\<\"PX\"\>", ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", 
        ",", "\<\"T\"\>", ",", "\<\"DELTAP\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
  "To extract columns of data we can use the function ",
  StyleBox["mfsColumn", "Input"]
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "mfsColumn"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"mfsColumn[mfsdata,colname] returns the column of data \
labelled by the string colname in an mfs (or related) data object. A list of \
colnames may also be given to return a set of columns.  If colname is absent \
the entire block of columns is returned.\"\>"], "Print"]
}, Open  ]],

Cell[TextData[{
  "Thus, for example, we can get a list of all the values of the momentum PY. \
 Since this is long, we abbreviate the printing with the function ",
  StyleBox["Short:", "Input"]
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Short", "[", "   ", 
      RowBox[{
        RowBox[{"mfsColumn", "[", 
          RowBox[{"qpmfs", ",", "\"\<PY\>\""}], "]"}], "   ", ",", "8"}], 
      "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[
      RowBox[{"{", 
        RowBox[{
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
          ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
          "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
          "0.0000217497`", ",", "0.000021465200000000002`", ",", 
          "0.0000208008`", ",", 
          RowBox[{"\[LeftSkeleton]", "343", "\[RightSkeleton]"}], ",", 
          RowBox[{"-", "0.0000133607`"}], ",", 
          RowBox[{"-", "0.0000464832`"}], ",", 
          RowBox[{"-", "0.0000369869`"}], ",", "0.0000155165`", ",", 
          "0.000038503`", ",", "0.000016930000000000002`", ",", 
          RowBox[{"-", "0.00001942`"}], ",", 
          RowBox[{"-", "0.0000366784`"}], ",", 
          RowBox[{"-", "0.0000171618`"}], ",", "0.0000266039`", ",", 
          "0.0000343572`", ",", 
          RowBox[{"-", "3.5169299999999997`*^-6"}], ",", 
          RowBox[{"-", "0.000032780599999999996`"}], ",", 
          RowBox[{"-", "0.0000123483`"}], ",", "0.000017505000000000003`", 
          ",", "0.0000320125`", ",", "0.0000178347`", ",", 
          RowBox[{"-", "0.000021440400000000002`"}]}], "}"}],
      (Short[ #, 8]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Multiple columns can also be returned.  Using ",
  StyleBox["Transpose", "Input"],
  ", these can be transformed into lists of coordinate vectors.  Here are the \
coordinate pairs in the horizontal phase plane (abbreviated again)"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Short", "[", " ", 
      RowBox[{
        RowBox[{"xpx", " ", "=", 
          RowBox[{"Transpose", "[", 
            RowBox[{"mfsColumn", "[", 
              RowBox[{"qpmfs", ",", 
                RowBox[{"{", 
                  RowBox[{"\"\<X\>\"", ",", "\"\<PX\>\""}], "}"}]}], "]"}], 
            "]"}]}], " ", ",", "10"}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[
      RowBox[{"{", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.`", ",", "0.0005`"}], "}"}], ",", 
          RowBox[{"\[LeftSkeleton]", "360", "\[RightSkeleton]"}], ",", 
          RowBox[{"{", 
            RowBox[{
              RowBox[{"-", "0.000741994`"}], ",", "0.000165904`"}], "}"}], 
          ",", 
          RowBox[{"{", 
            RowBox[{"0.004411109999999999`", ",", 
              RowBox[{"-", "6.7802200000000005`*^-6"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{
              RowBox[{"-", "0.0017510700000000002`"}], ",", 
              RowBox[{"-", "0.00014994299999999998`"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{
              RowBox[{"-", "0.0031952599999999997`"}], ",", "0.000113019`"}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.00398775`", ",", "0.0000855205`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"0.000672365`", ",", 
              RowBox[{"-", "0.000142523`"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{
              RowBox[{"-", "0.00427998`"}], ",", "0.0000203029`"}], "}"}], 
          ",", 
          RowBox[{"{", 
            RowBox[{
            "0.0020450299999999998`", ",", "0.00015557899999999998`"}], "}"}],
           ",", 
          RowBox[{"{", 
            RowBox[{"0.00341965`", ",", 
              RowBox[{"-", "0.000114564`"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{
              RowBox[{"-", "0.0039068`"}], ",", 
              RowBox[{"-", "0.0000886172`"}]}], "}"}]}], "}"}],
      (Short[ #, 10]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "which is just what is needed for the standard ",
  StyleBox["ListPlot", "Input"],
  " function.  Note that this example mixes the trajectories of all the  \
particles in the file (the ",
  ButtonBox["TrackTable",
    ButtonData:>{
      URL[ "http://wwwslap.cern.ch/~jowett/Madtomma/Mfs/TrackTable.html"], 
      None},
    ButtonStyle->"Hyperlink"],
  " package deals with this in a better way)"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"ListPlot", "[", "xpx", "]"}]], "Input",
  CellTags->"Examples section"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.529463 25.6591 0.342027 367.52 [
[.01628 .32953 -15 -9 ]
[.01628 .32953 15 0 ]
[.14458 .32953 -18 -9 ]
[.14458 .32953 18 0 ]
[.27287 .32953 -15 -9 ]
[.27287 .32953 15 0 ]
[.40117 .32953 -18 -9 ]
[.40117 .32953 18 0 ]
[.65776 .32953 -15 -9 ]
[.65776 .32953 15 0 ]
[.78605 .32953 -12 -9 ]
[.78605 .32953 12 0 ]
[.91435 .32953 -15 -9 ]
[.91435 .32953 15 0 ]
[.51696 .06639 -48 -4.5 ]
[.51696 .06639 0 4.5 ]
[.51696 .15827 -42 -4.5 ]
[.51696 .15827 0 4.5 ]
[.51696 .25015 -48 -4.5 ]
[.51696 .25015 0 4.5 ]
[.51696 .43391 -42 -4.5 ]
[.51696 .43391 0 4.5 ]
[.51696 .52579 -36 -4.5 ]
[.51696 .52579 0 4.5 ]
[.51696 .61767 -42 -4.5 ]
[.51696 .61767 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.01628 .34203 m
.01628 .34828 L
s
[(-0.02)] .01628 .32953 0 1 Mshowa
.14458 .34203 m
.14458 .34828 L
s
[(-0.015)] .14458 .32953 0 1 Mshowa
.27287 .34203 m
.27287 .34828 L
s
[(-0.01)] .27287 .32953 0 1 Mshowa
.40117 .34203 m
.40117 .34828 L
s
[(-0.005)] .40117 .32953 0 1 Mshowa
.65776 .34203 m
.65776 .34828 L
s
[(0.005)] .65776 .32953 0 1 Mshowa
.78605 .34203 m
.78605 .34828 L
s
[(0.01)] .78605 .32953 0 1 Mshowa
.91435 .34203 m
.91435 .34828 L
s
[(0.015)] .91435 .32953 0 1 Mshowa
.125 Mabswid
.04194 .34203 m
.04194 .34578 L
s
.0676 .34203 m
.0676 .34578 L
s
.09326 .34203 m
.09326 .34578 L
s
.11892 .34203 m
.11892 .34578 L
s
.17024 .34203 m
.17024 .34578 L
s
.19589 .34203 m
.19589 .34578 L
s
.22155 .34203 m
.22155 .34578 L
s
.24721 .34203 m
.24721 .34578 L
s
.29853 .34203 m
.29853 .34578 L
s
.32419 .34203 m
.32419 .34578 L
s
.34985 .34203 m
.34985 .34578 L
s
.37551 .34203 m
.37551 .34578 L
s
.42683 .34203 m
.42683 .34578 L
s
.45249 .34203 m
.45249 .34578 L
s
.47814 .34203 m
.47814 .34578 L
s
.5038 .34203 m
.5038 .34578 L
s
.55512 .34203 m
.55512 .34578 L
s
.58078 .34203 m
.58078 .34578 L
s
.60644 .34203 m
.60644 .34578 L
s
.6321 .34203 m
.6321 .34578 L
s
.68342 .34203 m
.68342 .34578 L
s
.70908 .34203 m
.70908 .34578 L
s
.73474 .34203 m
.73474 .34578 L
s
.76039 .34203 m
.76039 .34578 L
s
.81171 .34203 m
.81171 .34578 L
s
.83737 .34203 m
.83737 .34578 L
s
.86303 .34203 m
.86303 .34578 L
s
.88869 .34203 m
.88869 .34578 L
s
.94001 .34203 m
.94001 .34578 L
s
.96567 .34203 m
.96567 .34578 L
s
.99133 .34203 m
.99133 .34578 L
s
.25 Mabswid
0 .34203 m
1 .34203 L
s
.52946 .06639 m
.53571 .06639 L
s
[(-0.00075)] .51696 .06639 1 0 Mshowa
.52946 .15827 m
.53571 .15827 L
s
[(-0.0005)] .51696 .15827 1 0 Mshowa
.52946 .25015 m
.53571 .25015 L
s
[(-0.00025)] .51696 .25015 1 0 Mshowa
.52946 .43391 m
.53571 .43391 L
s
[(0.00025)] .51696 .43391 1 0 Mshowa
.52946 .52579 m
.53571 .52579 L
s
[(0.0005)] .51696 .52579 1 0 Mshowa
.52946 .61767 m
.53571 .61767 L
s
[(0.00075)] .51696 .61767 1 0 Mshowa
.125 Mabswid
.52946 .08476 m
.53321 .08476 L
s
.52946 .10314 m
.53321 .10314 L
s
.52946 .12152 m
.53321 .12152 L
s
.52946 .13989 m
.53321 .13989 L
s
.52946 .17664 m
.53321 .17664 L
s
.52946 .19502 m
.53321 .19502 L
s
.52946 .2134 m
.53321 .2134 L
s
.52946 .23177 m
.53321 .23177 L
s
.52946 .26852 m
.53321 .26852 L
s
.52946 .2869 m
.53321 .2869 L
s
.52946 .30528 m
.53321 .30528 L
s
.52946 .32365 m
.53321 .32365 L
s
.52946 .3604 m
.53321 .3604 L
s
.52946 .37878 m
.53321 .37878 L
s
.52946 .39716 m
.53321 .39716 L
s
.52946 .41553 m
.53321 .41553 L
s
.52946 .45228 m
.53321 .45228 L
s
.52946 .47066 m
.53321 .47066 L
s
.52946 .48904 m
.53321 .48904 L
s
.52946 .50741 m
.53321 .50741 L
s
.52946 .54416 m
.53321 .54416 L
s
.52946 .56254 m
.53321 .56254 L
s
.52946 .58092 m
.53321 .58092 L
s
.52946 .59929 m
.53321 .59929 L
s
.52946 .04801 m
.53321 .04801 L
s
.52946 .02963 m
.53321 .02963 L
s
.52946 .01126 m
.53321 .01126 L
s
.25 Mabswid
.52946 0 m
.52946 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.008 w
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.52946 .52579 Mdot
.65892 .18643 Mdot
.65945 .18892 Mdot
.65041 .18704 Mdot
.66851 .18846 Mdot
.6511 .18553 Mdot
.66523 .188 Mdot
.66023 .18637 Mdot
.653 .18628 Mdot
.66051 .19104 Mdot
.65717 .18848 Mdot
.64864 .18468 Mdot
.64694 .18356 Mdot
.66564 .19103 Mdot
.66122 .19257 Mdot
.64944 .18434 Mdot
.64416 .18342 Mdot
.3383 .52517 Mdot
.32975 .51363 Mdot
.33338 .51058 Mdot
.33886 .52182 Mdot
.33579 .5259 Mdot
.33562 .5275 Mdot
.33885 .52189 Mdot
.334 .51748 Mdot
.32048 .49586 Mdot
.33239 .51775 Mdot
.33547 .52466 Mdot
.34293 .52128 Mdot
.33186 .51982 Mdot
.32304 .50171 Mdot
.34114 .52594 Mdot
.34868 .53662 Mdot
.83742 .26041 Mdot
.86414 .28233 Mdot
.84681 .27399 Mdot
.85186 .27239 Mdot
.84033 .26799 Mdot
.83833 .25779 Mdot
.83289 .26058 Mdot
.85251 .26877 Mdot
.86462 .28455 Mdot
.84733 .25759 Mdot
.84753 .26416 Mdot
.83648 .26833 Mdot
.84106 .26301 Mdot
.86675 .28958 Mdot
.83172 .25472 Mdot
.80844 .24367 Mdot
.24429 .3897 Mdot
.24643 .33604 Mdot
.24067 .36083 Mdot
.24734 .355 Mdot
.25005 .36375 Mdot
.26171 .39653 Mdot
.25448 .38491 Mdot
.25269 .36838 Mdot
.2497 .32575 Mdot
.24888 .4066 Mdot
.25501 .39741 Mdot
.25191 .36057 Mdot
.24485 .38885 Mdot
.24629 .32548 Mdot
.25574 .41153 Mdot
.2609 .44051 Mdot
.86862 .37944 Mdot
.79158 .42781 Mdot
.84814 .39984 Mdot
.81913 .41125 Mdot
.82586 .4089 Mdot
.8655 .37696 Mdot
.84345 .39162 Mdot
.83787 .39823 Mdot
.78039 .44003 Mdot
.88896 .36265 Mdot
.86978 .37508 Mdot
.82164 .41128 Mdot
.88063 .37153 Mdot
.78497 .43517 Mdot
.87218 .36148 Mdot
.90127 .32491 Mdot
.30375 .21901 Mdot
.45825 .19102 Mdot
.33737 .21683 Mdot
.40715 .20139 Mdot
.40372 .1821 Mdot
.34898 .19285 Mdot
.34887 .21129 Mdot
.37922 .19847 Mdot
.45051 .1968 Mdot
.29444 .21812 Mdot
.33727 .2075 Mdot
.39241 .20753 Mdot
.29515 .2144 Mdot
.44227 .20192 Mdot
.30208 .24038 Mdot
.23327 .28322 Mdot
.58133 .50321 Mdot
.42162 .48823 Mdot
.54815 .50044 Mdot
.47577 .48824 Mdot
.44708 .50923 Mdot
.48289 .50691 Mdot
.52146 .49531 Mdot
.50058 .49891 Mdot
.45875 .48682 Mdot
.58248 .51049 Mdot
.51113 .50425 Mdot
.49767 .4913 Mdot
.56494 .51098 Mdot
.49087 .49632 Mdot
.59369 .49407 Mdot
.72119 .47327 Mdot
.6691 .20457 Mdot
.76805 .23289 Mdot
.70022 .21729 Mdot
.73101 .19997 Mdot
.78037 .23551 Mdot
.78146 .25299 Mdot
.72163 .22434 Mdot
.72095 .19989 Mdot
.74908 .21629 Mdot
.66351 .19763 Mdot
.7331 .22094 Mdot
.7296 .21082 Mdot
.69276 .20723 Mdot
.71858 .19552 Mdot
.66908 .20868 Mdot
.54403 .1917 Mdot
.28412 .4553 Mdot
.1767 .44319 Mdot
.27533 .4396 Mdot
.35254 .47264 Mdot
.1879 .44438 Mdot
.22127 .38416 Mdot
.24114 .43241 Mdot
.3379 .47297 Mdot
.26246 .44713 Mdot
.28724 .46582 Mdot
.2219 .44298 Mdot
.28496 .4551 Mdot
.27733 .45058 Mdot
.3845 .49404 Mdot
.30071 .44875 Mdot
.3859 .4807 Mdot
.82661 .25331 Mdot
.5724 .03717 Mdot
.85494 .29931 Mdot
.79853 .22645 Mdot
.52712 .02159 Mdot
.86272 .37366 Mdot
.8513 .27341 Mdot
.76577 .17531 Mdot
.87079 .28251 Mdot
.81852 .23302 Mdot
.73117 .12194 Mdot
.84046 .2618 Mdot
.85388 .29038 Mdot
.80765 .24751 Mdot
.83867 .29085 Mdot
.78718 .23145 Mdot
.18431 .41148 Mdot
.22296 .32522 Mdot
.26344 .43758 Mdot
.02381 .52508 Mdot
.21418 .36019 Mdot
.44604 .56635 Mdot
.25391 .31885 Mdot
.15843 .46176 Mdot
.24986 .36405 Mdot
.14375 .41297 Mdot
.25528 .3898 Mdot
.24144 .31675 Mdot
.22258 .41805 Mdot
.88627 .26726 Mdot
.78191 .4301 Mdot
.90635 .32493 Mdot
.85622 .3908 Mdot
.68493 .17462 Mdot
.73413 .44452 Mdot
.82176 .40343 Mdot
.52064 .01472 Mdot
.8789 .36872 Mdot
.75114 .4396 Mdot
.90678 .324 Mdot
.21784 .37487 Mdot
.43359 .18444 Mdot
.26903 .24064 Mdot
.31204 .19676 Mdot
.58156 .18612 Mdot
.40541 .17513 Mdot
.30931 .18368 Mdot
.47674 .18504 Mdot
.23974 .27019 Mdot
.90788 .36726 Mdot
.41992 .4905 Mdot
.65155 .48566 Mdot
.56048 .51467 Mdot
.30968 .38071 Mdot
.42613 .50384 Mdot
.52175 .52456 Mdot
.38161 .4766 Mdot
.71626 .46863 Mdot
.28051 .18892 Mdot
.79002 .27279 Mdot
.59836 .1948 Mdot
.6513 .19309 Mdot
.80103 .28268 Mdot
.75042 .21964 Mdot
.82673 .30705 Mdot
.52031 .17759 Mdot
.53876 .53119 Mdot
.24654 .34098 Mdot
.31986 .46405 Mdot
.3069 .47816 Mdot
.24657 .32845 Mdot
.29399 .27029 Mdot
.37143 .48813 Mdot
.76943 .43277 Mdot
.82029 .26253 Mdot
.83627 .25471 Mdot
.7556 .44486 Mdot
.61466 .4722 Mdot
.80018 .25512 Mdot
.45599 .19848 Mdot
.14136 .44428 Mdot
.21284 .39487 Mdot
.45089 .23373 Mdot
.65986 .22807 Mdot
.19222 .4093 Mdot
.41054 .48424 Mdot
.89182 .3444 Mdot
.50661 .47471 Mdot
.26474 .41989 Mdot
.85582 .24685 Mdot
.79694 .27838 Mdot
.23051 .28503 Mdot
.73601 .22699 Mdot
.84142 .32916 Mdot
.19363 .4334 Mdot
.24333 .34365 Mdot
.73609 .46507 Mdot
.27037 .41891 Mdot
.25056 .29295 Mdot
.88348 .22721 Mdot
.76355 .42833 Mdot
.48346 .19234 Mdot
.85514 .3591 Mdot
.68925 .46227 Mdot
.3004 .54154 Mdot
.45395 .19367 Mdot
.41227 .48745 Mdot
.35097 .16296 Mdot
.55646 .19152 Mdot
.97619 .27873 Mdot
.42104 .48529 Mdot
.79453 .26228 Mdot
.38725 .49106 Mdot
.3405 .44346 Mdot
.79607 .27225 Mdot
.23304 .36856 Mdot
.8297 .36796 Mdot
.24814 .34122 Mdot
.83602 .39338 Mdot
.42418 .17684 Mdot
.77056 .42637 Mdot
.32619 .22089 Mdot
.38889 .44929 Mdot
.4625 .19614 Mdot
.55165 .49849 Mdot
.79429 .37994 Mdot
.40436 .47854 Mdot
.69632 .21536 Mdot
.54987 .19683 Mdot
.79613 .28528 Mdot
.28409 .43065 Mdot
.35371 .32991 Mdot
.24562 .33652 Mdot
.86773 .34557 Mdot
.5015 .47682 Mdot
.75109 .43405 Mdot
.29845 .22585 Mdot
.46453 .19666 Mdot
.58092 .50005 Mdot
.40303 .47766 Mdot
.66282 .20584 Mdot
.80476 .29969 Mdot
.28293 .44969 Mdot
.29184 .28453 Mdot
.81778 .2545 Mdot
.62752 .46789 Mdot
.16717 .42742 Mdot
.64496 .2272 Mdot
.73297 .11059 Mdot
.28859 .4061 Mdot
.75523 .60332 Mdot
.79816 .37838 Mdot
.38627 .22355 Mdot
.47192 .47875 Mdot
.76182 .27873 Mdot
.30166 .30623 Mdot
.63607 .45418 Mdot
.63274 .23556 Mdot
.30193 .39031 Mdot
.76229 .39604 Mdot
.46007 .22058 Mdot
.39975 .45081 Mdot
.78299 .32566 Mdot
.34896 .25648 Mdot
.51368 .46201 Mdot
.72357 .2839 Mdot
.32346 .30527 Mdot
.60434 .44982 Mdot
.66314 .25621 Mdot
.31576 .35319 Mdot
.67034 .42712 Mdot
.59227 .24114 Mdot
.33721 .37323 Mdot
.69428 .41504 Mdot
.56579 .23639 Mdot
.33598 .38899 Mdot
.71652 .40153 Mdot
.52701 .24557 Mdot
.36465 .40283 Mdot
.71259 .384 Mdot
.50654 .23966 Mdot
.38217 .39502 Mdot
.68959 .38959 Mdot
.54987 .24764 Mdot
.36226 .37386 Mdot
.66609 .40932 Mdot
.5863 .25994 Mdot
.34511 .36531 Mdot
.65796 .41294 Mdot
.58824 .25768 Mdot
.36162 .35569 Mdot
.6254 .41775 Mdot
.61904 .26965 Mdot
.37809 .3257 Mdot
.56939 .42322 Mdot
.66007 .29524 Mdot
.38125 .30521 Mdot
.5259 .42339 Mdot
.68385 .31449 Mdot
.40359 .29263 Mdot
.48942 .42278 Mdot
.68128 .33632 Mdot
.46684 .26964 Mdot
.43794 .3869 Mdot
.64163 .37737 Mdot
.55097 .28208 Mdot
.40854 .3489 Mdot
.5837 .40166 Mdot
.62506 .30519 Mdot
.42068 .30742 Mdot
.51042 .403 Mdot
.64265 .33954 Mdot
.48453 .28692 Mdot
.44748 .38356 Mdot
.63179 .37346 Mdot
.54672 .28965 Mdot
.41964 .34949 Mdot
.58194 .39921 Mdot
.61721 .29992 Mdot
.42922 .30946 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.938},
  ImageMargins->{{35, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/A000`40O003h00OW7oo00<007ooOol0
PGoo002LOol00`00Oomoo`21Ool009aoo`03001oogoo085oo`00W7oo00<007ooOol0PGoo002IOol0
0`00Oomoo`020022Ool009Uoo`04001oogoo0023Ool009]oo`8008=oo`00Vgoo0P00Pgoo002LOol0
0`00Oomoo`21Ool009aoo`80089oo`00W7oo00<007ooOol02Goo00<007ooOol0MGoo002LOol00`00
Oomoo`09Ool00`00Oomoo`1eOol009aoo`03001oogoo085oo`00W7oo00<007ooOol0PGoo002LOol2
0022Ool009aoo`03001oogoo085oo`00W7oo00<007ooOol0PGoo001aOol20004Ool20004Ool20004
Ool20004Ool20005Ool00`00Oomoo`02Ool20005Ool00`00Oomoo`21Ool0071oo`04001oogoo0008
Ool01000Oomoo`000Woo00@007ooOol0009oo`04001oogoo0004Ool01@00Oomoogoo00000Woo00<0
07ooOol00Woo00<007ooOol0PGoo001`Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo
0002Ool01000Oomoo`0017oo00<007ooOol017oo00<007ooOol00Woo0`00PGoo001ZOol40002Ool0
1000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002Ool01000Oomoo`001Goo00@007ooOomo
o`8000Eoo`03001oogoo085oo`00L7oo00@007ooOol000Qoo`04001oogoo0002Ool01000Oomoo`00
0Woo00@007ooOol0009oo`04001oogoo0003Ool00`00Oomoo`04Ool00`00Oomoo`21Ool0075oo`80
00Yoo`8000Aoo`8000Aoo`8000=oo`@000=oo`<000Aoo`03001oogoo085oo`00W7oo00<007ooOol0
PGoo002LOol20022Ool009aoo`03001oogoo085oo`00W7oo00<007ooOol0PGoo002LOol00`00Oomo
o`21Ool009aoo`03001oogoo085oo`00W7oo0P00PWoo002LOol00`00Oomoo`21Ool009aoo`03001o
ogoo03Eoo`03001oogoo04Uoo`00W7oo00<007ooOol0=Goo00<007ooOol0BGoo002LOol00`00Oomo
o`21Ool009aoo`8003Ioo`03001oogoo04Uoo`00W7oo00<007ooOol0=Goo00<007ooOol0BGoo002L
Ool00`00Oomoo`21Ool009aoo`03001oogoo085oo`00W7oo00<007ooOol0PGoo002LOol20022Ool0
09aoo`03001oogoo085oo`00W7oo00<007ooOol0PGoo001gOol20004Ool20004Ool20004Ool20004
Ool20004Ool20005Ool00`00Oomoo`21Ool007Ioo`04001oogoo0008Ool01000Oomoo`000Woo00@0
07ooOol0009oo`04001oogoo0002Ool01000Oomoo`0017oo00<007ooOol0PGoo001fOol01000Oomo
o`0027oo00@007ooOol0009oo`04001oogoo0002Ool01000Oomoo`001Goo00<007ooOol00Woo0`00
PGoo001ZOol00`00Oomoo`03Ool40002Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo
0002Ool01000Oomoo`000goo0P001Goo00<007ooOol0PGoo001ZOol00`00Oomoo`09Ool01000Oomo
o`0027oo00@007ooOol0009oo`04001oogoo0002Ool01000Oomoo`000goo00<007ooOol017oo00<0
07ooOol0PGoo001gOol2000:Ool20004Ool20004Ool20004Ool30004Ool00`00Oomoo`21Ool007Yo
o`03001oogoo01moo`03001oogoo02Qoo`03001oogoo01=oo`03001oogoo041oo`00NWoo00<007oo
Ool00Woo00<007ooOol05goo00<007ooOol00P00:Goo00<007ooOol04goo00<007ooOol0@7oo001i
Ool00`00Oomoo`03Ool00`00Oomoo`0GOol01000Oomoo`00Pgoo001OOol00`00Oomoo`0GOol00`00
Oomoo`05Ool00`00Oomoo`09Ool00`00Oomoo`0<Ool00`00Oomoo`0;Ool00`00Oomoo`0?Ool30000
0goo001oo`1NOol005Moo`03001oogoo00Eoo`03001oogoo01moo`03001oogoo00Uoo`03001oogoo
00aoo`03001oogoo00]oo`03001oogoo00moo`L005eoo`00Egoo00<007ooOol047oo00<007ooOol0
6Woo0P001Woo00<007ooOol02Woo00D007ooOomoo`00009oo`03001oogoo01Moo`H005eoo`00H7oo
00<007ooOol01goo00<007ooOol06Goo1@0017oo00<007ooOol02Woo0P000Woo0P0000=oo`00Ool0
2Woo00<007ooOol037oo00@007oo000000ioo`03001oogoo04eoo`00H7oo00<007ooOol03goo00<0
07ooOol04Goo00<007oo00000P004Goo00<007ooOol00Woo00<007ooOol02goo00<007ooOol03goo
00<007ooOol037oo0P000Woo00<007ooOol0BGoo001bOol00`00Oomoo`05Ool00`00Oomoo`07Ool0
1@00Oomoogoo00004goo00<007ooOol08Woo00<007ooOol03Goo00@007ooOol004]oo`00Igoo00<0
07ooOol037oo00D007ooOomoo`0000Uoo`03001oogoo01Eoo`03001oogoo029oo`8000Ioo`03001o
ogoo05Aoo`00Igoo00@007ooOol000]oo`03001oogoo02=oo`03001oogoo029oo`8000Ioo`03001o
ogoo00Moo`03001oogoo04Yoo`00Fgoo00<007ooOol037oo00<007ooOol0;goo0P0097oo00<007oo
Ool01Goo00<007ooOol01Woo00<007ooOol0BWoo001KOol00`00Oomoo`09Ool00`00Oomoo`0bOol0
0`00Oomoo`0[Ool2000=Ool00`00Oomoo`14Ool005]oo`03001oo`0000Ioo`04001oogoo000QOol0
0`00Oomoo`0@Ool00`00Oomoo`0/Ool00`00Oomoo`06Ool00`00Oomoo`02Ool00`00Oomoo`14Ool0
05aoo`8000Ioo`03001oogoo00eoo`03001oogoo019oo`03001oogoo011oo`03001oogoo039oo`04
001oogoo0004Ool00`00Oomoo`14Ool005aoo`03001oogoo01Eoo`03001oogoo02Eoo`03001oogoo
01eoo`05001oogooOol0000@Ool01@00Oomoogoo000047oo00<007ooOol05Goo00<007ooOol07goo
002LOol2000NOol01@00Oomoogoo000057oo00<007ooOol01Woo00<007ooOol00Woo00@007ooOol0
00Eoo`03001oogoo00moo`03001oogoo01moo`00QWoo00<007ooOol04goo00<007ooOol01goo00<0
07ooOol03goo00<007ooOol08goo00H007ooOol007oo0008Ool00`00Oomoo`0aOol005Aoo`03001o
ogoo00Ioo`03001oogoo02Ioo`03001oogoo00aoo`03001oogoo00Aoo`03001oogoo00Moo`03001o
ogoo00moo`03001oogoo02Ioo`03001oogoo03aoo`00E7oo00<007ooOol01Woo00<007ooOol0=Goo
00<007ooOol017oo00<007ooOol03Woo00<007ooOol0>Goo00<007ooOol0=7oo001aOol20004Ool2
0004Ool20004Ool20004Ool20003Ool40003Ool20004Ool20004Ool00`00Oomoo`09Ool00`00Oomo
o`0iOol00`00Oomoo`0:Ool00`00Oomoo`0WOol0071oo`04001oogoo0008Ool01000Oomoo`000Woo
00@007ooOol0009oo`04001oogoo0002Ool00`00Oomoo`03Ool01000Oomoo`000goo0P0017oo00<0
07ooOol0AGoo00<007ooOol02Woo00<007ooOol09goo001`Ool01000Oomoo`0027oo00@007ooOol0
009oo`04001oogoo0002Ool01000Oomoo`000goo00<007ooOol01Goo00<007ooOol00Woo0`00@goo
00<007ooOol00Woo00<007ooOol00Woo00H007oo000007oo000^Ool006Yoo`@0009oo`04001oogoo
0008Ool01000Oomoo`000Woo00@007ooOol0009oo`04001oogoo0004Ool00`00Oomoo`02Ool20005
Ool00`00Oomoo`0=Ool00`00Oomoo`0BOol00`00Oomoo`0NOol00`00Oomoo`02Ool00`00Oomoo`02
Ool01P00Ool00000Ool0009oo`03001oogoo02Uoo`00JWoo00<007ooOol00goo00@007ooOol000Qo
o`04001oogoo0002Ool01000Oomoo`000Woo00@007ooOol0009oo`04001oogoo0003Ool00`00Oomo
o`04Ool00`00Oomoo`0=Ool00`00Oomoo`0BOol00`00Oomoo`0QOol00`00Oomoo`08Ool300000goo
001oo`0ZOol0075oo`8000Yoo`8000Aoo`8000Aoo`8000Aoo`8000Aoo`<000Aoo`03001oogoo00eo
o`03001oogoo03Ioo`03001oogoo00Aoo`04001oogooOol300000goo001oo`0ZOol009aoo`03001o
ogoo04eoo`03001oogoo009oo`800003Ool0000000Qoo`03001oogoo01moo`00C7oo00<007ooOol0
37oo00<007ooOol0;Goo00<007ooOol03Woo0P005goo00<007ooOol0;7oo00<007oo00002Woo0P00
0Woo00<007ooOol01Woo00<007ooOol07goo001<Ool00`00Oomoo`0<Ool00`00Oomoo`0]Ool00`00
Oomoo`0>Ool00`00Oomoo`0FOol00`00Oomoo`0/Ool00`00Ool0000=Ool2000ZOol009aoo`03001o
ogoo03eoo`03001oogoo00Moo`03001oogoo00]oo`80025oo`03001oogoo00Ioo`00BWoo00<007oo
Ool0Cgoo00<007ooOol00goo00<007ooOol0;Goo00<007ooOol01goo00<007ooOol01goo0P0047oo
00<007oo000077oo00<007ooOol01Woo0019Ool2000?Ool00`00Oomoo`0bOol00`00Oomoo`0:Ool0
0`00Oomoo`03Ool00`00Oomoo`0]Ool00`00Oomoo`0AOol2000@Ool3000UOol004Uoo`03001oogoo
00ioo`03001oogoo039oo`03001oogoo00Yoo`8000=oo`03001oogoo049oo`03001oogoo00Qoo`03
001oogoo009oo`04001oogoo000VOol004moo`03001oogoo02Moo`03001oogoo021oo`03001oogoo
009oo`03001oogoo04eoo`03001oogoo009oo`04001oogoo000VOol004moo`03001oogoo02Moo`03
001oogoo021oo`03001oogoo025oo`03001oogoo05eoo`00W7oo00<007ooOol05Goo00<007ooOol0
2Goo00<007ooOol09Goo00<007ooOol02goo00<007ooOol09goo0008Ool20004Ool20004Ool20003
Ool4000;Ool20004Ool20004Ool20003Ool50002Ool2000<Ool20004Ool20004Ool20003Ool5000;
Ool20002Ool01000Ool0000017oo0P0017oo0P0017oo0P004goo00<007ooOol057oo0P0000Aoo`00
Oomoo`8000Aoo`8000Aoo`8000Aoo`8000aoo`8000Aoo`8000Aoo`800003Ool007oo00D000Moo`04
001oogooOol20004Ool20004Ool20003Ool50002Ool2000<Ool000Moo`04001oogoo0008Ool01000
Oomoo`000Woo00<007ooOol02goo00@007ooOol000Qoo`04001oogoo0004Ool01@00Oomoogoo0000
0Woo00<007ooOol027oo00@007ooOol000Qoo`03001oogoo008000=oo`03001oo`0000Yoo`06001o
ogoo001oo`001Woo00<007ooOol00P0000Eoo`00Oomoo`00009oo`04001oogoo000BOol2000DOol0
0`00Oomoo`020007Ool01000Oomoo`000Woo00@007ooOol0009oo`04001oogoo000:Ool01000Oomo
o`0027oo00@007ooOol000Aoo`03001oo`0000Yoo`04001oogoo0008Ool01000Oomoo`0017oo00D0
07ooOomoo`00009oo`03001oogoo00Uoo`001goo00@007ooOol000Qoo`04001oogoo0003Ool00`00
Oomoo`0:Ool01000Oomoo`0027oo00@007ooOol000Aoo`03001oogoo00Aoo`03001oogoo00Qoo`04
001oogoo0008Ool00`00Oomoo`020003Ool00`00Oomoo`0:Ool01000Oomoo`0027oo00<007ooOol0
0P0000Eoo`00Oomoo`0000Eoo`03001oogoo011oo`03001oogoo01=oo`04001oogoo0008Ool01000
Oomoo`000Woo00@007ooOol000Eoo`03001oogoo00Qoo`04001oogoo0008Ool01000Oomoo`0017oo
00<007oo00002Woo00@007ooOol000Qoo`04001oogoo0004Ool00`00Oomoo`04Ool00`00Oomoo`09
Ool00003Ool000000080009oo`04001oogoo0008Ool01000Oomoo`0017oo00<007ooOol00goo1000
0Woo00@007ooOol000Qoo`04001oogoo0004Ool00`00Oomoo`02Ool20005Ool40002Ool01000Oomo
o`0027oo00@007ooOol000Aoo`03001oogoo00Aoo`@0009oo`04001oogoo0008Ool01000Oomoo`00
0Woo00@007ooOol000=oo`8001=oo`03001oogoo01=oo`04001oogoo0008Ool01000Oomoo`000Woo
00@007ooOol000=oo`8000]oo`04001oogoo0008Ool01000Oomoo`0017oo00<007ooOol02Woo00@0
07ooOol000Qoo`04001oogoo0004Ool00`00Oomoo`02Ool2000<Ool000Moo`04001oogoo0008Ool0
1000Oomoo`000Woo00@007ooOol000Yoo`04001oogoo0008Ool01000Oomoo`0017oo00<007ooOol0
0Woo00<007ooOol02Goo0P000Woo00<007ooOol01Woo00@007ooOol000Aoo`03001oogoo00Yoo`04
001oogoo0008Ool01000Oomoo`000Woo00@007ooOol000=oo`03001oogoo019oo`03001oogoo01=o
o`04001oogoo0008Ool01000Oomoo`000Woo00@007ooOol000=oo`03001oogoo00Yoo`04001oogoo
0008Ool01000Oomoo`0017oo00<007ooOol02Woo00@007ooOol000Qoo`04001oogoo0004Ool00`00
Oomoo`02Ool00`00Oomoo`0;Ool000Qoo`8000Yoo`8000Aoo`8000aoo`8000Yoo`8000Aoo`8000Ao
o`<000Uoo`03001oo`00008000Uoo`8000Aoo`8000eoo`8000Yoo`8000Aoo`8000Aoo`<0019oo`03
001oogoo01Aoo`8000Yoo`8000Aoo`8000Aoo`<000]oo`8000Yoo`8000Aoo`8000eoo`8000Yoo`80
00Aoo`8000Aoo`<000]oo`00Agoo00<007ooOol017oo00<007ooOol08Goo00<007ooOol09goo0P00
A7oo00<007ooOol07Woo0P006goo0017Ool00`00Oomoo`04Ool00`00Oomoo`0JOol00`00Oomoo`04
Ool00`00Oomoo`0WOol00`00Oomoo`13Ool00`00Oomoo`0=Ool00`00Oomoo`0>Ool2000KOol004io
o`03001oogoo01Yoo`03001oogoo02ioo`03001oogoo05=oo`03001oogoo02]oo`00CGoo0P00CGoo
00<007ooOol09goo00<007ooOol0Egoo001=Ool2001=Ool00`00Oomoo`0LOol00`00Oomoo`08Ool0
0`00Oomoo`1GOol000Yoool001L000003goo00<007ooOol017oo00<007ooOol017oo00<007ooOol0
17oo00<007ooOol017oo00<007ooOol017oo00<007ooOol017oo00<007ooOol017oo00<007ooOol0
17oo00<007ooOol00goo0P001Woo00<007ooOol01Goo00<007ooOol017oo00<007ooOol017oo00<0
07ooOol017oo00<007ooOol017oo0P001Goo00<007ooOol017oo00<007ooOol017oo00<007ooOol0
17oo00<007ooOol017oo00<007ooOol017oo00<007ooOol01Goo00<007ooOol017oo00<007ooOol0
17oo00<007ooOol017oo00<007ooOol017oo00<007ooOol017oo00<007ooOol017oo00<007ooOol0
17oo00<007ooOol017oo00<007ooOol017oo00<007ooOol01Goo00<007ooOol017oo00<007ooOol0
17oo00<007ooOol017oo00<007ooOol017oo00<007ooOol017oo00<007ooOol017oo00<007ooOol0
0Goo000?Ool00`00Oomoo`0POol00`00Oomoo`0POol00`00Oomoo`0QOol20002Ool00`00Oomoo`0L
Ool00`00Oomoo`0QOol00`00Oomoo`0POol00`00Oomoo`0QOol00`00Oomoo`0FOol004ioo`03001o
ogoo011oo`03001oogoo00Uoo`03001oogoo00eoo`03001oogoo01aoo`03001oogoo085oo`00CWoo
00<007ooOol047oo00<007ooOol02Goo00<007ooOol0;7oo00<007ooOol0Egoo00<007ooOol09goo
0015Ool00`00Oomoo`04Ool01000Oomoo`00C7oo0P00F7oo00<007ooOol00Woo00D007ooOomoo`00
021oo`00AGoo00<007ooOol017oo00@007ooOol001Uoo`03001oogoo031oo`03001oogoo05aoo`05
001oogooOol00004Ool00`00Oomoo`0IOol004Yoo`03001oogoo009oo`03001oogoo01Moo`03001o
ogoo031oo`03001oogoo051oo`03001oogoo00Yoo`03001oogoo00Eoo`03001oogoo01Uoo`00BWoo
00<007ooOol00Woo00<007ooOol05Goo00<007ooOol017oo00<007ooOol0:goo00<007ooOol06Goo
00<007ooOol0=7oo00<007ooOol01Woo00@007ooOomoo`80029oo`00AWoo00<007ooOol07Woo00<0
07ooOol017oo00<007ooOol0:goo00<007ooOol06Goo00@007ooOol003aoo`<0009oo`03001oogoo
021oo`00AWoo00<007ooOol05Woo00<007ooOol0>Woo0P007Goo00<007ooOol09goo0P004Woo0P00
9Goo0017Ool00`00Oomoo`06Ool00`00Oomoo`0<Ool00`00Oomoo`0SOol00`00Oomoo`0DOol00`00
Oomoo`0_Ool00`00Oomoo`0DOol2000COol00`00Oomoo`0SOol004Moo`03001oogoo00=oo`04001o
ogoo000bOol00`00Ool0000FOol00`00Oomoo`0_Ool00`00Oomoo`1?Ool004eoo`04001oogoo000<
Ool00`00Oomoo`06Ool00`00Oomoo`0JOol00`00Oomoo`0FOol00`00Oomoo`0YOol00`00Oomoo`0X
Ool01000Oomoo`00:Goo0014Ool00`00Oomoo`06Ool01000Oomoo`0037oo00<007ooOol01Woo00<0
07ooOol02Woo00<007ooOol09Woo00<007ooOol0:Goo00<007ooOol04Goo00<007ooOol04Woo00<0
07oo00000Woo00<007ooOol09goo0014Ool00`00Oomoo`09Ool00`00Ool0000POol00`00Oomoo`0V
Ool2000<Ool00`00Oomoo`0_Ool00`00Oomoo`0BOol00`00Oomoo`0/Ool0051oo`03001oo`0001]o
o`03001oogoo02Ioo`03001oogoo009oo`03001oogoo00]oo`8002Aoo`03001oogoo01Yoo`05001o
ogooOol00002Ool00`00Oomoo`0YOol004ioo`03001oogoo00Qoo`03001oogoo019oo`03001oogoo
02Ioo`03001oogoo009oo`03001oogoo00aoo`03001oogoo029oo`03001oogoo01Yoo`03001oogoo
00Aoo`03001oogoo02Uoo`00?goo00<007ooOol037oo00<007ooOol027oo00<007ooOol0@7oo00<0
07ooOol08goo00<007ooOol0:Goo00<007ooOol0;goo000aOol00`00Oomoo`08Ool01000Oomoo`00
47oo00<007ooOol0BGoo00<007ooOol087oo00@007ooOol002Uoo`<0035oo`00<Goo00<007ooOol0
27oo00<007ooOol04Goo00<007ooOol0BGoo0P0067oo00<007ooOol01Woo00<007ooOol01goo00<0
07ooOol087oo0P00<Woo0017Ool00`00Oomoo`09Ool20017Ool00`00Oomoo`0GOol00`00Oomoo`0@
Ool00`00Oomoo`1DOol004Moo`03001oogoo00Uoo`8003aoo`03001oogoo00Moo`8000Yoo`03001o
ogoo07Ioo`00>7oo00<007ooOol0=Woo0P0017oo0P0017oo0P0017oo0P0017oo0P000goo10000goo
0P0017oo0P002Woo00<007ooOol06Goo00<007ooOol05goo0P001Goo00<007ooOol0>Goo000hOol0
0`00Oomoo`0MOol00`00Oomoo`0EOol01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002
Ool01000Oomoo`000Woo00<007ooOol00goo00@007ooOol000Aoo`03001oogoo02Aoo`03001oogoo
01Moo`8000=oo`03001oo`0003]oo`00?goo00<007ooOol02Woo00<007ooOol02Goo00<007ooOol0
5Goo00@007ooOol000Qoo`04001oogoo0002Ool01000Oomoo`000Woo00@007ooOol000=oo`03001o
ogoo00Eoo`03001oogoo009oo`<003Yoo`03001oogoo009oo`05001oogooOol0000mOol003moo`03
001oogoo00Yoo`03001oogoo00=oo`05001oogooOol0000IOol01000Oomoo`0027oo00@007ooOol0
009oo`04001oogoo0002Ool01000Oomoo`0017oo00<007ooOol00Woo0P001Goo00<007ooOol0>Woo
00<007ooOol00Woo00D007ooOomoo`0003eoo`00>Woo00<007ooOol02Woo00<007ooOol027oo00D0
07ooOomoo`0001Uoo`04001oogoo0008Ool01000Oomoo`000Woo00@007ooOol0009oo`04001oogoo
0002Ool01000Oomoo`000goo00<007ooOol017oo00<007ooOol0>Woo00<007ooOol01Goo00<007oo
Ool0?7oo000aOol00`00Oomoo`06Ool01000Oomoo`002Goo00<007ooOol027oo00<007ooOol04goo
00<007ooOol01Woo0P002Woo0P0017oo0P0017oo0P0017oo0P0017oo0`0017oo00<007ooOol0=Goo
00<007ooOol00goo00<007ooOol017oo00<007ooOol0?7oo000aOol00`00Oomoo`09Ool00`00Oomo
o`0BOol00`00Oomoo`03Ool00`00Oomoo`02Ool00`00Oomoo`08Ool00`00Oomoo`0:Ool00`00Oomo
o`0TOol00`00Oomoo`0BOol00`00Oomoo`0POol00`00Oomoo`03Ool00`00Oomoo`13Ool0059oo`07
001oogooOol007oo000017oo00<007ooOol05Goo00@007ooOol002=oo`8001=oo`03001oogoo06ao
o`00EWoo00<007oo00007goo00<007ooOol08Goo00<007ooOol06Woo00<007ooOol0I7oo001HOol0
0`00Oomoo`11Ool00`00Oomoo`0JOol00`00Oomoo`1TOol003Eoo`03001oogoo02Yoo`03001oogoo
039oo`03001oogoo009oo`03001oogoo02Uoo`03001oogoo05Eoo`00=Goo00<007ooOol08Goo00<0
07ooOol01Woo00<007ooOol0<Woo00<007ooOol00Woo00<007ooOol067oo00<007ooOol03Woo00<0
07ooOol02Woo00<007ooOol0B7oo001IOol00`00Oomoo`10Ool00`00Oomoo`0HOol00`00Oomoo`0E
Ool00`00Oomoo`03Ool00`00Oomoo`18Ool006Moo`05001oogooOol0000ZOol00`00Oomoo`03Ool2
000EOol00`00Oomoo`0IOol00`00Ool0001>Ool005ioo`03001oogoo00Ioo`05001oogooOol00007
Ool00`00Oomoo`03Ool00`00Oomoo`0@Ool00`00Oomoo`05Ool00`00Ool00005Ool00`00Oomoo`0D
Ool00`00Oomoo`0KOol00`00Oomoo`1<Ool005ioo`03001oogoo019oo`8000Aoo`03001oogoo011o
o`03001oogoo00Eoo`03001oogoo00Eoo`03001oogoo085oo`00M7oo00<007ooOol017oo00@007oo
Ool001eoo`03001oogoo01moo`03001oogoo05moo`00L7oo00<007ooOol027oo00@007ooOol000Uo
o`03001oogoo009oo`03001oogoo00aoo`03001oogoo01moo`03001oogoo05moo`00L7oo00<007oo
Ool00Woo00<007ooOol00goo00@007ooOol000Uoo`03001oogoo009oo`03001oogoo00=oo`03001o
ogoo00Ioo`80089oo`00HWoo00<007ooOol03goo0P0027oo00<007ooOol047oo00<007oo00001Woo
00<007oo00004Goo00<007ooOol0Kgoo001ROol00`00Oomoo`0?Ool00`00Oomoo`0JOol01000Oomo
o`001Goo00<007oo000017oo0P001goo00D007ooOomoo`00075oo`00Hgoo00<007ooOol06Goo00<0
07ooOol04Woo00@007ooOol000Aoo`03001oogoo009oo`8000Moo`03001oogoo07=oo`00Hgoo00<0
07ooOol06Goo00<007ooOol03Goo00<007ooOol01Goo00<007ooOol00Woo00<007ooOol02goo00<0
07ooOol0Lgoo001VOol00`00Oomoo`0LOol00`00Oomoo`07Ool00`00Oomoo`0:Ool20008Ool01@00
Oomoogoo0000MGoo001UOol2000NOol00`00Oomoo`0DOol00`00Oomoo`05Ool00`00Ool00003Ool0
0`00Oomoo`1cOol006Eoo`8003Eoo`03001oogoo00Eoo`03001oogoo07Uoo`00IGoo10003Woo0P00
17oo0P0017oo0P0017oo0P0017oo0P0017oo0P001Goo00<007ooOol0PGoo000@Ool00`00Oomoo`1B
Ool4000=Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002Ool01000Oomoo`000Woo
00@007ooOol0009oo`03001oo`0008=oo`0047oo00<007ooOol0Dgoo0`003Goo00@007ooOol000Qo
o`04001oogoo0002Ool01000Oomoo`000Woo00@007ooOol000Eoo`05001oogoo001oo`030021Ool0
06Ioo`03001oogoo00eoo`04001oogoo0008Ool01000Oomoo`000Woo00@007ooOol0009oo`04001o
ogoo0003Ool20005Ool00`00Ool00021Ool006Yoo`03001oogoo00Uoo`04001oogoo0008Ool01000
Oomoo`000Woo00@007ooOol0009oo`04001oogoo0003Ool00`00Oomoo`04Ool00`00Ool00021Ool0
06Yoo`03001oogoo00Yoo`8000Yoo`8000Aoo`8000Aoo`8000Aoo`<000Aoo`03001oogoo085oo`00
G7oo00<007ooOol0?Goo00<007ooOol0PGoo001LOol00`00Oomoo`0mOol20022Ool009aoo`03001o
ogoo085oo`00W7oo00<007ooOol0PGoo002LOol00`00Oomoo`21Ool009aoo`03001oogoo085oo`00
W7oo0P00PWoo0025Ool00`00Oomoo`0DOol00`00Oomoo`21Ool008Eoo`03001oogoo01Aoo`03001o
ogoo085oo`00W7oo00<007ooOol0PGoo002LOol00`00Oomoo`21Ool009aoo`80089oo`00W7oo00<0
07ooOol0PGoo002LOol00`00Oomoo`21Ool009aoo`03001oogoo085oo`00W7oo00<007ooOol0PGoo
002LOol20022Ool009aoo`03001oogoo03]oo`03001oogoo04=oo`00W7oo00<007ooOol0>goo00<0
07ooOol0@goo001aOol20004Ool20004Ool20004Ool20004Ool20005Ool00`00Oomoo`02Ool20005
Ool00`00Oomoo`21Ool0071oo`04001oogoo0008Ool01000Oomoo`000Woo00@007ooOol0009oo`04
001oogoo0004Ool01@00Oomoogoo00000Woo00<007ooOol00Woo00<007ooOol0PGoo001`Ool01000
Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002Ool01000Oomoo`0017oo00<007ooOol017oo
00<007ooOol00Woo0`00PGoo001`Ool01000Oomoo`0027oo00@007ooOol0009oo`04001oogoo0002
Ool01000Oomoo`001Goo00@007ooOomoo`8008Uoo`00L7oo00@007ooOol000Qoo`04001oogoo0002
Ool01000Oomoo`000Woo00@007ooOol0009oo`04001oogoo0003Ool00`00Oomoo`28Ool0075oo`80
00Yoo`8000Aoo`8000Aoo`8000=oo`@000=oo`<008Qoo`00ogoo8Goo003oOolQOol00001\
\>"],
  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-0.0221145, -0.000938766, \
0.00014095, 9.8407*^-06}}],

Cell[BoxData[
    TagBox[
      RowBox[{"\[SkeletonIndicator]", "Graphics", "\[SkeletonIndicator]"}],
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Non-existent columns return ",
  StyleBox["Null", "Input"]
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsColumn", "[", 
      RowBox[{"qpmfs", ",", "\"\<PXN\>\""}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"mfsColumn", "::", "\<\"notfound\"\>"}], 
      RowBox[{
      ":", " "}], "\<\"Column \\!\\(\\\"PXN\\\"\\) not found.\"\>"}]], \
"Message"]
}, Open  ]],

Cell[TextData[{
  "Finally, calling ",
  StyleBox["mfsColumn", "Input"],
  " with only one argument returns a list containing all the columns (the \
entire \"body\" of the original data file)."
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Short", "[", 
      RowBox[{
        RowBox[{"mfsColumn", "[", "qpmfs", "]"}], ",", "10"}], "]"}]], "Input",\

  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[
      RowBox[{"{", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
            "0", ",", "1", ",", "0.`", ",", "0.0005`", ",", "0.`", ",", "0.`",
               ",", "0.`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{
            "0", ",", "2", ",", "0.`", ",", "0.0005`", ",", "0.`", ",", "0.`",
               ",", "0.`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{
            "0", ",", "3", ",", "0.`", ",", "0.0005`", ",", "0.`", ",", "0.`",
               ",", "0.`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{
            "0", ",", "4", ",", "0.`", ",", "0.0005`", ",", "0.`", ",", "0.`",
               ",", "0.`", ",", "0.`"}], "}"}], ",", 
          RowBox[{"\[LeftSkeleton]", "373", "\[RightSkeleton]"}], ",", 
          RowBox[{"{", 
            RowBox[{
            "106", ",", "3", ",", "0.0020450299999999998`", ",", 
              "0.00015557899999999998`", ",", "0.00028735100000000003`", ",", 
              "0.0000320125`", ",", 
              RowBox[{"-", "0.00656549`"}], ",", 
              RowBox[{"-", "0.0005080050000000001`"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"107", ",", "3", ",", "0.00341965`", ",", 
              RowBox[{"-", "0.000114564`"}], ",", "0.0007300130000000001`", 
              ",", "0.0000178347`", ",", 
              RowBox[{"-", "0.0025276300000000003`"}], ",", 
              RowBox[{"-", "0.00143335`"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{"108", ",", "3", ",", 
              RowBox[{"-", "0.0039068`"}], ",", 
              RowBox[{"-", "0.0000886172`"}], ",", "0.000805955`", ",", 
              RowBox[{"-", "0.000021440400000000002`"}], ",", "0.00293916`", 
              ",", 
              RowBox[{"-", "0.0015801699999999999`"}]}], "}"}]}], "}"}],
      (Short[ #, 10]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "The dimensions of this show us that there were 380 \"lines\" containing \
the 8 items specified by ",
  StyleBox["mfsColumnNames", "Input"],
  StyleBox["[qpmfs] above.", "Input"]
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Dimensions", "[", 
      RowBox[{"mfsColumn", "[", "qpmfs", "]"}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"380", ",", "8"}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculations  using column  information from an mfs object", \
"Subsubsection",
  CellTags->"Examples section"],

Cell[TextData[{
  "Suppose that we would like to form the product of all the X and PX values \
in the ",
  StyleBox["mfs", "Input"],
  " object ",
  StyleBox["qpmfs", "Input"],
  "."
}], "Text"],

Cell[TextData[{
  "In the plotting example above, it was necessary to apply ",
  StyleBox["Transpose", "Input"],
  " to the result of ",
  Cell[BoxData[
      RowBox[{"mfsColumn", "[", 
        RowBox[{"qpmfs", ",", 
          RowBox[{"{", 
            RowBox[{"\"\<X\>\"", ",", "\"\<PX\>\""}], "}"}]}], "]"}]], 
    "Input"],
  " to transform the pair of long lists of X and PX values into a long list \
of pairs ",
  StyleBox["{X,PX} ", "Input"],
  "as required by",
  StyleBox[" ListPlot", "Input"],
  ".  Having done this, it is easy to form, say, the product of all the X and \
PX values by mapping an appropriate pure function over the list.  Here is one \
which forms the product of X and PX"
}], "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"xpxprod1", "=", 
        RowBox[{
          RowBox[{"(", 
            RowBox[{
              RowBox[{
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                " ", 
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "&"}], ")"}], "/@", "xpx"}]}], 
      ";"}]], "Input"],

Cell["Viewing the result in abbreviated form, ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Short", "[", 
      RowBox[{"xpxprod1", ",", "5"}], "]"}]], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"{", 
        RowBox[{
        "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
          ",", "0.`", ",", "0.`", ",", "0.`", ",", 
          RowBox[{"\[LeftSkeleton]", "363", "\[RightSkeleton]"}], ",", 
          "2.6256068901`*^-7", ",", 
          RowBox[{"-", "3.6112508993999993`*^-7"}], ",", 
          "3.4103437387500003`*^-7", ",", 
          RowBox[{"-", "9.5827476895`*^-8"}], ",", 
          RowBox[{"-", "8.6896005942`*^-8"}], ",", "3.181637223699999`*^-7", 
          ",", 
          RowBox[{"-", "3.917687826`*^-7"}], ",", "3.4620967696`*^-7"}], 
        "}"}],
      (Short[ #, 5]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "You may find it easier to do this in one step using ",
  StyleBox["MapThread", "Input"],
  "."
}], "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"xpxprod2", "=", 
        RowBox[{"MapThread", "[", 
          RowBox[{"Times", ",", 
            RowBox[{"mfsColumn", "[", 
              RowBox[{"qpmfs", ",", 
                RowBox[{"{", 
                  RowBox[{"\"\<X\>\"", ",", "\"\<PX\>\""}], "}"}]}], "]"}]}], 
          "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"xpxprod1", "\[Equal]", "xpxprod2"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]],

Cell["\<\
If this seems complicated, remember that we are using a simple \
example to illustrate general mechanisms.  The same result could be  achieved \
with\
\>", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"xpxprod3", "=", 
        RowBox[{
          RowBox[{"mfsColumn", "[", 
            RowBox[{"qpmfs", ",", "\"\<X\>\""}], "]"}], "  ", 
          RowBox[{"mfsColumn", "[", 
            RowBox[{"qpmfs", ",", "\"\<PX\>\""}], "]"}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"xpxprod3", "\[Equal]", "xpxprod1"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]],

Cell[TextData[{
  "Even more simply,  in the ",
  ButtonBox["approach",
    ButtonData:>"mfsInterpret",
    ButtonStyle->"Hyperlink"],
  " using ",
  StyleBox["mfsInterpret", "Input"],
  ", the same result could be achieved with "
}], "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"xpxprod4", "=", " ", 
        RowBox[{"X", " ", "PX"}]}], ";"}]], "Input"],

Cell["which is again equivalent", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"xpxprod4", "\[Equal]", "xpxprod1"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Selection  within  ",
  StyleBox["m", "Input"],
  StyleBox["fs", "Input"],
  " objects"
}], "Subsection",
  CellTags->"Examples section"],

Cell[TextData[{
  "Many of the tables saved by MAD take the form of a list of machine \
elements together with the values of various optical functions (e.g., the \
OPTICS, TWISS3, ENVELOPE tables).   Although MAD itself provides a selection \
mechanism for limiting these tables to certain classes of elements, it is \
often convenient to select further after the optics calculations have been \
done.  You might want to simply tabulate the functions at some known subset \
of the elements originally chosen.  Or, more interestingly, you might want to \
select elements according to the ",
  StyleBox["values of the optical functions",
    FontSlant->"Italic"],
  ".   For example, elements with large \[Beta] functions might be potential  \
aperture limits."
}], "Text",
  CellTags->"Examples section"],

Cell["\<\
In the following we provide a general selection mechanism and some \
simpler ones for common cases.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell["An OPTICS table example", "Subsubsection",
  CellTags->"Examples section"],

Cell[TextData[{
  "Create an ",
  StyleBox["mfs", "Input"],
  " data object from an OPTICS table containing values at the IPs and pickups \
in LEP:"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"opticsfile", "  ", "=", " ", 
      RowBox[{"ToFileName", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"AfsHomeDirectory", "[", "\"\<jowett\>\"", "]"}], ",", 
              "\"\<public\>\"", ",", "\"\<math\>\"", ",", "\"\<Madtomma\>\"", 
              ",", "\"\<Mfs\>\"", ",", "\"\<Examples\>\""}], "}"}], ",", 
          "\"\<OPTICSdp0000.tfs\>\""}], "]"}]}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"P:\\\\cern.ch\\\\user\\\\j\\\\jowett\\\\public\\\\math\\\\\
Madtomma\\\\Mfs\\\\Examples\\\\OPTICSdp0000.tfs\"\>"], "Output"]
}, Open  ]],

Cell[BoxData[
    RowBox[{
      RowBox[{
        RowBox[{"OPTICS", "[", "0", "]"}], "=", 
        RowBox[{"tfsRead", "[", 
          RowBox[{"opticsfile", ",", 
            RowBox[{"mfsVerbose", "->", "False"}]}], "]"}]}], ";"}]], "Input",\

  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsColumnNames", "[", 
      RowBox[{"OPTICS", "[", "0", "]"}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"NAME\"\>", ",", "\<\"BETX\"\>", ",", "\<\"DX\"\>", 
        ",", "\<\"BETY\"\>"}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["General Selection  Method", "Subsubsection",
  CellTags->"Examples section"],

Cell[TextData[{
  StyleBox["mfsSelect", "Input"],
  " is a very general selection function modelled on the standard ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " function ",
  StyleBox["Select ", "Input"],
  "[",
  ButtonBox["1",
    ButtonData:>"Wolfram book",
    ButtonStyle->"Hyperlink"],
  "].  To understand how it works, you should first have some understanding \
of ",
  StyleBox["Select", "Input"],
  " and the notion of pure functions in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ".  If you do not, then I recommend that you skip this subsection and look \
at the simpler  selection functions (",
  StyleBox["mfsMember", "Input"],
  ", ",
  StyleBox["mfsRange", "Input"],
  ") below.  They cover many practical cases.  "
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "mfsSelect"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"mfsSelect[mfsdata,criterion] extracts rows satisfying \
criterion (function) from an mfsdata object.\"\>"], "Print"]
}, Open  ]],

Cell[TextData[{
  StyleBox["mfsSelect ", "Input"],
  "is usually used in conjunction with an auxiliary function ",
  StyleBox["mfsColumnValue", "Input"],
  StyleBox[".  ", "Input"],
  "This allows selection from a specified row. To see how it works, we can \
look at the row number 14 in the OPTICS table.  This function can be used to \
extract the value of the column ",
  StyleBox["\"NAME\"", "Input"],
  " for that row."
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"arow", "=", 
      RowBox[{
        RowBox[{"mfsColumn", "[", 
          RowBox[{"OPTICS", "[", "0", "]"}], "]"}], "\[LeftDoubleBracket]", 
        "14", "\[RightDoubleBracket]"}]}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"PU.QL15.R1\"\>", ",", "129.71`", ",", "0.987151`", ",", 
        "21.1482`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsColumnValue", "[", 
      RowBox[{
        RowBox[{"OPTICS", "[", "0", "]"}], ",", "arow", ",", "\"\<NAME\>\""}],
       "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"PU.QL15.R1\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
  "Now the ",
  StyleBox["mfsColumnValue", "Input"],
  " function allows a very convenient specification of a selection criterion, \
 . For example, using it to construct an appropriate pure function, you can \
create a ",
  StyleBox["new",
    FontSlant->"Italic"],
  " ",
  StyleBox["mfs", "Input"],
  " data object containing only the elements where ",
  Cell[BoxData[
      \(TraditionalForm\`\[Beta]\_x > \(250\  : \)\)]]
}], "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"hibetx", "=", 
        RowBox[{"mfsSelect", "[", 
          RowBox[{
            RowBox[{"OPTICS", "[", "0", "]"}], ",", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"mfsColumnValue", "[", 
                    RowBox[{
                      RowBox[{"OPTICS", "[", "0", "]"}], ",", "#", ",", 
                      "\"\<BETX\>\""}], "]"}], ">", "250."}], ")"}], "&"}]}], 
          "]"}]}], ";"}]], "Input",
  CellTags->"Examples section"],

Cell[TextData[{
  "Then we can make a table showing the values of both ",
  Cell[BoxData[
      \(TraditionalForm\`\[Beta]\_x\)]],
  " and ",
  Cell[BoxData[
      \(TraditionalForm\`\[Beta]\_y\)]],
  " at these elements:"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      RowBox[{"Transpose", "[", 
        RowBox[{"mfsColumn", "[", 
          RowBox[{"hibetx", ",", 
            RowBox[{"{", 
              RowBox[{
              "\"\<NAME\>\"", ",", "\"\<BETX\>\"", ",", "\"\<BETY\>\""}], 
              "}"}]}], "]"}], "]"}], "//", "TableForm"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[GridBox[{
          {"\<\"PU.QS1A.L2\"\>", "294.131`", "70.5863`"},
          {"\<\"PU.QS1A.R2\"\>", "294.136`", "70.5862`"},
          {"\<\"PU.QS1A.L4\"\>", "321.516`", "74.436`"},
          {"\<\"PU.QS1A.R4\"\>", "321.519`", "74.4358`"},
          {"\<\"PU.QS1A.L6\"\>", "299.147`", "76.797`"},
          {"\<\"PU.QS1A.R6\"\>", "299.145`", "76.7969`"},
          {"\<\"PU.QS1A.L8\"\>", "321.465`", "74.4562`"},
          {"\<\"PU.QS1A.R8\"\>", "321.467`", "74.4614`"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      (TableForm[ #]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "As a further example, we can select all the rows whose name contains the \
string ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(QL11 . \),
          "Input"], TraditionalForm]]],
  "  The similarity to the mechanism used in ",
  StyleBox["Select", "Input"],
  " should now be very obvious."
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"TableForm", "[", 
      RowBox[{"Transpose", "[", 
        RowBox[{"mfsColumn", "[", 
          RowBox[{
            RowBox[{"mfsSelect", "[", 
              RowBox[{
                RowBox[{"OPTICS", "[", "0", "]"}], ",", 
                RowBox[{
                  RowBox[{"StringMatchQ", "[", 
                    RowBox[{
                      RowBox[{"mfsColumnValue", "[", 
                        RowBox[{
                          RowBox[{"OPTICS", "[", "0", "]"}], ",", "#1", ",", 
                          "\"\<NAME\>\""}], "]"}], ",", "\"\<*QL11*\>\""}], 
                    "]"}], "&"}]}], "]"}], ",", 
            RowBox[{"{", 
              RowBox[{
              "\"\<NAME\>\"", ",", "\"\<BETX\>\"", ",", "\"\<DX\>\""}], 
              "}"}]}], "]"}], "]"}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[GridBox[{
          {"\<\"PU.QL11.R1\"\>", "146.035`", "7.4742`*^-9"},
          {"\<\"PU.QL11.L3\"\>", "146.041`", 
            RowBox[{"-", "2.42813`*^-7"}]},
          {"\<\"PU.QL11.R3\"\>", "146.041`", "2.34022`*^-7"},
          {"\<\"PU.QL11.L5\"\>", "146.042`", "2.01702`*^-7"},
          {"\<\"PU.QL11.R5\"\>", "146.042`", 
            RowBox[{"-", "1.78043`*^-7"}]},
          {"\<\"PU.QL11.L7\"\>", "146.041`", 
            RowBox[{"-", "1.20652`*^-7"}]},
          {"\<\"PU.QL11.R7\"\>", "146.041`", "8.669080000000001`*^-8"},
          {"\<\"PU.QL11.L1\"\>", "146.036`", "2.46937`*^-8"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      (TableForm[ #]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Arbitrary logical cominations of criteria can be built up using standard ",
  
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " functions and operators.  Here, we select those elements containing ",
  StyleBox["\"QS1\"", "Input"],
  " in their names where ",
  Cell[BoxData[
      \(TraditionalForm\`\[Beta]\_x > 320\)]],
  ":"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsSelect", "[", 
      RowBox[{
        RowBox[{"OPTICS", "[", "0", "]"}], ",", 
        RowBox[{
          RowBox[{
            RowBox[{"StringMatchQ", "[", 
              RowBox[{
                RowBox[{"mfsColumnValue", "[", 
                  RowBox[{
                    RowBox[{"OPTICS", "[", "0", "]"}], ",", "#1", ",", 
                    "\"\<NAME\>\""}], "]"}], ",", "\"\<*QS1*\>\""}], "]"}], "&&",
             
            RowBox[{
              RowBox[{"mfsColumnValue", "[", 
                RowBox[{
                  RowBox[{"OPTICS", "[", "0", "]"}], ",", "#1", ",", 
                  "\"\<BETX\>\""}], "]"}], ">", "320."}]}], "&"}]}], 
      "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"mfs", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\<\"GAMTR\"\>", ",", "73.4237`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"ALFA\"\>", ",", "0.00018549299999999998`"}], "}"}],
             ",", 
            RowBox[{"{", 
              RowBox[{"\<\"XIY\"\>", ",", "0.987098`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"XIX\"\>", ",", "1.00236`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"QY\"\>", ",", "76.1942`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"QX\"\>", ",", "90.2859`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"CIRCUM\"\>", ",", "26658.872082`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"DELTA\"\>", ",", "0.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"TYPE\"\>", ",", "\<\"OPTICS\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{"\<\"COMMENT\"\>", 
                ",", "\<\"N0520P97v2.lep, 90/60 BT optics for 1997 up to 97 \
GeV\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"ORIGIN\"\>", ",", "\<\"MAD 8.21/13 HP/UX\"\>"}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"DATE\"\>", ",", "\<\"12/08/97\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"TIME\"\>", ",", "\<\"15.04.39\"\>"}], "}"}]}], 
          "}"}], ",", 
        RowBox[{"{", 
          
          RowBox[{"\<\"NAME\"\>", ",", "\<\"BETX\"\>", ",", "\<\"DX\"\>", 
            ",", "\<\"BETY\"\>"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\<\"PU.QS1A.L4\"\>", ",", "321.516`", ",", 
                RowBox[{"-", "2.47388`*^-7"}], ",", "74.436`"}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{"\<\"PU.QS1A.R4\"\>", ",", "321.519`", ",", 
                "6.39189`*^-8", ",", "74.4358`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"PU.QS1A.L8\"\>", ",", "321.465`", ",", 
                RowBox[{"-", "3.40013`*^-7"}], ",", "74.4562`"}], "}"}], ",", 
            
            RowBox[{"{", 
              
              RowBox[{"\<\"PU.QS1A.R8\"\>", ",", "321.467`", ",", 
                "3.03216`*^-7", ",", "74.4614`"}], "}"}]}], "}"}]}], 
      "]"}]], "Output"]
}, Open  ]],

Cell[TextData[{
  "If you know the internal structure of the mfs data object, you can refer \
directly to its elements  without using the ",
  StyleBox["mfsColumnValue", "Input"],
  " function directly (but this is not normally recommended). For instance, \
knowing the columns 2 and 2 contain the appropriate quantities you can select \
the rows where ",
  Cell[BoxData[
      \(TraditionalForm\`\[Beta]\_x\)]],
  Cell[BoxData[
      \(TraditionalForm\`D\_x > 140\)]],
  ":"
}], "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"result", "=", 
        RowBox[{"mfsSelect", "[", 
          RowBox[{
            RowBox[{"OPTICS", "[", "0", "]"}], ",", 
            RowBox[{
              RowBox[{
                RowBox[{
                  RowBox[{
                  "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], " ", 
                  RowBox[{
                  "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ">", "140."}], "&"}]}], 
          "]"}]}], ";"}]], "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      RowBox[{"Transpose", "[", 
        RowBox[{"mfsColumn", "[", 
          RowBox[{"result", ",", 
            RowBox[{"{", 
              RowBox[{
              "\"\<NAME\>\"", ",", "\"\<BETX\>\"", ",", "\"\<DX\>\""}], 
              "}"}]}], "]"}], "]"}], "//", "TableForm"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[GridBox[{
          {"\<\"PU.QS15.L2\"\>", "149.927`", "0.950618`"},
          {"\<\"PU.QS15.R2\"\>", "149.922`", "0.950618`"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      (TableForm[ #]&)]], "Output"]
}, Open  ]],

Cell["This is equivalent to the selection", "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"result1", "=", 
        RowBox[{"mfsSelect", "[", 
          RowBox[{
            RowBox[{"OPTICS", "[", "0", "]"}], ",", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"mfsColumnValue", "[", 
                      RowBox[{
                        RowBox[{"OPTICS", "[", "0", "]"}], ",", "#", ",", 
                        "\"\<BETX\>\""}], "]"}], 
                    RowBox[{"mfsColumnValue", "[", 
                      RowBox[{
                        RowBox[{"OPTICS", "[", "0", "]"}], ",", "#", ",", 
                        "\"\<DX\>\""}], "]"}]}], ">", "140."}], ")"}], 
              "&"}]}], "]"}]}], ";"}]], "Input",
  CellTags->"Examples section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simple  selection  mechanisms", "Subsubsection",
  CellTags->"Examples section"],

Cell["\<\
Common cases can be handled with simpler functions, e.g., when the \
names in a given column belongs to a specified set or numerical values fall \
in a given range. \
\>", "Text",
  CellTags->"Examples section"],

Cell["\<\
To select from a set, we can first create a set of interaction \
point names and then select all the rows containing them.\
\>", "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"IPs", " ", "=", 
        RowBox[{"{", 
          RowBox[{
          "\"\<IP2\>\"", ",", "\"\<IP4\>\"", ",", "\"\<IP6\>\"", ",", 
            "\"\<IP8\>\""}], "}"}]}], ";"}]], "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"IPoptics", "=", 
      RowBox[{"mfsMember", "[", 
        RowBox[{
          RowBox[{"OPTICS", "[", "0", "]"}], ",", "\"\<NAME\>\"", ",", 
          "IPs"}], "]"}]}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"mfs", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\<\"GAMTR\"\>", ",", "73.4237`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"ALFA\"\>", ",", "0.00018549299999999998`"}], "}"}],
             ",", 
            RowBox[{"{", 
              RowBox[{"\<\"XIY\"\>", ",", "0.987098`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"XIX\"\>", ",", "1.00236`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"QY\"\>", ",", "76.1942`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"QX\"\>", ",", "90.2859`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"CIRCUM\"\>", ",", "26658.872082`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"DELTA\"\>", ",", "0.`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"TYPE\"\>", ",", "\<\"OPTICS\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{"\<\"COMMENT\"\>", 
                ",", "\<\"N0520P97v2.lep, 90/60 BT optics for 1997 up to 97 \
GeV\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"ORIGIN\"\>", ",", "\<\"MAD 8.21/13 HP/UX\"\>"}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"DATE\"\>", ",", "\<\"12/08/97\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"TIME\"\>", ",", "\<\"15.04.39\"\>"}], "}"}]}], 
          "}"}], ",", 
        RowBox[{"{", 
          
          RowBox[{"\<\"NAME\"\>", ",", "\<\"BETX\"\>", ",", "\<\"DX\"\>", 
            ",", "\<\"BETY\"\>"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              
              RowBox[{"\<\"IP2\"\>", ",", "2.`", ",", 
                "2.8793400000000004`*^-8", ",", "0.049999100000000005`"}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"IP4\"\>", ",", "2.00002`", ",", 
                RowBox[{"-", "2.57651`*^-8"}], ",", "0.0499995`"}], "}"}], 
            ",", 
            RowBox[{"{", 
              
              RowBox[{"\<\"IP6\"\>", ",", "2.00002`", ",", "1.76834`*^-8", 
                ",", "0.050000100000000006`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"IP8\"\>", ",", "1.99995`", ",", 
                RowBox[{"-", "5.1688100000000005`*^-9"}], ",", "0.0499975`"}],
               "}"}]}], "}"}]}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      RowBox[{"Transpose", "[", 
        RowBox[{"mfsColumn", "[", 
          RowBox[{"IPoptics", ",", 
            RowBox[{"{", 
              RowBox[{
              "\"\<NAME\>\"", ",", "\"\<BETX\>\"", ",", "\"\<BETY\>\""}], 
              "}"}]}], "]"}], "]"}], "//", "TableForm"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[GridBox[{
          {"\<\"IP2\"\>", "2.`", "0.049999100000000005`"},
          {"\<\"IP4\"\>", "2.00002`", "0.0499995`"},
          {"\<\"IP6\"\>", "2.00002`", "0.050000100000000006`"},
          {"\<\"IP8\"\>", "1.99995`", "0.0499975`"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      (TableForm[ #]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "A similar function handles the case when a value is a number in a \
specified range. For instance, select the rows with ",
  Cell[BoxData[
      \(TraditionalForm\`120 < \[Beta]\_x < \(126\  : \)\)]]
}], "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"betxval", "=", 
        RowBox[{"mfsRange", "[", 
          RowBox[{
            RowBox[{"OPTICS", "[", "0", "]"}], ",", "\"\<BETX\>\"", ",", 
            RowBox[{"{", 
              RowBox[{"120", ",", "126"}], "}"}]}], "]"}]}], " ", 
      ";"}]], "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      RowBox[{"Transpose", "[", 
        RowBox[{"mfsColumn", "[", 
          RowBox[{"betxval", ",", 
            RowBox[{"{", 
              RowBox[{"\"\<NAME\>\"", ",", "\"\<BETX\>\""}], "}"}]}], "]"}], 
        "]"}], "//", "TableForm"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[GridBox[{
          {"\<\"PU.QL2B.R1\"\>", "125.212`"},
          {"\<\"PU.QL2B.L3\"\>", "125.213`"},
          {"\<\"PU.QL2B.R3\"\>", "125.21`"},
          {"\<\"PU.QL2B.L5\"\>", "125.212`"},
          {"\<\"PU.QL2B.R5\"\>", "125.211`"},
          {"\<\"PU.QL2B.L7\"\>", "125.21`"},
          {"\<\"PU.QL2B.R7\"\>", "125.213`"},
          {"\<\"PU.QL2B.L1\"\>", "125.209`"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Baseline,
        ColumnAlignments->{Left}],
      (TableForm[ #]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Of course, the limits of the range need not be finite.  To find all places \
with ",
  Cell[BoxData[
      \(TraditionalForm\`\[Beta]\_x > 300\)]],
  ", we can use"
}], "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"hibetx", "=", 
        RowBox[{"mfsRange", "[", 
          RowBox[{
            RowBox[{"OPTICS", "[", "0", "]"}], ",", "\"\<BETX\>\"", ",", 
            RowBox[{"{", 
              RowBox[{"300", ",", "\[Infinity]"}], "}"}]}], "]"}]}], " ", 
      ";"}]], "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsColumn", "[", 
      RowBox[{"hibetx", ",", "\"\<NAME\>\""}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"PU.QS1A.L4\"\>", ",", "\<\"PU.QS1A.R4\"\>", 
        ",", "\<\"PU.QS1A.L8\"\>", ",", "\<\"PU.QS1A.R8\"\>"}], 
      "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other Selection Methods", "Subsubsection",
  CellTags->"Examples section"],

Cell[TextData[{
  StyleBox["mfsSelect", "Input"],
  " is quite general and useful. However other methods of data selection are \
also possible. For instance, you can use BooleanSelect from the \
Statistics`DataManipulation` package (which is made available by the ",
  StyleBox["Mfs", "Input"],
  " package). As an example, first construct a boolean array  that indicates \
all places where the product ",
  Cell[BoxData[
      \(TraditionalForm\`\(\(\[Beta]\_x\) D\_x > 120\ \)\)]],
  "."
}], "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"test", " ", "=", " ", 
        RowBox[{
          RowBox[{
            RowBox[{"Greater", "[", 
              RowBox[{"#", ",", "120."}], "]"}], "&"}], " ", "/@", " ", 
          RowBox[{"(", " ", 
            RowBox[{
              RowBox[{"mfsColumn", "[", 
                RowBox[{
                  RowBox[{"OPTICS", "[", "0", "]"}], ",", "\"\<BETX\>\""}], 
                "]"}], " ", 
              RowBox[{"mfsColumn", "[", 
                RowBox[{
                  RowBox[{"OPTICS", "[", "0", "]"}], ",", "\"\<DX\>\""}], 
                "]"}]}], "  ", ")"}]}]}], ";"}]], "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Short", "[", 
      RowBox[{"test", ",", "5"}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[
      RowBox[{"{", 
        RowBox[{
        "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
          "False", ",", "False", ",", "False", ",", "False", ",", "False", 
          ",", "False", ",", "False", ",", "False", ",", "True", ",", "False",
           ",", "True", ",", "False", ",", "False", ",", 
          RowBox[{"\[LeftSkeleton]", "473", "\[RightSkeleton]"}], ",", 
          "False", ",", "False", ",", "True", ",", "False", ",", "True", ",", 
          "False", ",", "False", ",", "False", ",", "False", ",", "False", 
          ",", "False", ",", "False", ",", "False", ",", "False", ",", 
          "False", ",", "False", ",", "False", ",", "False"}], "}"}],
      (Short[ #, 5]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Then get the rows where the product ",
  Cell[BoxData[
      \(TraditionalForm\`\(\(\[Beta]\_x\) D\_x > 120\ \)\)]],
  "."
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "BooleanSelect"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"BooleanSelect[list, sel] keeps elements of list for which \
the corresponding element of sel is True.\"\>"], "Print"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"BooleanSelect", "[", 
      RowBox[{
        RowBox[{"Transpose", "[", " ", 
          RowBox[{"mfsColumn", "[", 
            RowBox[{
              RowBox[{"OPTICS", "[", "0", "]"}], ",", 
              RowBox[{"{", 
                RowBox[{
                "\"\<NAME\>\"", ",", "\"\<BETX\>\"", ",", "\"\<DX\>\""}], 
                "}"}]}], "]"}], "]"}], ",", "test"}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.R1\"\>", ",", "129.71`", ",", "0.987151`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.R1\"\>", ",", "117.425`", ",", "1.07893`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.L2\"\>", ",", "149.927`", ",", "0.950618`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.R2\"\>", ",", "149.922`", ",", "0.950618`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.L3\"\>", ",", "117.415`", ",", "1.07886`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.L3\"\>", ",", "129.783`", ",", "0.987148`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.R3\"\>", ",", "129.783`", ",", "0.987147`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.R3\"\>", ",", "117.418`", ",", "1.07886`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.L4\"\>", ",", "139.083`", ",", "0.891688`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.R4\"\>", ",", "139.082`", ",", "0.891688`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.L5\"\>", ",", "117.417`", ",", "1.07886`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.L5\"\>", ",", "129.783`", ",", "0.987147`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.R5\"\>", ",", "129.783`", ",", "0.987148`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.R5\"\>", ",", "117.417`", ",", "1.07886`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS17.L6\"\>", ",", "118.596`", ",", "1.10177`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS17.R6\"\>", ",", "118.596`", ",", "1.10177`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.L7\"\>", ",", "117.418`", ",", "1.07886`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.L7\"\>", ",", "129.783`", ",", "0.987148`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.R7\"\>", ",", "129.783`", ",", "0.987147`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.R7\"\>", ",", "117.415`", ",", "1.07886`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.L8\"\>", ",", "139.082`", ",", "0.891688`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.R8\"\>", ",", "139.088`", ",", "0.891688`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.L1\"\>", ",", "117.428`", ",", "1.07893`"}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.L1\"\>", ",", "129.71`", ",", "0.987151`"}], 
          "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Still another way to do this is to use ",
  StyleBox["MapThread", "Input"],
  " to form the product of the two columns together with the element names.  \
Then the elements can be selected."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Select", "[", 
      RowBox[{
        RowBox[{"MapThread", "[", 
          RowBox[{
            RowBox[{
              RowBox[{"{", 
                RowBox[{"#1", ",", 
                  RowBox[{"#2", " ", "#3"}]}], "}"}], "&"}], ",", 
            RowBox[{"mfsColumn", "[", 
              RowBox[{
                RowBox[{"OPTICS", "[", "0", "]"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                  "\"\<NAME\>\"", ",", "\"\<BETX\>\"", ",", "\"\<DX\>\""}], 
                  "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{
          RowBox[{
            RowBox[{"Last", "[", "#1", "]"}], ">", "120."}], "&"}]}], 
      "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.R1\"\>", ",", "128.04335621`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.R1\"\>", ",", "126.69335525`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.L2\"\>", ",", "142.52330488599998`"}], "}"}], 
        ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.R2\"\>", ",", "142.518551796`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.L3\"\>", ",", "126.6743469`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.L3\"\>", ",", "128.115028884`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.R3\"\>", ",", "128.114899101`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.R3\"\>", ",", "126.67758348`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.L4\"\>", ",", "124.01864210400001`"}], "}"}], 
        ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.R4\"\>", ",", "124.017750416`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.L5\"\>", ",", "126.67650461999999`"}], "}"}], 
        ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.L5\"\>", ",", "128.114899101`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.R5\"\>", ",", "128.115028884`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.R5\"\>", ",", "126.67650461999999`"}], "}"}], 
        ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS17.L6\"\>", ",", "130.66551492`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS17.R6\"\>", ",", "130.66551492`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.L7\"\>", ",", "126.67758348`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.L7\"\>", ",", "128.115028884`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.R7\"\>", ",", "128.114899101`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.R7\"\>", ",", "126.6743469`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.L8\"\>", ",", "124.017750416`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QS15.R8\"\>", ",", "124.023100544`"}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL17.L1\"\>", ",", "126.69659203999998`"}], "}"}], 
        ",", 
        RowBox[{"{", 
          RowBox[{"\<\"PU.QL15.L1\"\>", ",", "128.04335621`"}], "}"}]}], 
      "}"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
  "Modifying and saving ",
  StyleBox["mfs", "Input"],
  " objects"
}], "Subsection",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell["Modifying the header part of the object", "Subsubsection"],

Cell[TextData[{
  "It may be useful to add additional ",
  "key",
  "s and values that were not given in the original TFS file. These can be \
any kind of object definable in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "."
}], "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"qpmfs", "=", 
        RowBox[{"mfsAddKey", "[", 
          RowBox[{"qpmfs", ",", 
            RowBox[{"{", 
              RowBox[{
              "\"\<REMARK\>\"", ",", 
                "\"\<Example for conference paper.\>\""}], "}"}]}], "]"}]}], 
      ";"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"qpmfs", "=", 
        RowBox[{"mfsAddKey", "[", 
          RowBox[{"qpmfs", ",", 
            RowBox[{"{", 
              RowBox[{"\"\<KICKVALUE\>\"", ",", 
                RowBox[{"4", "\[Times]", 
                  SuperscriptBox["10", 
                    RowBox[{"-", "3"}]]}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"qpmfs", " ", "=", " ", 
        RowBox[{"mfsAddKey", "[", 
          RowBox[{"qpmfs", ",", 
            RowBox[{"{", 
              RowBox[{"\"\<AMATRIX\>\"", ",", 
                RowBox[{"Inverse", "[", 
                  RowBox[{"(", GridBox[{
                        {"\[Sigma]", "\[Alpha]"},
                        {"\[Beta]", 
                          RowBox[{"-", 
                            SuperscriptBox["\[Sigma]", 
                              RowBox[{"-", "1"}]]}]}
                        }], ")"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      RowBox[{"mfsKeyValue", "[", 
        RowBox[{"qpmfs", ",", "\"\<AMATRIX\>\""}], "]"}], "//", 
      "MatrixForm"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {
              RowBox[{"-", 
                FractionBox["1", 
                  RowBox[{
                    RowBox[{"(", 
                      RowBox[{
                        RowBox[{"-", "1"}], "-", 
                        RowBox[{"\[Alpha]", " ", "\[Beta]"}]}], ")"}], " ", 
                    "\[Sigma]"}]]}], 
              RowBox[{"-", 
                FractionBox["\[Alpha]", 
                  RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}]},
            {
              RowBox[{"-", 
                FractionBox["\[Beta]", 
                  RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}], 
              FractionBox["\[Sigma]", 
                RowBox[{
                  RowBox[{"-", "1"}], "-", 
                  RowBox[{"\[Alpha]", " ", "\[Beta]"}]}]]}
            }], "\[NoBreak]", ")"}],
      (MatrixForm[ #]&)]], "Output"]
}, Open  ]],

Cell[TextData[{
  "Descriptors can be changed with ",
  StyleBox["mfsEditKey", "Input"],
  " as follows.  In this example, the ",
  StyleBox["COMMENT", "Input"],
  " is empty since nothing was supplied in the MAD run:"
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsKeyValue", "[", 
      RowBox[{"qpmfs", ",", "\"\<COMMENT\>\""}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"\"\>"], "Output"]
}, Open  ]],

Cell["However it can be added as an afterthought:", "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"qpmfs", "=", 
        RowBox[{"mfsEditKey", "[", 
          RowBox[{"qpmfs", ",", 
            RowBox[{"{", 
              RowBox[{
              "\"\<COMMENT\>\"", ",", 
                "\"\<Tracking from an initial kick.\>\""}], "}"}]}], "]"}]}], 
      ";"}]], "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsKeyValue", "[", 
      RowBox[{"qpmfs", ",", "\"\<COMMENT\>\""}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"Tracking from an initial kick.\"\>"], "Output"]
}, Open  ]],

Cell["Descriptors can be deleted with", "Text",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"qpmfs", "=", 
        RowBox[{"mfsDeleteKey", "[", 
          RowBox[{"qpmfs", ",", "\"\<ET\>\""}], "]"}]}], ";"}]], "Input",
  CellTags->"Examples section"],

Cell["The list of keys now reads", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsKeyNames", "[", "qpmfs", "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"TYPE\"\>", ",", "\<\"X\"\>", ",", "\<\"PX\"\>", 
        ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", ",", "\<\"EY\"\>", 
        ",", "\<\"EX\"\>", ",", "\<\"E11\"\>", ",", "\<\"E12\"\>", 
        ",", "\<\"E13\"\>", ",", "\<\"E14\"\>", ",", "\<\"E15\"\>", 
        ",", "\<\"E16\"\>", ",", "\<\"E21\"\>", ",", "\<\"E22\"\>", 
        ",", "\<\"E23\"\>", ",", "\<\"E24\"\>", ",", "\<\"E25\"\>", 
        ",", "\<\"E26\"\>", ",", "\<\"E31\"\>", ",", "\<\"E32\"\>", 
        ",", "\<\"E33\"\>", ",", "\<\"E34\"\>", ",", "\<\"E35\"\>", 
        ",", "\<\"E36\"\>", ",", "\<\"E41\"\>", ",", "\<\"E42\"\>", 
        ",", "\<\"E43\"\>", ",", "\<\"E44\"\>", ",", "\<\"E45\"\>", 
        ",", "\<\"E46\"\>", ",", "\<\"E51\"\>", ",", "\<\"E52\"\>", 
        ",", "\<\"E53\"\>", ",", "\<\"E54\"\>", ",", "\<\"E55\"\>", 
        ",", "\<\"E56\"\>", ",", "\<\"E61\"\>", ",", "\<\"E62\"\>", 
        ",", "\<\"E63\"\>", ",", "\<\"E64\"\>", ",", "\<\"E65\"\>", 
        ",", "\<\"E66\"\>", ",", "\<\"COMMENT\"\>", ",", "\<\"ORIGIN\"\>", 
        ",", "\<\"DATE\"\>", ",", "\<\"TIME\"\>", ",", "\<\"REMARK\"\>", 
        ",", "\<\"KICKVALUE\"\>", ",", "\<\"AMATRIX\"\>"}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding and removing columns", "Subsubsection"],

Cell[TextData[{
  "Let us show how to add another column of data to the mfs data object ",
  StyleBox["OPTICS[0]", "Input"],
  ".  An additional column should have length"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"collen", "=", 
      RowBox[{"Length", "[", 
        RowBox[{"Last", "[", 
          RowBox[{"OPTICS", "[", "0", "]"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData["509"], "Output"]
}, Open  ]],

Cell["\<\
Let us construct a simple index of the elements since this \
particular data object contains no azimuth \"S\" \
\>", "Text"],

Cell[BoxData[
    RowBox[{" ", 
      RowBox[{
        RowBox[{"idx", "=", 
          RowBox[{"Range", "[", "collen", "]"}]}], " ", ";"}]}]], "Input"],

Cell[BoxData[
    RowBox[{
      RowBox[{
        RowBox[{"OPTICS", "[", "1", "]"}], "=", 
        RowBox[{"mfsAddColumn", "[", 
          RowBox[{
            RowBox[{"OPTICS", "[", "0", "]"}], ",", "\"\<INDEX\>\"", ",", 
            "idx"}], "]"}]}], ";"}]], "Input"],

Cell["\<\
Now there is a new column that we can use in a trivial way to \
produce a plot\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsColumnNames", "[", 
      RowBox[{"OPTICS", "[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"BETX\"\>", ",", "\<\"BETY\"\>", ",", "\<\"DX\"\>", 
        ",", "\<\"INDEX\"\>", ",", "\<\"NAME\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"ListPlot", "[", 
      RowBox[{
        RowBox[{"Transpose", "[", 
          RowBox[{"mfsColumn", "[", 
            RowBox[{
              RowBox[{"OPTICS", "[", "1", "]"}], ",", 
              RowBox[{"{", 
                RowBox[{"\"\<BETX\>\"", ",", "\"\<INDEX\>\""}], "}"}]}], 
            "]"}], "]"}], ",", 
        RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
        RowBox[{"AspectRatio", "->", "Automatic"}]}], "]"}]], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 2.68488 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.00502362 0.0639256 0.00502362 [
[.1494 .05143 -6 -9 ]
[.1494 .05143 6 0 ]
[.27499 .05143 -6 -9 ]
[.27499 .05143 6 0 ]
[.40058 .05143 -6 -9 ]
[.40058 .05143 6 0 ]
[.52617 .05143 -9 -9 ]
[.52617 .05143 9 0 ]
[.65176 .05143 -9 -9 ]
[.65176 .05143 9 0 ]
[.77735 .05143 -9 -9 ]
[.77735 .05143 9 0 ]
[.90294 .05143 -9 -9 ]
[.90294 .05143 9 0 ]
[.01131 .56629 -18 -4.5 ]
[.01131 .56629 0 4.5 ]
[.01131 1.06865 -18 -4.5 ]
[.01131 1.06865 0 4.5 ]
[.01131 1.57101 -18 -4.5 ]
[.01131 1.57101 0 4.5 ]
[.01131 2.07338 -18 -4.5 ]
[.01131 2.07338 0 4.5 ]
[.01131 2.57574 -18 -4.5 ]
[.01131 2.57574 0 4.5 ]
[ 0 0 0 0 ]
[ 1 2.68488 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.1494 .06393 m
.1494 .07018 L
s
[(25)] .1494 .05143 0 1 Mshowa
.27499 .06393 m
.27499 .07018 L
s
[(50)] .27499 .05143 0 1 Mshowa
.40058 .06393 m
.40058 .07018 L
s
[(75)] .40058 .05143 0 1 Mshowa
.52617 .06393 m
.52617 .07018 L
s
[(100)] .52617 .05143 0 1 Mshowa
.65176 .06393 m
.65176 .07018 L
s
[(125)] .65176 .05143 0 1 Mshowa
.77735 .06393 m
.77735 .07018 L
s
[(150)] .77735 .05143 0 1 Mshowa
.90294 .06393 m
.90294 .07018 L
s
[(175)] .90294 .05143 0 1 Mshowa
.125 Mabswid
.04893 .06393 m
.04893 .06768 L
s
.07405 .06393 m
.07405 .06768 L
s
.09916 .06393 m
.09916 .06768 L
s
.12428 .06393 m
.12428 .06768 L
s
.17452 .06393 m
.17452 .06768 L
s
.19964 .06393 m
.19964 .06768 L
s
.22475 .06393 m
.22475 .06768 L
s
.24987 .06393 m
.24987 .06768 L
s
.30011 .06393 m
.30011 .06768 L
s
.32523 .06393 m
.32523 .06768 L
s
.35035 .06393 m
.35035 .06768 L
s
.37546 .06393 m
.37546 .06768 L
s
.4257 .06393 m
.4257 .06768 L
s
.45082 .06393 m
.45082 .06768 L
s
.47594 .06393 m
.47594 .06768 L
s
.50105 .06393 m
.50105 .06768 L
s
.55129 .06393 m
.55129 .06768 L
s
.57641 .06393 m
.57641 .06768 L
s
.60153 .06393 m
.60153 .06768 L
s
.62664 .06393 m
.62664 .06768 L
s
.67688 .06393 m
.67688 .06768 L
s
.702 .06393 m
.702 .06768 L
s
.72712 .06393 m
.72712 .06768 L
s
.75224 .06393 m
.75224 .06768 L
s
.80247 .06393 m
.80247 .06768 L
s
.82759 .06393 m
.82759 .06768 L
s
.85271 .06393 m
.85271 .06768 L
s
.87783 .06393 m
.87783 .06768 L
s
.92806 .06393 m
.92806 .06768 L
s
.95318 .06393 m
.95318 .06768 L
s
.9783 .06393 m
.9783 .06768 L
s
.25 Mabswid
0 .06393 m
1 .06393 L
s
.02381 .56629 m
.03006 .56629 L
s
[(100)] .01131 .56629 1 0 Mshowa
.02381 1.06865 m
.03006 1.06865 L
s
[(200)] .01131 1.06865 1 0 Mshowa
.02381 1.57101 m
.03006 1.57101 L
s
[(300)] .01131 1.57101 1 0 Mshowa
.02381 2.07338 m
.03006 2.07338 L
s
[(400)] .01131 2.07338 1 0 Mshowa
.02381 2.57574 m
.03006 2.57574 L
s
[(500)] .01131 2.57574 1 0 Mshowa
.125 Mabswid
.02381 .1644 m
.02756 .1644 L
s
.02381 .26487 m
.02756 .26487 L
s
.02381 .36534 m
.02756 .36534 L
s
.02381 .46582 m
.02756 .46582 L
s
.02381 .66676 m
.02756 .66676 L
s
.02381 .76723 m
.02756 .76723 L
s
.02381 .86771 m
.02756 .86771 L
s
.02381 .96818 m
.02756 .96818 L
s
.02381 1.16912 m
.02756 1.16912 L
s
.02381 1.2696 m
.02756 1.2696 L
s
.02381 1.37007 m
.02756 1.37007 L
s
.02381 1.47054 m
.02756 1.47054 L
s
.02381 1.67149 m
.02756 1.67149 L
s
.02381 1.77196 m
.02756 1.77196 L
s
.02381 1.87243 m
.02756 1.87243 L
s
.02381 1.9729 m
.02756 1.9729 L
s
.02381 2.17385 m
.02756 2.17385 L
s
.02381 2.27432 m
.02756 2.27432 L
s
.02381 2.37479 m
.02756 2.37479 L
s
.02381 2.47527 m
.02756 2.47527 L
s
.02381 2.67621 m
.02756 2.67621 L
s
.25 Mabswid
.02381 0 m
.02381 2.68488 L
s
0 0 m
1 0 L
1 2.68488 L
0 2.68488 L
closepath
clip
newpath
.5 Mabswid
.15062 .06895 m
.40536 .07397 L
.65283 .079 L
.10921 .08402 L
.77027 .08904 L
.24302 .09407 L
.75748 .09909 L
.30503 .10411 L
.75745 .10914 L
.30502 .11416 L
.75743 .11919 L
.24089 .12421 L
.06656 .12923 L
.67542 .13426 L
.22069 .13928 L
.61371 .1443 L
.15741 .14933 L
.15426 .15435 L
.15427 .15937 L
.15427 .1644 L
.15428 .16942 L
.15427 .17445 L
.15428 .17947 L
.15427 .18449 L
.15428 .18952 L
.15427 .19454 L
.15428 .19956 L
.15427 .20459 L
.15428 .20961 L
.15427 .21463 L
.15428 .21966 L
.15427 .22468 L
.15428 .22971 L
.15427 .23473 L
.15428 .23975 L
.15427 .24478 L
.15428 .2498 L
.15427 .25482 L
.15428 .25985 L
.15427 .26487 L
.15428 .26989 L
.15427 .27492 L
.15428 .27994 L
.15427 .28497 L
.15428 .28999 L
.15427 .29501 L
.15428 .30004 L
.15427 .30506 L
.52468 .31008 L
.23055 .31511 L
Mistroke
.77699 .32013 L
.0668 .32515 L
.16429 .33018 L
.48202 .3352 L
.06327 .34022 L
.67738 .34525 L
.13826 .35027 L
.45745 .3553 L
.16173 .36032 L
.47621 .36534 L
.11131 .37037 L
.22953 .37539 L
Mfstroke
.22953 .37539 m
1 .37843 L
s
1 .38239 m
.22478 .38544 L
.03386 .39046 L
.22479 .39548 L
s
.22479 .39548 m
1 .39854 L
s
1 .40249 m
.22952 .40553 L
.11131 .41056 L
.47622 .41558 L
.16173 .4206 L
.45747 .42563 L
.13826 .43065 L
.67735 .43567 L
.06328 .4407 L
.482 .44572 L
.16429 .45074 L
.0668 .45577 L
.77696 .46079 L
.23055 .46582 L
.52469 .47084 L
.15427 .47586 L
.15427 .48089 L
.15427 .48591 L
.15427 .49093 L
.15427 .49596 L
.15427 .50098 L
.15427 .506 L
.15427 .51103 L
.15427 .51605 L
.15427 .52108 L
.15427 .5261 L
.15427 .53112 L
.15427 .53615 L
.15427 .54117 L
.15427 .54619 L
.15427 .55122 L
.15427 .55624 L
.15427 .56126 L
.15427 .56629 L
.15427 .57131 L
.15427 .57634 L
.15427 .58136 L
.15427 .58638 L
.15427 .59141 L
.15427 .59643 L
.15427 .60145 L
.15427 .60648 L
.15427 .6115 L
.15427 .61652 L
.15427 .62155 L
.15427 .62657 L
.1574 .6316 L
.61366 .63662 L
.22072 .64164 L
.67579 .64667 L
Mistroke
.06655 .65169 L
.24089 .65671 L
.75746 .66174 L
.30503 .66676 L
.75747 .67178 L
.30503 .67681 L
.75746 .68183 L
.24301 .68686 L
.77029 .69188 L
.10923 .6969 L
.65283 .70193 L
.40529 .70695 L
.15061 .71197 L
.40528 .717 L
.65282 .72202 L
.10923 .72704 L
.7703 .73207 L
.24301 .73709 L
.75745 .74211 L
.30503 .74714 L
.75745 .75216 L
.30503 .75719 L
.75746 .76221 L
.24089 .76723 L
.06655 .77226 L
.67579 .77728 L
.22073 .7823 L
.61367 .78733 L
.1574 .79235 L
.15427 .79737 L
.15427 .8024 L
.15427 .80742 L
.15427 .81245 L
.15427 .81747 L
.15427 .82249 L
.15427 .82752 L
.15427 .83254 L
.15427 .83756 L
.15427 .84259 L
.15427 .84761 L
.15427 .85263 L
.15427 .85766 L
.15427 .86268 L
.15427 .86771 L
.15427 .87273 L
.15427 .87775 L
.15427 .88278 L
.15427 .8878 L
.15427 .89282 L
.15427 .89785 L
Mistroke
.15427 .90287 L
.15427 .90789 L
.15427 .91292 L
.15427 .91794 L
.15427 .92297 L
.15427 .92799 L
.15427 .93301 L
.15427 .93804 L
.15427 .94306 L
.15427 .94808 L
.48305 .95311 L
.27132 .95813 L
.72251 .96315 L
.06405 .96818 L
.12437 .9732 L
.47181 .97823 L
.1094 .98325 L
.56455 .98827 L
.06643 .9933 L
.77022 .99832 L
.0891 1.00334 L
.35121 1.00837 L
.21815 1.01339 L
Mfstroke
.21815 1.01339 m
1 1.01615 L
s
1 1.02068 m
.22272 1.02344 L
.03386 1.02846 L
.22273 1.03349 L
s
.22273 1.03349 m
1 1.03624 L
s
1 1.04077 m
.21815 1.04353 L
.35121 1.04856 L
.0891 1.05358 L
.77023 1.0586 L
.06643 1.06363 L
.56455 1.06865 L
.1094 1.07367 L
.47181 1.0787 L
.12437 1.08372 L
.06405 1.08874 L
.72251 1.09377 L
.27132 1.09879 L
.48304 1.10382 L
.15427 1.10884 L
.15427 1.11386 L
.15427 1.11889 L
.15427 1.12391 L
.15427 1.12893 L
.15427 1.13396 L
.15427 1.13898 L
.15427 1.144 L
.15427 1.14903 L
.15427 1.15405 L
.15427 1.15908 L
.15427 1.1641 L
.15427 1.16912 L
.15427 1.17415 L
.15427 1.17917 L
.15427 1.18419 L
.15427 1.18922 L
.15427 1.19424 L
.15427 1.19926 L
.15427 1.20429 L
.15427 1.20931 L
.15427 1.21434 L
.15427 1.21936 L
.15427 1.22438 L
.15427 1.22941 L
.15427 1.23443 L
.15427 1.23945 L
.15427 1.24448 L
.15427 1.2495 L
.15427 1.25452 L
.15427 1.25955 L
.1574 1.26457 L
.61367 1.2696 L
.22073 1.27462 L
.67579 1.27964 L
.06655 1.28467 L
Mistroke
.24089 1.28969 L
.75747 1.29471 L
.30503 1.29974 L
.75746 1.30476 L
.30503 1.30978 L
.75745 1.31481 L
.24302 1.31983 L
.77024 1.32486 L
.10922 1.32988 L
.65283 1.3349 L
.40534 1.33993 L
.15061 1.34495 L
.40534 1.34997 L
.65282 1.355 L
.10922 1.36002 L
.77024 1.36504 L
.24302 1.37007 L
.75746 1.37509 L
.30503 1.38012 L
.75746 1.38514 L
.30505 1.39016 L
.75747 1.39519 L
.24089 1.40021 L
.06655 1.40523 L
.67579 1.41026 L
.22073 1.41528 L
.61367 1.4203 L
.1574 1.42533 L
.15427 1.43035 L
.15427 1.43538 L
.15427 1.4404 L
.15427 1.44542 L
.15427 1.45045 L
.15427 1.45547 L
.15427 1.46049 L
.15427 1.46552 L
.15427 1.47054 L
.15427 1.47556 L
.15427 1.48059 L
.15427 1.48561 L
.15427 1.49063 L
.15427 1.49566 L
.15427 1.50068 L
.15427 1.50571 L
.15427 1.51073 L
.15427 1.51575 L
.15427 1.52078 L
.15427 1.5258 L
.15427 1.53082 L
.15427 1.53585 L
Mistroke
.15427 1.54087 L
.15427 1.54589 L
.15427 1.55092 L
.15427 1.55594 L
.15427 1.56097 L
.15427 1.56599 L
.15427 1.57101 L
.15427 1.57604 L
.15427 1.58106 L
.61959 1.58608 L
.21189 1.59111 L
.57182 1.59613 L
.07575 1.60115 L
.1327 1.60618 L
.45499 1.6112 L
.07793 1.61623 L
.42645 1.62125 L
.1081 1.62627 L
.463 1.6313 L
.14532 1.63632 L
.48282 1.64134 L
.11078 1.64637 L
.23427 1.65139 L
Mfstroke
.23427 1.65139 m
1 1.65437 L
s
1 1.65846 m
.23273 1.66144 L
.03386 1.66646 L
.23272 1.67149 L
s
.23272 1.67149 m
1 1.67446 L
s
1 1.67856 m
.23427 1.68153 L
.11078 1.68656 L
.48282 1.69158 L
.14532 1.6966 L
.463 1.70163 L
.1081 1.70665 L
.42645 1.71167 L
.07793 1.7167 L
.45499 1.72172 L
.1327 1.72675 L
.07575 1.73177 L
.57183 1.73679 L
.21189 1.74182 L
.61959 1.74684 L
.15427 1.75186 L
.15427 1.75689 L
.15427 1.76191 L
.15427 1.76693 L
.15427 1.77196 L
.15427 1.77698 L
.15427 1.78201 L
.15427 1.78703 L
.15427 1.79205 L
.15427 1.79708 L
.15427 1.8021 L
.15427 1.80712 L
.15427 1.81215 L
.15427 1.81717 L
.15427 1.82219 L
.15427 1.82722 L
.15427 1.83224 L
.15427 1.83726 L
.15427 1.84229 L
.15427 1.84731 L
.15427 1.85234 L
.15427 1.85736 L
.15427 1.86238 L
.15427 1.86741 L
.15427 1.87243 L
.15427 1.87745 L
.15427 1.88248 L
.15427 1.8875 L
.15427 1.89252 L
.15427 1.89755 L
.15427 1.90257 L
.1574 1.9076 L
.61367 1.91262 L
.22073 1.91764 L
.67579 1.92267 L
Mistroke
.06655 1.92769 L
.24089 1.93271 L
.75746 1.93774 L
.30503 1.94276 L
.75745 1.94778 L
.30503 1.95281 L
.75745 1.95783 L
.24301 1.96286 L
.7703 1.96788 L
.10923 1.9729 L
.65282 1.97793 L
.40528 1.98295 L
.15061 1.98797 L
.40529 1.993 L
.65283 1.99802 L
.10923 2.00304 L
.77029 2.00807 L
.24301 2.01309 L
.75746 2.01812 L
.30503 2.02314 L
.75747 2.02816 L
.30503 2.03319 L
.75746 2.03821 L
.24089 2.04323 L
.06655 2.04826 L
.67579 2.05328 L
.22072 2.0583 L
.61366 2.06333 L
.1574 2.06835 L
.15427 2.07338 L
.15427 2.0784 L
.15427 2.08342 L
.15427 2.08845 L
.15427 2.09347 L
.15427 2.09849 L
.15427 2.10352 L
.15427 2.10854 L
.15427 2.11356 L
.15427 2.11859 L
.15427 2.12361 L
.15427 2.12864 L
.15427 2.13366 L
.15427 2.13868 L
.15427 2.14371 L
.15427 2.14873 L
.15427 2.15375 L
.15427 2.15878 L
.15427 2.1638 L
.15427 2.16882 L
.15427 2.17385 L
Mistroke
.15427 2.17887 L
.15427 2.1839 L
.15427 2.18892 L
.15427 2.19394 L
.15427 2.19897 L
.15427 2.20399 L
.15427 2.20901 L
.15427 2.21404 L
.15427 2.21906 L
.15427 2.22408 L
.48304 2.22911 L
.27131 2.23413 L
.72251 2.23915 L
.06405 2.24418 L
.12437 2.2492 L
.47181 2.25423 L
.1094 2.25925 L
.56454 2.26427 L
.06643 2.2693 L
.77024 2.27432 L
.0891 2.27934 L
.35122 2.28437 L
.21818 2.28939 L
Mfstroke
.21818 2.28939 m
1 2.29216 L
s
1 2.29668 m
.22274 2.29944 L
.03386 2.30446 L
.22273 2.30949 L
s
.22273 2.30949 m
1 2.31224 L
s
1 2.31677 m
.21819 2.31953 L
.35123 2.32456 L
.0891 2.32958 L
.77021 2.3346 L
.06643 2.33963 L
.56453 2.34465 L
.10939 2.34967 L
.47182 2.3547 L
.12437 2.35972 L
.06405 2.36475 L
.72254 2.36977 L
.27132 2.37479 L
.48304 2.37982 L
.15427 2.38484 L
.15428 2.38986 L
.15427 2.39489 L
.15428 2.39991 L
.15427 2.40493 L
.15428 2.40996 L
.15427 2.41498 L
.15428 2.42001 L
.15427 2.42503 L
.15428 2.43005 L
.15427 2.43508 L
.15428 2.4401 L
.15427 2.44512 L
.15428 2.45015 L
.15427 2.45517 L
.15428 2.46019 L
.15427 2.46522 L
.15428 2.47024 L
.15427 2.47527 L
.15428 2.48029 L
.15427 2.48531 L
.15428 2.49034 L
.15427 2.49536 L
.15428 2.50038 L
.15427 2.50541 L
.15428 2.51043 L
.15427 2.51545 L
.15428 2.52048 L
.15427 2.5255 L
.15427 2.53053 L
.15426 2.53555 L
.15741 2.54057 L
.61372 2.5456 L
.22069 2.55062 L
.67542 2.55564 L
.06656 2.56067 L
Mistroke
.24089 2.56569 L
.75744 2.57071 L
.30502 2.57574 L
.75744 2.58076 L
.30503 2.58579 L
.75746 2.59081 L
.24302 2.59583 L
.77027 2.60086 L
.10922 2.60588 L
.65281 2.6109 L
.40535 2.61593 L
.15062 2.62095 L
Mfstroke
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{147.25, 395.313},
  ImageMargins->{{34, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40002C0001Ra000`40O003h00OTgoo002COol009=o
o`00Tgoo002COol009=oo`00Tgoo002COol009=oo`00Tgoo002COol009=oo`00Tgoo002COol009=o
o`00Tgoo002COol009=oo`00Tgoo002COol009=oo`00Tgoo002COol001ioo`@000=oo`8000Uoo`80
00Aoo`8000Uoo`03001oogoo009oo`8000Aoo`D0009oo`8000Aoo`80009oo`D00003Ool000000080
00=oo`800003Ool0000000<0009oo`8000Aoo`800003Ool0000000<000=oo`03001oogoo009oo`80
00Moo`004goo00<007ooOol027oo00<007ooOol00goo00@007ooOol000Moo`04001oogoo0002Ool0
1000Oomoo`0027oo00D007ooOomoo`00009oo`03001oogoo00=oo`05001oogooOol00002Ool01000
Oomoo`000Woo00D007ooOomoo`0000=oo`03001oogoo00=oo`04001oogoo0002Ool01@00Oomoogoo
00000Woo00@007ooOol0009oo`04001oogoo0005Ool01@00Oomoogoo00000Woo00<007ooOol017oo
000COol00`00Oomoo`09Ool00`00Oomoo`05Ool00`00Oomoo`08Ool01000Oomoo`000Woo00<007oo
Ool01Woo00<007ooOol017oo00<007ooOol00goo00D007ooOomoo`00009oo`04001oogoo0002Ool0
1@00Oomoogoo000017oo00<007ooOol01Goo00@007ooOol000Ioo`04001oogoo0002Ool01000Oomo
o`001Goo00<007ooOol017oo00<007ooOol017oo000COol00`00Oomoo`0:Ool00`00Oomoo`02Ool2
0009Ool20003Ool01000Oomoo`002Goo00@007ooOomoo`8000Ioo`05001oogooOol00002Ool01000
Oomoo`000Woo00D007ooOomoo`0000Eoo`03001oogoo009oo`8000=oo`03001oogoo009oo`8000=o
o`04001oogoo0002Ool00`00Oomoo`04Ool01000Oomoogoo0P001goo000COol00`00Oomoo`08Ool0
1000Oomoo`000goo00<007ooOol027oo00<007ooOol00Woo00@007ooOol000Ioo`04001oogoo0003
Ool00`00Oomoo`05Ool01@00Oomoogoo00000Woo00@007ooOol0009oo`05001oogooOol00003Ool0
1000Oomoo`000goo00<007ooOol00Woo00<007ooOol00Woo00<007ooOol00Woo00@007ooOol0009o
o`05001oogooOol00002Ool01@00Oomoogoo000027oo000COol00`00Oomoo`09Ool20004Ool30008
Ool30003Ool20007Ool40003Ool30004Ool20004Ool20004Ool20003Ool20004Ool20004Ool30000
0goo00000004Ool30003Ool20002Ool20003Ool40003Ool30006Ool001=oo`03001oogoo07eoo`00
4goo00<007ooOol0OGoo000COol00`00Oomoo`1mOol001=oo`03001oogoo07eoo`0047ooP`00000C
Ool00`00Oomoo`0OOolP000nOol001=oo`03001oogoo00QoodP002eoo`004goo00<007ooOol0<goo
;0007Woo000COol00`00Oomoo`0JOom3000POol001=oo`03001oogoo029ooah003eoo`004goo00<0
07ooOol08Woo>`0087oo000COol00`00Oomoo`0?Oom>000POol001=oo`03001oogoo00=oobP0059o
o`004goo00<007ooOol05goo?000:Woo000COol00`00Oomoo`0]OolN000bOol001=oo`03001oogoo
00iooal0051oo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol2000?Ool00`00Oomoo`1/
Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo
000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`00
4goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=o
o`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol0
0`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<0
07ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`8000mo
o`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool0
0`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<0
07ooOol0K7oo000COol00`00Oomoo`0>OolH001GOol001=oo`03001oogoo01QoobL003ioo`004goo
00<007ooOol0<Woo;P007Goo000COol00`00Oomoo`03Ool_001;Ool001=oo`03001oogoo01iooa`0
04=oo`004goo00<007ooOol00WooD@00:Woo000COol00`00Oomoo`0<OolZ0017Ool001=oo`03001o
ogoo00mooaD005Uoo`004goo0P002Goo<@00A7oo000COol00`00Oomoo`0@Oom]000001=oo`03001o
ogoo00]oog8000004goo3P00LWoo000COol00`00Oomoo`0;Oomb000001=oo`03001oogoo015oof`0
00004goo00<007ooOol027oo<@00A7oo000COol00`00Oomoo`0?OolE001IOol001=oo`03001oogoo
00aoobX004Moo`004goo00<007ooOol0:goo:000:Woo000COol00`00Oomoo`02Oolh0013Ool001=o
o`03001oogoo00=oobh004aoo`004goo00<007ooOol0<Goo;`007Goo000COol2000IOolW000nOol0
01=oo`03001oogoo00iooaT005Ioo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00
Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007oo
Ool03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo
00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>
Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`0000=oo`0000000`000Woo
0P0017oo0P000goo00<007ooOol03Woo00<007ooOol0K7oo0003Ool01@00Oomoogoo00000Woo00@0
07ooOol0009oo`04001oogoo000@Ool00`00Oomoo`1/Ool000=oo`05001oogooOol00002Ool01000
Oomoo`000Woo00<007ooOol00P003goo00<007ooOol0K7oo0003Ool01@00Oomoogoo00000Woo00@0
07ooOol0009oo`04001oogoo000@Ool00`00Oomoo`1/Ool000=oo`05001oogooOol00002Ool01000
Oomoo`000Woo00@007ooOol0011oo`03001oogoo06aoo`000Woo0P0017oo0P0017oo0P000goo00<0
07ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001o
ogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomo
o`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00iooah0055oo`004goo00<007ooOol0;7oo7`00
<Woo000COol00`00Oomoo`0GOoll000ZOol001=oo`03001oogoo00=oobP0059oo`004goo00<007oo
Ool03WooC`0087oo000COol2000SOolN000mOol001=oo`03001oogoo029ooc/0021oo`004goo00<0
07ooOol06Woo@`0087oo000COol00`00Oomoo`0dOol[000NOol001=oo`03001oogoo00QoodP002eo
o`004goo00<007ooOol07goo8@00?Goo000COol00`00Oomoo`0>Oola000nOol001=oo`03001oogoo
02aoob@002eoo`004goo00<007ooOol027ooE`007Woo000COol00`00Oomoo`0JOolS0010Ool001=o
o`03001oogoo029ooc/0021oo`004goo00<007ooOol0?goo7P0087oo000COol00`00Oomoo`0ROolk
000POol001=oo`80011oob`0049oo`004goo00<007ooOol00gooD000:Woo000COol00`00Oomoo`0G
Oold000bOol001=oo`03001oogoo00iooal0051oo`004goo00<007ooOol03Woo00<007ooOol0K7oo
000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`00
4goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=o
o`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol0
0`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo0P00
3goo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00io
o`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool0
0`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<0
07ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001o
ogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>OolF001IOol0
01=oo`03001oogoo02AooaH004=oo`004goo00<007ooOol07Goo?00097oo000COol20003Ool/001?
Ool001=oo`03001oogoo00Iooc8004Eoo`004goo00<007ooOol027oo7P00Egoo000COol00`00Oomo
o`03Oom1000iOol001=oo`03001oogoo035oobh001ioo`004goo00<007ooOol01Woo;@00BWoo000C
Ool00`00Oomoo`0FOomW000001=oo`03001oogoo00]oog8000004gooC@00<goo000COol00`00Oomo
o`1:Oolc000001=oo`03001oogoo01Iooc@003=oo`0000=oo`0000000P000goo0P0017oo0P000goo
00<007ooOol01Woo;000Bgoo00000goo001oo`04Ool01000Oomoo`000Woo00@007ooOol0009oo`03
001oogoo00=ooe`001ioo`000Woo00<007ooOol00Woo00@007ooOol0009oo`04001oogoo0002Ool2
000TOolQ000iOol000=oo`05001oogooOol00002Ool01000Oomoo`000Woo00@007ooOol000Yooc00
04Eoo`0000Eoo`00Oomoo`00009oo`04001oogoo0002Ool01000Oomoo`000Woo00<007ooOol01goo
6P00G7oo0002Ool20004Ool20004Ool20003Ool00`00Oomoo`02OomG000TOol001=oo`03001oogoo
01eooah0049oo`004goo00<007ooOol03Woo;000@goo000COol00`00Oomoo`0>Ool00`00Oomoo`1/
Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo
000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`00
4goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=o
o`8000moo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomo
o`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol0
3Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00io
o`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool0
0`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<0
07ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00iooah0055o
o`004goo0P00;Goo7`00<Woo000COol00`00Oomoo`0GOoll000ZOol001=oo`03001oogoo00=oobP0
059oo`004goo00<007ooOol03WooC`0087oo000COol00`00Oomoo`0ROolN000mOol001=oo`03001o
ogoo029ooc/0021oo`004goo00<007ooOol0?7oo8@0087oo000COol00`00Oomoo`0JOom5000NOol0
01=oo`03001oogoo00Qoob`004Uoo`004goo00<007ooOol07goo<@00;Goo000COol00`00Oomoo`0>
Oola000nOol001=oo`03001oogoo02aoob@002eoo`004goo00<007ooOol027ooE`007Woo000COol2
000KOolS0010Ool001=oo`03001oogoo029ooc/0021oo`004goo00<007ooOol0?goo7P0087oo000C
Ool00`00Oomoo`0ROolk000POol001=oo`03001oogoo00moob`0049oo`004goo00<007ooOol00goo
D000:Woo000COol00`00Oomoo`0GOolN0018Ool001=oo`03001oogoo00ioocd0039oo`004goo00<0
07ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001o
ogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomo
o`0>Ool00`00Oomoo`1/Ool001=oo`8000moo`03001oogoo06aoo`004goo00<007ooOol03Woo00<0
07ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001o
ogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomo
o`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0
K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06ao
o`004goo00<007ooOol03Woo00<007ooOol0K7oo0002Ool20004Ool20004Ool20003Ool00`00Oomo
o`0>Ool00`00Oomoo`1/Ool00005Ool007ooOol00002Ool01000Oomoo`000Woo00@007ooOol0009o
o`03001oogoo00ioo`03001oogoo06aoo`000goo00D007ooOomoo`00009oo`04001oogoo0002Ool0
0`00Oomoo`02000?Ool00`00Oomoo`1/Ool000Aoo`04001oogoo0002Ool01000Oomoo`000Woo00@0
07ooOol0011ooah0055oo`0000Eoo`00Oomoo`00009oo`04001oogoo0002Ool01000Oomoo`000Woo
00<007ooOol0;7oo7`00<Woo0002Ool20004Ool20004Ool20003Ool00`00Oomoo`0FOol_000hOol0
01=oo`03001oogoo00Aoob4005Qoo`004goo00<007ooOol027oo;P00Agoo000COol00`00Oomoo`04
OolI001POol001=oo`03001oogoo00QoobX004]oo`004goo00<007ooOol07goo6000AWoo000COol0
0`00Oomoo`0=Ool]0013Ool001=oo`03001oogoo00QooaT005aoo`004goo00<007ooOol047ooK@00
000COol00`00Oomoo`0<Oolo000bOol001=oodd003=oo`004goo00<007ooOol04GooK000000COol0
0`00Oomoo`08OolI001LOol001=oo`03001oogoo00eoobd004=oo`004goo00<007ooOol087oo5`00
AWoo000COol00`00Oomoo`08OolZ001;Ool001=oo`03001oogoo00AooaT0061oo`004goo00<007oo
Ool027oo;P00Agoo000COol00`00Oomoo`04OolP001IOol001=oo`03001oogoo01Ioobl003Qoo`00
4goo00<007ooOol0;Goo7P00<Woo000COol00`00Oomoo`0>OolO001@Ool001=oo`03001oogoo00io
o`03001oogoo06aoo`004goo0P003goo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomo
o`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0
K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06ao
o`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool0
01=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000C
Ool00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo
00<007ooOol03Woo00<007ooOol0K7oo000COol2000?Ool00`00Oomoo`1/Ool001=oo`03001oogoo
00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>
Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo
?@00<Woo000COol00`00Oomoo`0GOolN0018Ool001=oo`03001oogoo00=ooe0002Yoo`004goo00<0
07ooOol03Woo;@00@Woo000COol00`00Oomoo`0ROolk000POol001=oo`03001oogoo03mooah0021o
o`004goo00<007ooOol08Woo>`0087oo000COol00`00Oomoo`0JOolR0011Ool001=oo`8000UooeL0
01ioo`004goo00<007ooOol0;7oo9000;Goo000COol00`00Oomoo`0>Oolb000mOol001=oo`03001o
ogoo01moob0003ioo`004goo00<007ooOol027ooB000;Goo000COol00`00Oomoo`0cOol/000NOol0
01=oo`03001oogoo01Yood<0021oo`004goo00<007ooOol08Woo>`0087oo000COol00`00Oomoo`0R
OolN000mOol001=oo`03001oogoo00moodh0021oo`004goo00<007ooOol00goo:000DWoo0003Ool3
0002Ool20004Ool20003Ool00`00Oomoo`0GOoll000ZOol000Aoo`04001oogoo0002Ool01000Oomo
o`000Woo00@007ooOol002mooah0039oo`0000=oo`0000000`0000Eoo`00Oomoo`00009oo`04001o
ogoo0002Ool2000?OolO001@Ool00005Ool007ooOol00002Ool01000Oomoo`000Woo00@007ooOol0
009oo`03001oogoo00ioo`03001oogoo06aoo`000Woo00<007oo00000Woo00@007ooOol0009oo`04
001oogoo0002Ool00`00Oomoo`0>Ool00`00Oomoo`1/Ool000=oo`8000=oo`8000Aoo`8000=oo`03
001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00
Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007oo
Ool03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo
00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>
Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo0P003goo00<007oo
Ool0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo
06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/
Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo
000COol00`00Oomoo`0>OolF001IOol001=oo`03001oogoo01eooah0049oo`004goo00<007ooOol0
0WooE`0097oo000COol00`00Oomoo`06OolK001LOol001=oo`03001oogoo00Qooc0004Eoo`004goo
00<007ooOol097oo8000>Goo000COol20004OomL000NOol001=oo`03001oogoo00Ioobd004Yoo`00
4goo00<007ooOol05Woo<`00=7oo000COol00`00Oomoo`19Oold000001=oodd003=oo`004goo00<0
07ooOol02gooLP00000COol00`00Oomoo`0FOomW000001=oo`03001oogoo01Qooa4005Aoo`004goo
00<007ooOol01WooF@007Woo000COol00`00Oomoo`03Ool^001<Ool001=oo`03001oogoo00Qooc`0
03Uoo`004goo00<007ooOol01goo<@00AGoo000COol00`00Oomoo`02Ool[001@Ool001=oo`8001io
oc`002Aoo`004goo00<007ooOol097oo5P00@goo000COol00`00Oomoo`0>OolF001IOol001=oo`03
001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00
Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007oo
Ool03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo
00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>
Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo0P003goo00<007oo
Ool0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo
06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo000COol00`00Oomoo`0>Ool00`00Oomoo`1/
Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`004goo00<007ooOol03Woo00<007ooOol0K7oo
000COol00`00Oomoo`0>Ool00`00Oomoo`1/Ool001=oo`03001oogoo00ioo`03001oogoo06aoo`00
4goo00<007ooOol03Woo7P00DGoo000COol00`00Oomoo`0GOold000bOol0009oo`8000Aoo`8000Ao
o`8000=oo`03001oogoo02]oobP002Yoo`0000Eoo`00Oomoo`00009oo`04001oogoo0002Ool01000
Oomoo`000Woo00<007ooOol00goo>000@Woo0004Ool01000Oomoo`000Woo00@007ooOol0009oo`03
001oogoo008002=ooc/0021oo`000Woo0P000goo00@007ooOol0009oo`04001oogoo0002Ool00`00
Oomoo`0oOolN000POol0009oo`03001oogoo009oo`04001oogoo0002Ool01000Oomoo`000Woo00<0
07ooOol08Woo>`0087oo0002Ool30003Ool20004Ool20003Ool00`00Oomoo`0JOolR0011Ool001=o
o`03001oogoo00QooeL001ioo`004goo00<007ooOol0;7oo9000;Goo000COol00`00Oomoo`0>Oolb
000mOol001=oo`03001oogoo07eoo`004goo00<007ooOol0OGoo000COol00`00Oomoo`1mOol001=o
o`03001oogoo07eoo`004goo00<007ooOol0OGoo000COol00`00Oomoo`1mOol001=oo`03001oogoo
07eoo`004goo0P00OWoo000COol00`00Oomoo`1mOol009=oo`00Tgoo002COol009=oo`00Tgoo002C
Ool009=oo`00Tgoo002COol009=oo`00Tgoo002COol009=oo`00Tgoo002COol009=oo`00Tgoo002C
Ool009=oo`00Tgoo002COol00001\
\>"],
  ImageRangeCache->{{{0, 146.25}, {394.313, 0}} -> {-30.1116, -49.8388, \
1.53458, 1.53458}}],

Cell[BoxData[
    TagBox[
      RowBox[{"\[SkeletonIndicator]", "Graphics", "\[SkeletonIndicator]"}],
      False,
      Editable->False]], "Output"]
}, Open  ]],

Cell["There are also functiosn for removing keys and columns", "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"nodx", "=", 
        RowBox[{"mfsDeleteKey", "[", " ", "\n", "\t\t", 
          RowBox[{
            RowBox[{"mfsDeleteColumn", "[", 
              RowBox[{
                RowBox[{"OPTICS", "[", "0", "]"}], ",", "\"\<DX\>\""}], "]"}],
             ",", "\n", "\t\t\t", "\"\<DELTA\>\""}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
    RowBox[{
      RowBox[{"nobetas", "=", " ", 
        RowBox[{"mfsDeleteColumn", "[", 
          RowBox[{
            RowBox[{"OPTICS", "[", "0", "]"}], ",", 
            RowBox[{"{", 
              RowBox[{"\"\<BETX\>\"", ",", "\"\<BETY\>\""}], "}"}]}], "]"}]}],
       ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsKeyNames", "[", "nodx", "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"GAMTR\"\>", ",", "\<\"ALFA\"\>", ",", "\<\"XIY\"\>", 
        ",", "\<\"XIX\"\>", ",", "\<\"QY\"\>", ",", "\<\"QX\"\>", 
        ",", "\<\"CIRCUM\"\>", ",", "\<\"TYPE\"\>", ",", "\<\"COMMENT\"\>", 
        ",", "\<\"ORIGIN\"\>", ",", "\<\"DATE\"\>", ",", "\<\"TIME\"\>"}], 
      "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsColumnNames", "[", "nodx", "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"NAME\"\>", ",", "\<\"BETX\"\>", ",", "\<\"BETY\"\>"}], 
      "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsColumnNames", "[", "nobetas", "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"NAME\"\>", ",", "\<\"DX\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
We shall use these reduced data objects in the next \
subsection.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Merging several mfs objects and making sure they match", "Subsubsection"],

Cell[TextData[{
  "It is often useful to be able to combine the contents of two or more table \
files generated by MAD.  For example you may want to combine SURVEY and TWISS \
information for the same set of elements.  The function ",
  StyleBox["mfsMerge", "Input"],
  " allows you to combine two mfs objects.  Using it, we can recombine the \
two partial optics tables "
}], "Text"],

Cell[BoxData[
    RowBox[{
      RowBox[{"togetherAgain", "=", 
        RowBox[{"mfsMerge", "[", 
          RowBox[{"{", 
            RowBox[{"nodx", ",", "nobetas"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"mfsColumnNames", "[", "togetherAgain", "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"BETX\"\>", ",", "\<\"BETY\"\>", ",", "\<\"DX\"\>", 
        ",", "\<\"NAME\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
The columns of data in the mfs objects must be of the same length.  \
If column names are duplicated in more than one of the mfs objects only the \
column belonging to the first mfs object in the list is retained.   \
\>", 
  "Text"],

Cell[TextData[{
  "In addition, the function ",
  StyleBox["mfsMerge", "Input"],
  " has an option designed to ensure that columns that are duplicated in more \
than one of the mfs objects are identical or, in the case of numerical data, \
equal to machine precision.  By default only the columns called \"NAME\" are \
checked."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Options", "[", "mfsMerge", "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"matchColumns", "\[Rule]", 
        RowBox[{"{", "\<\"NAME\"\>", "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
To enforce the stronger requirement, that all columns with \
identical names match up, do\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"SetOptions", "[", 
      RowBox[{"mfsMerge", ",", 
        RowBox[{"matchColumns", "->", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"matchColumns", "\[Rule]", "Automatic"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
  "or give the option on individual calls to ",
  StyleBox["mfsMerge", "Input"],
  "."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reversing the order in the columns", "Subsubsection"],

Cell["\<\
In MAD, calculations for electrons have to be done with the \
sequence of elements reversed with respect to that for positrons.  So we need \
a function to reverse the order of the rows in the block of columns :\
\>", 
  "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Short", "[", 
      RowBox[{
        RowBox[{"mfsColumn", "[", 
          RowBox[{
            RowBox[{"mfsReverse", "[", " ", 
              RowBox[{"OPTICS", "[", "0", "]"}], "]"}], ",", "\"\<NAME\>\""}],
           "]"}], ",", "7"}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[
      RowBox[{"{", 
        RowBox[{"\<\"ENDLEP\"\>", ",", "\<\"PU.QL1B.L1\"\>", 
          ",", "\<\"PU.QL2B.L1\"\>", ",", "\<\"PU.QL4B.L1\"\>", 
          ",", "\<\"PU.QL5.L1\"\>", ",", "\<\"PU.QL6.L1\"\>", 
          ",", "\<\"PU.QL7.L1\"\>", ",", "\<\"PU.QL8.L1\"\>", 
          ",", "\<\"PU.QL9.L1\"\>", ",", "\<\"PU.QL10.L1\"\>", 
          ",", "\<\"PU.QL11.L1\"\>", ",", "\<\"PU.QL12.L1\"\>", 
          ",", "\<\"PU.QL14.L1\"\>", ",", "\<\"PU.QL15.L1\"\>", 
          ",", "\<\"PU.QL16.L1\"\>", ",", 
          RowBox[{"\[LeftSkeleton]", "480", "\[RightSkeleton]"}], 
          ",", "\<\"PU.QL15.R1\"\>", ",", "\<\"PU.QL14.R1\"\>", 
          ",", "\<\"PU.QL12.R1\"\>", ",", "\<\"PU.QL11.R1\"\>", 
          ",", "\<\"PU.QL10.R1\"\>", ",", "\<\"PU.QL9.R1\"\>", 
          ",", "\<\"PU.QL8.R1\"\>", ",", "\<\"PU.QL7.R1\"\>", 
          ",", "\<\"PU.QL6.R1\"\>", ",", "\<\"PU.QL5.R1\"\>", 
          ",", "\<\"PU.QL4B.R1\"\>", ",", "\<\"PU.QL2B.R1\"\>", 
          ",", "\<\"PU.QL1B.R1\"\>", ",", "\<\"IP1\"\>"}], "}"}],
      (Short[ #, 7]&)]], "Output"]
}, Open  ]],

Cell["\<\
Other changes to the columns of data have not been implemented so \
far.\
\>", "Text",
  CellTags->"Examples section"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Saving an mfs object in a file", "Subsubsection"],

Cell["\<\
The new version of the object can then be saved in a file specified \
by the user.  Here we take a temporary file.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[{
    RowBox[{
      RowBox[{"junk", "=", 
        RowBox[{"OpenTemporary", "[", "]"}]}], ";"}], "\n", 
    RowBox[{
      RowBox[{"Save", "[", 
        RowBox[{"junk", ",", "qpmfs"}], "]"}], ";"}], "\n", 
    RowBox[{"Close", "[", "junk", "]"}]}], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"C:\\\\TEMP\\\\000008a00269\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
  "Of course, a file can contain any number of mfs objects together with \
other ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " objects."
}], "Text",
  CellTags->"Examples section"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Updating files created with earlier  versions of the package", \
"Subsection"],

Cell["\<\
Some functions names were changed in Version 2.0.  The following \
set of rules gives the correspondences.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData["mfsVersion2UpdateRules"], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{"\<\"interpretDescriptors\"\>", 
          "\[Rule]", "\<\"mfsInterpretKeys\"\>"}], ",", 
        RowBox[{"\<\"keyValue\"\>", "\[Rule]", "\<\"mfsKeyValue\"\>"}], ",", 
        RowBox[{"\<\"columnNames\"\>", "\[Rule]", "\<\"mfsColumnNames\"\>"}], 
        ",", 
        RowBox[{"\<\"descriptorNames\"\>", "\[Rule]", "\<\"mfsKeyNames\"\>"}],
         ",", 
        RowBox[{"\<\"colValue\"\>", "\[Rule]", "\<\"mfsColumnValue\"\>"}], 
        ",", 
        RowBox[{"\<\"addDescriptor\"\>", "\[Rule]", "\<\"mfsAddKey\"\>"}], 
        ",", 
        RowBox[{"\<\"editDescriptor\"\>", "\[Rule]", "\<\"mfsEditKey\"\>"}], 
        ",", 
        RowBox[{"\<\"deleteDescriptor\"\>", 
          "\[Rule]", "\<\"mfsDeleteKey\"\>"}], ",", 
        RowBox[{"\<\"symplecticJ\"\>", "\[Rule]", "\<\"SymplecticJ\"\>"}]}], 
      "}"}]], "Output"]
}, Open  ]],

Cell["\<\
In fact, the old names still work but generate warning messages.  \
To update notebooks and other files based on older versions of the package \
you can use the function\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "mfsVersion2Update"}]], "Input"],

Cell[BoxData["\<\"mfsVersion2Update[oldfile,newfile] will create a new \
version of a file in which names of functions in Version 1.x of the \
Madtomma`Mfs`Mfs` package are changed to their equivalents in Version \
2.x.\"\>"], "Print"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Miscellaneous extra functionality  and utilities", "Subsection",
  CellTags->"Examples section"],

Cell["\<\
The previous subsection illustrated the most important functions in \
the package.  Other functions in the package are inteneded to be used \
internally.  However some of them may be useful to the user and have been \
made visible.  Their names are given by listing all the names in the package \
context.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Names", "[", "\"\<Madtomma`Mfs`Mfs`*\>\"", "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"addDescriptor\"\>", ",", "\<\"columnNames\"\>", 
        ",", "\<\"colValue\"\>", ",", "\<\"deleteDescriptor\"\>", 
        ",", "\<\"descriptorNames\"\>", ",", "\<\"editDescriptor\"\>", 
        ",", "\<\"interpretDescriptors\"\>", ",", "\<\"interpretTagValue\"\>",
         ",", "\<\"keepTemporaryFile\"\>", ",", "\<\"keyValue\"\>", 
        ",", "\<\"matchColumns\"\>", ",", "\<\"mfs\"\>", ",", "\<\"Mfs\"\>", 
        ",", "\<\"mfsAddColumn\"\>", ",", "\<\"mfsAddKey\"\>", 
        ",", "\<\"mfsColumn\"\>", ",", "\<\"mfsColumnMatch\"\>", 
        ",", "\<\"mfsColumnNames\"\>", ",", "\<\"mfsColumnValue\"\>", 
        ",", "\<\"mfsDeleteColumn\"\>", ",", "\<\"mfsDeleteKey\"\>", 
        ",", "\<\"mfsEditKey\"\>", ",", "\<\"mfsInterpret\"\>", 
        ",", "\<\"mfsInterpretColumns\"\>", ",", "\<\"mfsInterpretKeys\"\>", 
        ",", "\<\"mfsKeyNames\"\>", ",", "\<\"mfsKeyValue\"\>", 
        ",", "\<\"mfsMember\"\>", ",", "\<\"mfsMerge\"\>", 
        ",", "\<\"mfsNotMember\"\>", ",", "\<\"mfsRange\"\>", 
        ",", "\<\"mfsReverse\"\>", ",", "\<\"mfsSelect\"\>", 
        ",", "\<\"mfsTypes\"\>", ",", "\<\"mfsVerbose\"\>", 
        ",", "\<\"mfsVersion2Update\"\>", 
        ",", "\<\"mfsVersion2UpdateRules\"\>", ",", "\<\"removeQuotes\"\>", 
        ",", "\<\"removeUnwantedLines\"\>", 
        ",", "\<\"stringRemoveLeadingTrailingBlanks\"\>", 
        ",", "\<\"tfsFormatRules\"\>", ",", "\<\"tfsParseDescriptorLine\"\>", 
        ",", "\<\"tfsParseHeaderBlock\"\>", ",", "\<\"tfsRead\"\>"}], 
      "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Some of them are illustrated in the following (hidden) subsections. \
 All have usage messages that can be seen by prefixing their names with a \
question mark in the usual way.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell["Removing lines  from a file", "Subsubsection",
  CellTags->"Examples section"],

Cell["\<\
This function is used internally but may be useful for other \
purposes.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "removeUnwantedLines"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"removeUnwantedLines[infile,outfile,string] copies file \
infile to outfile, removing all lines containing string.\"\>"], "Print"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      RowBox[{"junk", "=", 
        RowBox[{"First", "[", 
          RowBox[{"OpenTemporary", "[", "]"}], "]"}]}], ";", 
      RowBox[{"Close", "[", "%", "]"}]}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{
      RowBox[{"General", "::", "\<\"stream\"\>"}], 
      RowBox[{
      ":", " "}], "\<\"\\!\\(Null\\) is not a string, InputStream[ ], or \
OutputStream[ ].\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{"Close", "[", "Null", "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"Close", "[", "junk", "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"C:\\\\TEMP\\\\000009a00269\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"removeUnwantedLines", "[", 
      RowBox[{"sampleFile", ",", "junk", ",", "\"\<Segment\>\"", ",", 
        RowBox[{"mfsVerbose", "->", "False"}]}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"C:\\\\TEMP\\\\000009a00269\"\>"], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Removing quotes from strings", "Subsubsection",
  CellTags->"Examples section"],

Cell["\<\
This function is used internally but may be useful for other \
purposes.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "removeQuotes"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"removeQuotes[x] will remove any double quotes \\\" \
explicitly included in a string x.  If x is not a string then it is returned \
unchanged.\"\>"], "Print"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"removeQuotes", "[", "\"\<\\\"IP4\\\"\>\"", "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"IP4\"\>"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples for Descriptor Lines", "Subsubsection",
  CellTags->"Examples section"],

Cell["\<\
This function is probably of limited use outside the package.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "tfsParseDescriptorLine"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"tfsParseDescriptorLine[string] takes a TFS descriptor line \
as a string and returns a list consisting of the TFS key and its \
value.\"\>"], "Print"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
    "tfsParseDescriptorLine", "[", 
      "\"\<@ X                %le    -.388353611751E-03\>\"", "\n", "\t\t", 
      "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"X\"\>", ",", 
        RowBox[{"-", "0.00038835361175100004`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
    "tfsParseDescriptorLine", "[", 
      "\"\<@ TYPE             %08s \\\"TRACK\\\" \>\"", "\n", "\t\t", 
      "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"TYPE\"\>", ",", "\<\"TRACK\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
(To make the next example work, we have to insert backslashes \
before the quotes to simulate the value we would get when reading the line \
from a file.)\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      RowBox[{
      "tfsParseDescriptorLine", "[", "\n", "\t", 
        "\"\<@ ORIGIN           %24s \\\"MAD 8.21/11 RS6000 - AIX\\\"\>\"", 
        "\n", "\t\t", "]"}], "//", "FullForm"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    TagBox[
      StyleBox[
        RowBox[{"List", "[", 
          RowBox[{"\"\<ORIGIN\>\"", ",", "\"\<MAD 8.21/11 RS6000 - AIX\>\""}],
           "]"}],
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The header block", "Subsubsection",
  CellTags->"Examples section"],

Cell["\<\
This function can be useful to preview or summarise what is in a file before \
reading it all in.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"tfsParseHeaderBlock", "[", 
      RowBox[{"sampleFile", ",", 
        RowBox[{"mfsVerbose", "->", "False"}]}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"\<\"TYPE\"\>", ",", "\<\"TRACK\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"X\"\>", ",", 
                RowBox[{"-", "0.00038835361175100004`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"PX\"\>", ",", 
                RowBox[{"-", "0.0000167029349567`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"Y\"\>", ",", 
                RowBox[{"-", "0.00038184396626099996`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"PY\"\>", ",", 
                RowBox[{"-", "2.9493485039200003`*^-6"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"ET\"\>", ",", "0.0000102626001956`"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"EY\"\>", ",", "1.05428403375`*^-10"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"EX\"\>", ",", "2.98256612951`*^-8"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E11\"\>", ",", "5.25333002895`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E12\"\>", ",", 
                RowBox[{"-", "3.43414759638`*^-17"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E13\"\>", ",", "0.185018159186`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E14\"\>", ",", "0.0829796374966`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E15\"\>", ",", 
                RowBox[{"-", "0.0026510085008000003`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E16\"\>", ",", 
                RowBox[{"-", "0.0111704421761`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E21\"\>", ",", "0.011563874218500001`"}], "}"}], 
            ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E22\"\>", ",", "0.190232632187`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E23\"\>", ",", "0.00199451841627`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E24\"\>", ",", "0.00440399981552`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E25\"\>", ",", 
                RowBox[{"-", "0.0000414979161278`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E26\"\>", ",", "0.0013772593876200002`"}], "}"}], 
            ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E31\"\>", ",", 
                RowBox[{"-", "0.118845072845`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E32\"\>", ",", "0.0846274349415`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E33\"\>", ",", "5.35717075012`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E34\"\>", ",", "1.0125579562`*^-16"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"E35\"\>", ",", 
                RowBox[{"-", "0.00436134264581`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E36\"\>", ",", 
                RowBox[{"-", "0.00337974309699`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E41\"\>", ",", "0.00148938982552`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E42\"\>", ",", 
                RowBox[{"-", "0.00652173877267`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E43\"\>", ",", "0.003038214738`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E44\"\>", ",", "0.186544772125`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E45\"\>", ",", 
                RowBox[{"-", "0.000051178374618`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E46\"\>", ",", "0.000242385635122`"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"E51\"\>", ",", 
                RowBox[{"-", "0.0174585465196`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E52\"\>", ",", 
                RowBox[{"-", "0.0050503245767`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E53\"\>", ",", 
                RowBox[{"-", "0.00377175447184`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E54\"\>", ",", 
                RowBox[{"-", "0.0018883004966399998`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E55\"\>", ",", "2.37836715853`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E56\"\>", ",", 
                RowBox[{"-", "7.68138184883`*^-17"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E61\"\>", ",", 
                RowBox[{"-", "0.000102914870556`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E62\"\>", ",", "0.000189745354973`"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"E63\"\>", ",", 
                RowBox[{"-", "0.00011706941393`"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E64\"\>", ",", "0.000342355037377`"}], "}"}], ",", 
            
            RowBox[{"{", 
              RowBox[{"\<\"E65\"\>", ",", "0.004009558592179999`"}], "}"}], 
            ",", 
            RowBox[{"{", 
              RowBox[{"\<\"E66\"\>", ",", "0.420458776176`"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"COMMENT\"\>", ",", "\<\"\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{"\<\"ORIGIN\"\>", 
                ",", "\<\"MAD 8.21/11 RS6000 - AIX\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"DATE\"\>", ",", "\<\"01/05/97\"\>"}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{"\<\"TIME\"\>", ",", "\<\"15.40.36\"\>"}], "}"}]}], 
          "}"}], ",", 
        RowBox[{"{", 
          RowBox[{
          "Number", ",", "Number", ",", "Number", ",", "Number", ",", 
            "Number", ",", "Number", ",", "Number", ",", "Number"}], "}"}], 
        ",", 
        RowBox[{"{", 
          
          RowBox[{"\<\"TURNS\"\>", ",", "\<\"PARTICLE\"\>", ",", "\<\"X\"\>", 
            ",", "\<\"PX\"\>", ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", 
            ",", "\<\"T\"\>", ",", "\<\"DELTAP\"\>"}], "}"}], ",", "2335"}], 
      "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Supplementary details about generating new variables", "Subsubsection",
  CellTags->"Examples section"],

Cell[TextData[{
  "We saw how the function ",
  StyleBox["mfsInterpret", "Input"],
  " can be used to create new symbols in the Global context.  This works as \
follows.  The ",
  StyleBox["Mfs", "Input"],
  " package contains a function which creates a symbol from a string and \
assigns it a value."
}], "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"?", "interpretTagValue"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["\<\"interpretTagValue[{\\\"tag\\\",val}] creates a variable tag \
and assigms it the value val.\"\>"], "Print"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"interpretTagValue", "[", 
      RowBox[{"{", 
        RowBox[{"\"\<abc\>\"", ",", "123"}], "}"}], "]"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData["123"], "Output"]
}, Open  ]],

Cell["The symbol now evaluates", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData["abc"], "Input",
  CellTags->"Examples section"],

Cell[BoxData["123"], "Output"]
}, Open  ]],

Cell["\<\
This is used by the following function to create symbols for all \
the keys in an mfs data object.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{
      RowBox[{"mfsInterpret", "[", "qpmfs", "]"}], ";"}]], "InputOnly",
  CellTags->"Examples section"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Variables (re-)assigned: \"\>", "\[InvisibleSpace]", 
        RowBox[{"{", 
          
          RowBox[{"\<\"TYPE\"\>", ",", "\<\"X\"\>", ",", "\<\"PX\"\>", 
            ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", ",", "\<\"EY\"\>", 
            ",", "\<\"EX\"\>", ",", "\<\"E11\"\>", ",", "\<\"E12\"\>", 
            ",", "\<\"E13\"\>", ",", "\<\"E14\"\>", ",", "\<\"E15\"\>", 
            ",", "\<\"E16\"\>", ",", "\<\"E21\"\>", ",", "\<\"E22\"\>", 
            ",", "\<\"E23\"\>", ",", "\<\"E24\"\>", ",", "\<\"E25\"\>", 
            ",", "\<\"E26\"\>", ",", "\<\"E31\"\>", ",", "\<\"E32\"\>", 
            ",", "\<\"E33\"\>", ",", "\<\"E34\"\>", ",", "\<\"E35\"\>", 
            ",", "\<\"E36\"\>", ",", "\<\"E41\"\>", ",", "\<\"E42\"\>", 
            ",", "\<\"E43\"\>", ",", "\<\"E44\"\>", ",", "\<\"E45\"\>", 
            ",", "\<\"E46\"\>", ",", "\<\"E51\"\>", ",", "\<\"E52\"\>", 
            ",", "\<\"E53\"\>", ",", "\<\"E54\"\>", ",", "\<\"E55\"\>", 
            ",", "\<\"E56\"\>", ",", "\<\"E61\"\>", ",", "\<\"E62\"\>", 
            ",", "\<\"E63\"\>", ",", "\<\"E64\"\>", ",", "\<\"E65\"\>", 
            ",", "\<\"E66\"\>", ",", "\<\"COMMENT\"\>", ",", "\<\"ORIGIN\"\>",
             ",", "\<\"DATE\"\>", ",", "\<\"TIME\"\>", ",", "\<\"REMARK\"\>", 
            ",", "\<\"KICKVALUE\"\>", ",", "\<\"AMATRIX\"\>"}], "}"}]}],
      SequenceForm[ 
      "Variables (re-)assigned: ", {"TYPE", "X", "PX", "Y", "PY", "EY", "EX", 
        "E11", "E12", "E13", "E14", "E15", "E16", "E21", "E22", "E23", "E24", 
        "E25", "E26", "E31", "E32", "E33", "E34", "E35", "E36", "E41", "E42", 
        "E43", "E44", "E45", "E46", "E51", "E52", "E53", "E54", "E55", "E56", 
        "E61", "E62", "E63", "E64", "E65", "E66", "COMMENT", "ORIGIN", "DATE",
         "TIME", "REMARK", "KICKVALUE", "AMATRIX"}],
      Editable->False]], "Print"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Variables (re-)assigned: \"\>", "\[InvisibleSpace]", 
        RowBox[{"{", 
          
          RowBox[{"\<\"TURNS\"\>", ",", "\<\"PARTICLE\"\>", ",", "\<\"X\"\>", 
            ",", "\<\"PX\"\>", ",", "\<\"Y\"\>", ",", "\<\"PY\"\>", 
            ",", "\<\"T\"\>", ",", "\<\"DELTAP\"\>"}], "}"}]}],
      SequenceForm[ 
      "Variables (re-)assigned: ", {"TURNS", "PARTICLE", "X", "PX", "Y", "PY",
         "T", "DELTAP"}],
      Editable->False]], "Print"]
}, Open  ]],

Cell["\<\
Now we can evaluate them or use them in calculations by referring \
to their names.\
\>", "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"TYPE", ",", 
        FractionBox["KICKVALUE", 
          SqrtBox[
            RowBox[{"EX", "+", "EY"}]]]}], "}"}]], "Input",
  CellTags->"Examples section"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{"\<\"TRACK\"\>", ",", "23.120580136360722`"}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Palettes for this package", "Section",
  CellTags->"palette"],

Cell[TextData[{
  "Mathematica's palettes provide a convenient way to input commands without \
having to remember their names or  syntax. They also help considerably to \
reduce syntax errors when you build up complex expressions. By selecting it \
ant then using the ",
  StyleBox["File/Generate Palette from Selection",
    FontWeight->"Bold"],
  " command, the following input cell can be transformed into a palette \
containing templates for the most commonly used commands in this package.  "
}], "Text"],

Cell[BoxData[GridBox[{
        {
          ButtonBox[
            StyleBox[
              RowBox[{"Needs", "[", "\"\<Madtomma`Mfs`Mfs`\>\"", "]"}],
              "Input"]]},
        {
          ButtonBox[
            RowBox[{"mfsInterpret", "[", "\[SelectionPlaceholder]", "]"}]]},
        {
          ButtonBox[
            RowBox[{"tfsRead", "[", "\[SelectionPlaceholder]", "]"}]]},
        {
          ButtonBox[
            RowBox[{"mfsKeyNames", "[", "\[SelectionPlaceholder]", "]"}]]},
        {
          ButtonBox[
            RowBox[{"mfsKeyValue", "[", 
              RowBox[{"\[SelectionPlaceholder]", ",", "\[Placeholder]"}], 
              "]"}]]},
        {
          ButtonBox[
            RowBox[{
            "mfsColumnNames", "[", "\[SelectionPlaceholder]", "]"}]]},
        {
          ButtonBox[
            RowBox[{"mfsColumn", "[", 
              RowBox[{
              "\[SelectionPlaceholder]", ",", "\"\<\[Placeholder]\>\""}], 
              "]"}]]},
        {
          ButtonBox[
            RowBox[{"mfsColumn", "[", 
              RowBox[{"\[SelectionPlaceholder]", ",", 
                RowBox[{"{", 
                  RowBox[{
                  "\"\<\[Placeholder]\>\"", ",", "\"\<\[Placeholder]\>\""}], 
                  "}"}]}], "]"}]]},
        {
          ButtonBox[
            RowBox[{"mfsMember", "[", 
              RowBox[{
              "\[SelectionPlaceholder]", ",", "\"\<\[Placeholder]\>\"", ",", 
                "\"\<\[Placeholder]\>\""}], "]"}]]},
        {
          ButtonBox[
            RowBox[{"mfsRange", "[", 
              RowBox[{
              "\[SelectionPlaceholder]", ",", "\"\<\[Placeholder]\>\"", ",", 
                RowBox[{"{", 
                  RowBox[{"\[Placeholder]", ",", "\[Placeholder]"}], "}"}]}], 
              "]"}]]},
        {
          ButtonBox[
            RowBox[{"mfsSelect", "[", 
              RowBox[{"\[SelectionPlaceholder]", ",", "\[Placeholder]"}], 
              "]"}]]},
        {
          ButtonBox[
            RowBox[{"mfsColumnValue", "[", 
              RowBox[{
              "\[SelectionPlaceholder]", ",", "\[Placeholder]", ",", 
                "\"\<\[Placeholder]\>\""}], "]"}]]}
        },
      RowSpacings->0,
      ColumnSpacings->0,
      GridDefaultElement:>ButtonBox[ "\\[Placeholder]"]]], "Input",
  CellMargins->{{Inherited, Inherited}, {5, Inherited}},
  Evaluatable->True,
  CellGroupingRules->"InputGrouping",
  PageBreakAbove->True,
  PageBreakWithin->False,
  GroupPageBreakWithin->False,
  CellLabelMargins->{{11, Inherited}, {Inherited, Inherited}},
  DefaultFormatType->DefaultInputFormatType,
  LineSpacing->{1.25, 0},
  AutoItalicWords->{},
  FormatType->InputForm,
  ScriptMinSize->9,
  ShowStringCharacters->True,
  NumberMarks->True,
  CounterIncrements->"Input",
  StyleMenuListing->None,
  FontFamily->"Courier",
  FontWeight->"Bold"],

Cell[TextData[{
  "The option ",
  StyleBox["ShowGroupOpenCloseIcon->True ", "Input"],
  "is useful in palettes.  Note that the palette buttons are most useful if \
you first select a part of an expression on your screen to which you want to \
apply them. "
}], "Text"],

Cell["\<\
Generating your own palette from this notebook has the advantage \
that you can modify it to your taste.  Otherwise, the default ready-made \
palette will appear automatically on your screen when you load the package \
(if you don't want it, just close it).\
\>", "Text"],

Cell["\<\
Of course, you can also generate commands quickly by other standard \
mechanisms such as auto-completion (Ctrl-K or Ctrl-Shift-K).   As in all \
properly constructed packages, every function has an associated usage message \
giving brief instructions, e.g.,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?interpretDescriptors\)\)], "Input"],

Cell[BoxData[
    \("Obsolete function name.  Please use mfsInterpretKeys."\)], "Print"]
}, Open  ]],

Cell[TextData[{
  "Here is another palette for the functions used to modify mfs objects.  It \
is available as ",
  StyleBox["MfsEditPalette.nb.", "Input"]
}], "Text"],

Cell[BoxData[GridBox[{
        {
          
          ButtonBox[
            \(mfsAddKey[
              \[SelectionPlaceholder], {\[Placeholder], \[Placeholder]}]\)]},
        {
          
          ButtonBox[
            \(mfsEditKey[
              \[SelectionPlaceholder], {\[Placeholder], \[Placeholder]}]\)]},
        {
          
          ButtonBox[
            \(mfsDeleteKey[\[SelectionPlaceholder], \[Placeholder]]\)]},
        {
          
          ButtonBox[
            \(mfsAddColumn[\[SelectionPlaceholder], \[Placeholder], 
              \[Placeholder]]\)]},
        {
          
          ButtonBox[
            \(mfsDeleteColumn[\[SelectionPlaceholder], \[Placeholder]]\)]},
        {
          
          ButtonBox[
            \(mfsMerge[{\[SelectionPlaceholder], \[Placeholder]}]\)]},
        {
          ButtonBox[\(mfsReverse[\[SelectionPlaceholder]]\)]}
        },
      RowSpacings->0,
      ColumnSpacings->0,
      GridDefaultElement:>ButtonBox[ "\\[Placeholder]"]]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Bibliography", "Section"],

Cell["\<\
[1] Stephen Wolfram, The Mathematica Book, 3rd ed., Wolfram \
Media/Cambridge University Press, 1996.\
\>", "Text",
  CellTags->"Wolfram book"],

Cell[TextData[{
  "[2]  Roman Maeder, ",
  StyleBox["Programming in Mathematica",
    FontSlant->"Italic"],
  ", 3rd ed. Addison-Wesley, 1996"
}], "Text",
  CellTags->"Maeder book"],

Cell[TextData[ButtonBox["\thttp://www.wolfram.com/~maeder/ProgInMath/",
  ButtonData:>{
    URL[ "http://www.wolfram.com/~maeder/ProgInMath/"], None},
  ButtonStyle->"Hyperlink"]], "Program"],

Cell["[3] The MAD  Home Page", "Text",
  CellTags->"MAD manual"],

Cell[TextData[ButtonBox["\thttp://wwwslap.cern.ch/mad/",
  ButtonData:>{
    URL[ "http://wwwslap.cern.ch/mad/"], None},
  ButtonStyle->"Hyperlink"]], "Program"]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"4.1 for Microsoft Windows",
ScreenRectangle->{{0, 1024}, {0, 695}},
AutoGeneratedPackage->Automatic,
ScreenStyleEnvironment->"Working",
WindowToolbars->"EditBar",
InitializationCellEvaluation->False,
CellGrouping->Automatic,
WindowSize->{1014, 666},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"GraphicsPrintingFormat"->"DownloadPostScript"},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
PrivateFontOptions->{"FontType"->"Outline"},
StyleDefinitions -> "BeamPhysicsNote.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Intrduction section"->{
    Cell[2034, 75, 66, 1, 57, "Section",
      CellTags->"Intrduction section"],
    Cell[2103, 78, 1250, 38, 91, "Text",
      CellTags->"Intrduction section"],
    Cell[3356, 118, 332, 7, 60, "Text",
      CellTags->"Intrduction section"],
    Cell[3691, 127, 688, 12, 90, "Text",
      CellTags->"Intrduction section"],
    Cell[4382, 141, 665, 12, 90, "Text",
      CellTags->"Intrduction section"],
    Cell[5050, 155, 354, 11, 44, "Text",
      CellTags->"Intrduction section"],
    Cell[6672, 209, 659, 17, 75, "Text",
      CellTags->"Intrduction section"],
    Cell[7334, 228, 573, 14, 59, "Text",
      CellTags->"Intrduction section"],
    Cell[8007, 249, 240, 7, 43, "Text",
      CellTags->"Intrduction section"]},
  "Reference section"->{
    Cell[9121, 287, 61, 1, 37, "Section",
      CellTags->"Reference section"],
    Cell[9207, 292, 63, 1, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[9273, 295, 137, 5, 30, "Text",
      CellTags->"Reference section"],
    Cell[9447, 305, 64, 1, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[9514, 308, 63, 1, 30, "Text",
      CellTags->"Reference section"],
    Cell[9614, 314, 65, 1, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[9682, 317, 272, 5, 47, "Text",
      CellTags->"Reference section"],
    Cell[9957, 324, 139, 4, 30, "Text",
      CellTags->"Reference section"],
    Cell[11978, 367, 74, 1, 26, "Subsubsection",
      CellTags->"Reference section"],
    Cell[12055, 370, 53, 1, 30, "Text",
      CellTags->"Reference section"],
    Cell[12145, 376, 134, 5, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[12282, 383, 52, 1, 30, "Text",
      CellTags->"Reference section"],
    Cell[12371, 389, 65, 1, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[12439, 392, 751, 15, 164, "Text",
      CellTags->"Reference section"],
    Cell[13193, 409, 1139, 24, 132, "Text",
      CellTags->"Reference section"],
    Cell[14335, 435, 972, 21, 150, "Text",
      CellTags->"Reference section"],
    Cell[15344, 461, 66, 1, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[15413, 464, 90, 1, 30, "Text",
      CellTags->"Reference section"],
    Cell[15540, 470, 64, 1, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[15607, 473, 253, 5, 47, "Text",
      CellTags->"Reference section"],
    Cell[15863, 480, 238, 4, 38, "Program",
      CellTags->"Reference section"],
    Cell[16138, 489, 66, 1, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[16207, 492, 356, 8, 48, "Text",
      CellTags->"Reference section"],
    Cell[16600, 505, 68, 1, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[16671, 508, 186, 5, 31, "Text",
      CellTags->"Reference section"],
    Cell[16860, 515, 176, 5, 31, "Text",
      CellTags->"Reference section"],
    Cell[17039, 522, 588, 16, 48, "Text",
      CellTags->"Reference section"],
    Cell[17630, 540, 302, 8, 30, "Text",
      CellTags->"Reference section"],
    Cell[17935, 550, 210, 7, 30, "Text",
      CellTags->"Reference section"],
    Cell[18148, 559, 147, 4, 30, "Text",
      CellTags->"Reference section"],
    Cell[19202, 590, 70, 1, 40, "Subsubsection",
      CellTags->"Reference section"],
    Cell[19275, 593, 103, 1, 30, "Text",
      CellTags->"Reference section"],
    Cell[19381, 596, 122, 3, 30, "Text",
      CellTags->"Reference section"],
    Cell[19506, 601, 196, 4, 30, "Text",
      CellTags->"Reference section"]},
  "Setup section"->{
    Cell[19751, 611, 53, 1, 57, "Section",
      CellTags->"Setup section"],
    Cell[19807, 614, 276, 6, 47, "Text",
      CellTags->"Setup section"],
    Cell[20108, 624, 75, 1, 44, "Subsection",
      CellTags->"Setup section"],
    Cell[20645, 640, 354, 9, 47, "Text",
      CellTags->"Setup section"],
    Cell[21036, 654, 70, 1, 44, "Subsection",
      CellTags->"Setup section"],
    Cell[21109, 657, 924, 24, 64, "Text",
      CellTags->"Setup section"],
    Cell[22058, 685, 150, 4, 23, "InputOnly",
      CellTags->"Setup section"],
    Cell[24135, 730, 413, 10, 47, "Text",
      CellTags->"Setup section"],
    Cell[24551, 742, 331, 7, 48, "Text",
      CellTags->"Setup section"],
    Cell[83835, 2458, 115, 2, 24, "Input",
      CellTags->"Setup section"]},
  "Interface section"->{
    Cell[24931, 755, 89, 2, 57, "Section",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[25023, 759, 156, 4, 30, "Text",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[25204, 767, 135, 2, 44, "Subsection",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[25364, 773, 215, 6, 26, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[25684, 788, 155, 4, 44, "Subsection",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[25842, 794, 151, 5, 26, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[26018, 803, 295, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[26532, 818, 261, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[27012, 833, 205, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[27359, 844, 250, 5, 44, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[27612, 851, 268, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[28259, 871, 268, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[28530, 878, 219, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[28752, 884, 352, 8, 61, "Input",
      Evaluatable->False,
      CellTags->"Interface section"],
    Cell[29107, 894, 311, 6, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[29421, 902, 282, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[29706, 909, 284, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[29993, 916, 293, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[30289, 923, 369, 6, 78, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[30661, 931, 219, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[30883, 938, 255, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[31141, 945, 205, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[31349, 952, 225, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[31577, 958, 211, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[31791, 965, 236, 5, 44, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[32030, 972, 212, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[32245, 979, 378, 6, 78, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[32626, 987, 223, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[32852, 993, 208, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[33063, 1000, 224, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[33290, 1006, 249, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[33542, 1013, 259, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[33804, 1020, 287, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[34094, 1027, 234, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[34331, 1034, 277, 5, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[34965, 1053, 245, 5, 44, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[35213, 1060, 208, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[35446, 1069, 314, 6, 61, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[35974, 1083, 210, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[36187, 1090, 243, 5, 44, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[36433, 1097, 214, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[37216, 1117, 232, 5, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[39955, 1193, 122, 2, 28, "Subsection",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[40080, 1197, 160, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[40243, 1203, 179, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[40425, 1209, 152, 3, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[40580, 1214, 159, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[40742, 1220, 160, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[40905, 1226, 162, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[41070, 1232, 163, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"],
    Cell[41236, 1238, 216, 4, 27, "Input",
      InitializationCell->True,
      CellTags->"Interface section"]},
  "Examples section"->{
    Cell[100673, 3119, 76, 1, 37, "Section",
      CellTags->"Examples section"],
    Cell[100774, 3124, 97, 1, 43, "Subsection",
      CellTags->"Examples section"],
    Cell[100874, 3127, 360, 7, 44, "Text",
      CellTags->"Examples section"],
    Cell[101259, 3138, 456, 10, 27, "Input",
      CellTags->"Examples section"],
    Cell[102105, 3164, 185, 5, 31, "Text",
      CellTags->"Examples section"],
    Cell[102315, 3173, 66, 1, 27, "Input",
      CellTags->"Examples section"],
    Cell[102454, 3180, 120, 4, 29, "Text",
      CellTags->"Examples section"],
    Cell[102599, 3188, 85, 2, 27, "Input",
      CellTags->"Examples section"],
    Cell[102824, 3196, 209, 5, 29, "Text",
      CellTags->"Examples section"],
    Cell[103036, 3203, 253, 7, 23, "InputOnly",
      CellTags->"Examples section"],
    Cell[103292, 3212, 297, 6, 44, "Text",
      CellTags->"Examples section"],
    Cell[103592, 3220, 363, 7, 46, "Text",
      CellTags->"Examples section"],
    Cell[103958, 3229, 184, 5, 31, "Text",
      CellTags->"Examples section"],
    Cell[104167, 3238, 124, 3, 27, "Input",
      CellTags->"Examples section"],
    Cell[106898, 3305, 235, 7, 31, "Text",
      CellTags->"Examples section"],
    Cell[180901, 5479, 87, 1, 39, "Subsection",
      CellTags->"Examples section"],
    Cell[181454, 5495, 105, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[181562, 5498, 401, 11, 59, "Text",
      CellTags->"Examples section"],
    Cell[181988, 5513, 103, 2, 24, "Input",
      CellTags->"Examples section"],
    Cell[183272, 5538, 181, 5, 28, "Text",
      CellTags->"Examples section"],
    Cell[183478, 5547, 187, 4, 24, "Input",
      CellTags->"Examples section"],
    Cell[183750, 5558, 143, 3, 24, "Input",
      CellTags->"Examples section"],
    Cell[183970, 5566, 189, 7, 28, "Text",
      CellTags->"Examples section"],
    Cell[184184, 5577, 139, 3, 24, "Input",
      CellTags->"Examples section"],
    Cell[184527, 5590, 144, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[184696, 5598, 268, 7, 24, "Input",
      CellTags->"Examples section"],
    Cell[185262, 5616, 168, 6, 27, "Text",
      CellTags->"Examples section"],
    Cell[185455, 5626, 265, 7, 24, "Input",
      CellTags->"Examples section"],
    Cell[185837, 5642, 105, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[185945, 5645, 154, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[186124, 5653, 106, 2, 24, "Input",
      CellTags->"Examples section"],
    Cell[186488, 5664, 149, 4, 28, "Text",
      CellTags->"Examples section"],
    Cell[186662, 5672, 87, 2, 24, "Input",
      CellTags->"Examples section"],
    Cell[187055, 5682, 238, 5, 44, "Text",
      CellTags->"Examples section"],
    Cell[187318, 5691, 227, 6, 24, "Input",
      CellTags->"Examples section"],
    Cell[188797, 5725, 293, 6, 44, "Text",
      CellTags->"Examples section"],
    Cell[189115, 5735, 402, 10, 24, "Input",
      CellTags->"Examples section"],
    Cell[191917, 5810, 459, 12, 44, "Text",
      CellTags->"Examples section"],
    Cell[192401, 5826, 98, 2, 24, "Input",
      CellTags->"Examples section"],
    Cell[221445, 6740, 121, 4, 28, "Text",
      CellTags->"Examples section"],
    Cell[221591, 6748, 138, 3, 24, "Input",
      CellTags->"Examples section"],
    Cell[221928, 6761, 237, 6, 44, "Text",
      CellTags->"Examples section"],
    Cell[222190, 6771, 169, 5, 24, "Input",
      CellTags->"Examples section"],
    Cell[224292, 6822, 241, 6, 44, "Text",
      CellTags->"Examples section"],
    Cell[224558, 6832, 142, 3, 24, "Input",
      CellTags->"Examples section"],
    Cell[224834, 6845, 117, 2, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[229013, 6996, 156, 6, 39, "Subsection",
      CellTags->"Examples section"],
    Cell[229172, 7004, 803, 14, 106, "Text",
      CellTags->"Examples section"],
    Cell[229978, 7020, 155, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[230158, 7028, 80, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[230241, 7031, 192, 6, 28, "Text",
      CellTags->"Examples section"],
    Cell[230458, 7041, 474, 10, 41, "Input",
      CellTags->"Examples section"],
    Cell[231092, 7057, 274, 8, 24, "Input",
      CellTags->"Examples section"],
    Cell[231391, 7069, 139, 3, 24, "Input",
      CellTags->"Examples section"],
    Cell[231733, 7083, 82, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[231818, 7086, 802, 24, 77, "Text",
      CellTags->"Examples section"],
    Cell[232645, 7114, 87, 2, 24, "Input",
      CellTags->"Examples section"],
    Cell[232884, 7122, 468, 11, 60, "Text",
      CellTags->"Examples section"],
    Cell[233377, 7137, 251, 6, 24, "Input",
      CellTags->"Examples section"],
    Cell[233815, 7153, 199, 5, 24, "Input",
      CellTags->"Examples section"],
    Cell[234077, 7163, 486, 14, 60, "Text",
      CellTags->"Examples section"],
    Cell[234566, 7179, 536, 14, 24, "Input",
      CellTags->"Examples section"],
    Cell[235105, 7195, 266, 9, 27, "Text",
      CellTags->"Examples section"],
    Cell[235396, 7208, 352, 9, 24, "Input",
      CellTags->"Examples section"],
    Cell[236429, 7237, 360, 11, 44, "Text",
      CellTags->"Examples section"],
    Cell[236814, 7252, 851, 20, 58, "Input",
      CellTags->"Examples section"],
    Cell[238473, 7295, 397, 12, 44, "Text",
      CellTags->"Examples section"],
    Cell[238895, 7311, 739, 19, 58, "Input",
      CellTags->"Examples section"],
    Cell[242114, 7393, 519, 13, 60, "Text",
      CellTags->"Examples section"],
    Cell[242636, 7408, 589, 16, 24, "Input",
      CellTags->"Examples section"],
    Cell[243250, 7428, 350, 9, 24, "Input",
      CellTags->"Examples section"],
    Cell[243937, 7451, 83, 1, 27, "Text",
      CellTags->"Examples section"],
    Cell[244023, 7454, 784, 19, 58, "Input",
      CellTags->"Examples section"],
    Cell[244844, 7478, 86, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[244933, 7481, 221, 5, 43, "Text",
      CellTags->"Examples section"],
    Cell[245157, 7488, 178, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[245338, 7494, 257, 7, 24, "Input",
      CellTags->"Examples section"],
    Cell[245620, 7505, 235, 6, 24, "Input",
      CellTags->"Examples section"],
    Cell[248400, 7577, 354, 9, 24, "Input",
      CellTags->"Examples section"],
    Cell[249202, 7602, 262, 6, 41, "Text",
      CellTags->"Examples section"],
    Cell[249467, 7610, 332, 9, 24, "Input",
      CellTags->"Examples section"],
    Cell[249824, 7623, 311, 8, 24, "Input",
      CellTags->"Examples section"],
    Cell[250720, 7651, 227, 7, 27, "Text",
      CellTags->"Examples section"],
    Cell[250950, 7660, 339, 9, 24, "Input",
      CellTags->"Examples section"],
    Cell[251314, 7673, 140, 3, 24, "Input",
      CellTags->"Examples section"],
    Cell[251690, 7688, 80, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[251773, 7691, 533, 12, 60, "Text",
      CellTags->"Examples section"],
    Cell[252309, 7705, 664, 17, 41, "Input",
      CellTags->"Examples section"],
    Cell[252998, 7726, 123, 3, 24, "Input",
      CellTags->"Examples section"],
    Cell[253897, 7747, 185, 6, 27, "Text",
      CellTags->"Examples section"],
    Cell[254107, 7757, 91, 2, 24, "Input",
      CellTags->"Examples section"],
    Cell[254373, 7767, 447, 11, 24, "Input",
      CellTags->"Examples section"],
    Cell[261368, 7950, 133, 5, 39, "Subsection",
      CellTags->"Examples section"],
    Cell[261593, 7961, 279, 9, 43, "Text",
      CellTags->"Examples section"],
    Cell[261875, 7972, 343, 10, 24, "Input",
      CellTags->"Examples section"],
    Cell[262221, 7984, 394, 11, 25, "Input",
      CellTags->"Examples section"],
    Cell[262618, 7997, 637, 16, 39, "Input",
      CellTags->"Examples section"],
    Cell[263280, 8017, 190, 5, 24, "Input",
      CellTags->"Examples section"],
    Cell[264555, 8055, 262, 7, 44, "Text",
      CellTags->"Examples section"],
    Cell[264842, 8066, 144, 3, 24, "Input",
      CellTags->"Examples section"],
    Cell[265039, 8074, 91, 1, 27, "Text",
      CellTags->"Examples section"],
    Cell[265133, 8077, 346, 10, 24, "Input",
      CellTags->"Examples section"],
    Cell[265504, 8091, 144, 3, 24, "Input",
      CellTags->"Examples section"],
    Cell[265731, 8099, 79, 1, 27, "Text",
      CellTags->"Examples section"],
    Cell[265813, 8102, 199, 5, 24, "Input",
      CellTags->"Examples section"],
    Cell[266015, 8109, 74, 1, 27, "Text",
      CellTags->"Examples section"],
    Cell[266114, 8114, 103, 2, 24, "Input",
      CellTags->"Examples section"],
    Cell[301268, 9387, 270, 6, 43, "Text",
      CellTags->"Examples section"],
    Cell[301563, 9397, 312, 8, 24, "Input",
      CellTags->"Examples section"],
    Cell[302981, 9429, 128, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[303204, 9440, 170, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[303399, 9448, 302, 8, 58, "Input",
      CellTags->"Examples section"],
    Cell[303780, 9461, 209, 7, 27, "Text",
      CellTags->"Examples section"],
    Cell[305803, 9528, 102, 1, 39, "Subsection",
      CellTags->"Examples section"],
    Cell[305908, 9531, 361, 7, 59, "Text",
      CellTags->"Examples section"],
    Cell[306294, 9542, 118, 2, 15, "Input",
      CellTags->"Examples section"],
    Cell[308017, 9574, 233, 5, 43, "Text",
      CellTags->"Examples section"],
    Cell[308275, 9583, 84, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[308362, 9586, 128, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[308515, 9594, 97, 2, 24, "Input",
      CellTags->"Examples section"],
    Cell[308799, 9604, 231, 6, 24, "Input",
      CellTags->"Examples section"],
    Cell[309343, 9625, 96, 2, 24, "Input",
      CellTags->"Examples section"],
    Cell[309540, 9634, 223, 4, 24, "Input",
      CellTags->"Examples section"],
    Cell[309876, 9646, 85, 1, 22, "Subsubsection",
      CellTags->"Examples section"],
    Cell[309964, 9649, 128, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[310117, 9657, 90, 2, 15, "Input",
      CellTags->"Examples section"],
    Cell[310423, 9668, 118, 2, 15, "Input",
      CellTags->"Examples section"],
    Cell[310631, 9678, 86, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[310720, 9681, 117, 3, 27, "Text",
      CellTags->"Examples section"],
    Cell[310862, 9688, 100, 2, 15, "Input",
      CellTags->"Examples section"],
    Cell[311170, 9699, 194, 5, 32, "Input",
      CellTags->"Examples section"],
    Cell[311538, 9714, 188, 5, 32, "Input",
      CellTags->"Examples section"],
    Cell[311847, 9726, 210, 5, 43, "Text",
      CellTags->"Examples section"],
    Cell[312082, 9735, 259, 6, 49, "Input",
      CellTags->"Examples section"],
    Cell[312691, 9758, 73, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[312767, 9761, 153, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[312945, 9769, 186, 4, 15, "Input",
      CellTags->"Examples section"],
    Cell[319592, 9924, 109, 1, 28, "Subsubsection",
      CellTags->"Examples section"],
    Cell[319704, 9927, 345, 9, 60, "Text",
      CellTags->"Examples section"],
    Cell[320074, 9940, 95, 2, 15, "Input",
      CellTags->"Examples section"],
    Cell[320334, 9950, 173, 4, 15, "Input",
      CellTags->"Examples section"],
    Cell[320555, 9959, 72, 1, 27, "Text",
      CellTags->"Examples section"],
    Cell[320652, 9964, 61, 1, 15, "Input",
      CellTags->"Examples section"],
    Cell[320761, 9970, 154, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[320940, 9978, 130, 3, 48, "InputOnly",
      CellTags->"Examples section"],
    Cell[323497, 10028, 139, 4, 27, "Text",
      CellTags->"Examples section"],
    Cell[323661, 10036, 204, 6, 29, "Input",
      CellTags->"Examples section"]},
  "mfsInterpret"->{
    Cell[107170, 3317, 124, 4, 43, "Subsection",
      CellTags->"mfsInterpret"]},
  "palette"->{
    Cell[324051, 10054, 67, 1, 37, "Section",
      CellTags->"palette"]},
  "Wolfram book"->{
    Cell[329770, 10231, 153, 4, 30, "Text",
      CellTags->"Wolfram book"]},
  "Maeder book"->{
    Cell[329926, 10237, 181, 6, 30, "Text",
      CellTags->"Maeder book"]},
  "MAD manual"->{
    Cell[330304, 10250, 64, 1, 30, "Text",
      CellTags->"MAD manual"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Intrduction section", 331688, 10289},
  {"Reference section", 332441, 10308},
  {"Setup section", 335239, 10377},
  {"Interface section", 336036, 10398},
  {"Examples section", 341804, 10552},
  {"mfsInterpret", 353805, 10847},
  {"palette", 353903, 10850},
  {"Wolfram book", 353998, 10853},
  {"Maeder book", 354095, 10856},
  {"MAD manual", 354190, 10859}
  }
*)

(*NotebookFileOutline
Notebook[{
Cell[1705, 50, 64, 1, 30, "Text"],
Cell[1772, 53, 26, 4, 64, "Text"],

Cell[CellGroupData[{
Cell[1823, 61, 112, 5, 111, "Title"],
Cell[1938, 68, 71, 3, 90, "Subtitle"],

Cell[CellGroupData[{
Cell[2034, 75, 66, 1, 57, "Section",
  CellTags->"Intrduction section"],
Cell[2103, 78, 1250, 38, 91, "Text",
  CellTags->"Intrduction section"],
Cell[3356, 118, 332, 7, 60, "Text",
  CellTags->"Intrduction section"],
Cell[3691, 127, 688, 12, 90, "Text",
  CellTags->"Intrduction section"],
Cell[4382, 141, 665, 12, 90, "Text",
  CellTags->"Intrduction section"],
Cell[5050, 155, 354, 11, 44, "Text",
  CellTags->"Intrduction section"],
Cell[5407, 168, 115, 3, 27, "Text"],
Cell[5525, 173, 368, 11, 43, "Text"],
Cell[5896, 186, 315, 7, 43, "Text"],
Cell[6214, 195, 269, 7, 43, "Text"],
Cell[6486, 204, 183, 3, 17, "Program"],
Cell[6672, 209, 659, 17, 75, "Text",
  CellTags->"Intrduction section"],
Cell[7334, 228, 573, 14, 59, "Text",
  CellTags->"Intrduction section"],
Cell[7910, 244, 94, 3, 27, "Text"],
Cell[8007, 249, 240, 7, 43, "Text",
  CellTags->"Intrduction section"],

Cell[CellGroupData[{
Cell[8272, 260, 40, 0, 39, "Subsection"],
Cell[8315, 262, 343, 6, 60, "Text"],
Cell[8661, 270, 72, 0, 27, "Text"],
Cell[8736, 272, 139, 3, 43, "Text"],
Cell[8878, 277, 194, 4, 43, "Text"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[9121, 287, 61, 1, 37, "Section",
  CellTags->"Reference section"],

Cell[CellGroupData[{
Cell[9207, 292, 63, 1, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[9273, 295, 137, 5, 30, "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[9447, 305, 64, 1, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[9514, 308, 63, 1, 30, "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[9614, 314, 65, 1, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[9682, 317, 272, 5, 47, "Text",
  CellTags->"Reference section"],
Cell[9957, 324, 139, 4, 30, "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[10133, 333, 34, 0, 40, "Subsubsection"],
Cell[10170, 335, 1771, 27, 420, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[11978, 367, 74, 1, 26, "Subsubsection",
  CellTags->"Reference section"],
Cell[12055, 370, 53, 1, 30, "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12145, 376, 134, 5, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[12282, 383, 52, 1, 30, "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[12371, 389, 65, 1, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[12439, 392, 751, 15, 164, "Text",
  CellTags->"Reference section"],
Cell[13193, 409, 1139, 24, 132, "Text",
  CellTags->"Reference section"],
Cell[14335, 435, 972, 21, 150, "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[15344, 461, 66, 1, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[15413, 464, 90, 1, 30, "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[15540, 470, 64, 1, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[15607, 473, 253, 5, 47, "Text",
  CellTags->"Reference section"],
Cell[15863, 480, 238, 4, 38, "Program",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[16138, 489, 66, 1, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[16207, 492, 356, 8, 48, "Text",
  CellTags->"Reference section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[16600, 505, 68, 1, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[16671, 508, 186, 5, 31, "Text",
  CellTags->"Reference section"],
Cell[16860, 515, 176, 5, 31, "Text",
  CellTags->"Reference section"],
Cell[17039, 522, 588, 16, 48, "Text",
  CellTags->"Reference section"],
Cell[17630, 540, 302, 8, 30, "Text",
  CellTags->"Reference section"],
Cell[17935, 550, 210, 7, 30, "Text",
  CellTags->"Reference section"],
Cell[18148, 559, 147, 4, 30, "Text",
  CellTags->"Reference section"],
Cell[18298, 565, 603, 10, 64, "Text"],
Cell[18904, 577, 261, 8, 31, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[19202, 590, 70, 1, 40, "Subsubsection",
  CellTags->"Reference section"],
Cell[19275, 593, 103, 1, 30, "Text",
  CellTags->"Reference section"],
Cell[19381, 596, 122, 3, 30, "Text",
  CellTags->"Reference section"],
Cell[19506, 601, 196, 4, 30, "Text",
  CellTags->"Reference section"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[19751, 611, 53, 1, 57, "Section",
  CellTags->"Setup section"],
Cell[19807, 614, 276, 6, 47, "Text",
  CellTags->"Setup section"],

Cell[CellGroupData[{
Cell[20108, 624, 75, 1, 44, "Subsection",
  CellTags->"Setup section"],
Cell[20186, 627, 237, 5, 47, "Text"],
Cell[20426, 634, 216, 4, 38, "Program"],
Cell[20645, 640, 354, 9, 47, "Text",
  CellTags->"Setup section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[21036, 654, 70, 1, 44, "Subsection",
  CellTags->"Setup section"],
Cell[21109, 657, 924, 24, 64, "Text",
  CellTags->"Setup section"],

Cell[CellGroupData[{
Cell[22058, 685, 150, 4, 23, "InputOnly",
  CellTags->"Setup section"],
Cell[22211, 691, 1909, 36, 171, "Print"]
}, Open  ]],
Cell[24135, 730, 413, 10, 47, "Text",
  CellTags->"Setup section"],
Cell[24551, 742, 331, 7, 48, "Text",
  CellTags->"Setup section"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[24931, 755, 89, 2, 57, "Section",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[25023, 759, 156, 4, 30, "Text",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{
Cell[25204, 767, 135, 2, 44, "Subsection",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{
Cell[25364, 773, 215, 6, 26, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[25582, 781, 53, 1, 26, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[25684, 788, 155, 4, 44, "Subsection",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[25842, 794, 151, 5, 26, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{
Cell[26018, 803, 295, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[26316, 810, 179, 3, 70, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[26532, 818, 261, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[26796, 825, 179, 3, 70, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[27012, 833, 205, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[27220, 839, 124, 2, 70, "Output"]
}, Open  ]],
Cell[27359, 844, 250, 5, 44, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[27612, 851, 268, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{
Cell[27905, 860, 206, 4, 44, "Input",
  InitializationCell->True],
Cell[28114, 866, 130, 2, 70, "Output"]
}, Open  ]],
Cell[28259, 871, 268, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[28530, 878, 219, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[28752, 884, 352, 8, 61, "Input",
  Evaluatable->False,
  CellTags->"Interface section"],
Cell[29107, 894, 311, 6, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[29421, 902, 282, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[29706, 909, 284, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[29993, 916, 293, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[30289, 923, 369, 6, 78, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[30661, 931, 219, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[30883, 938, 255, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[31141, 945, 205, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[31349, 952, 225, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[31577, 958, 211, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[31791, 965, 236, 5, 44, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[32030, 972, 212, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[32245, 979, 378, 6, 78, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[32626, 987, 223, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[32852, 993, 208, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[33063, 1000, 224, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[33290, 1006, 249, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[33542, 1013, 259, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[33804, 1020, 287, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[34094, 1027, 234, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[34331, 1034, 277, 5, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{
Cell[34633, 1043, 186, 3, 27, "Input",
  InitializationCell->True],
Cell[34822, 1048, 128, 2, 26, "Output"]
}, Open  ]],
Cell[34965, 1053, 245, 5, 44, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[35213, 1060, 208, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],

Cell[CellGroupData[{
Cell[35446, 1069, 314, 6, 61, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[35763, 1077, 196, 3, 42, "Output"]
}, Open  ]],
Cell[35974, 1083, 210, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[36187, 1090, 243, 5, 44, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[36433, 1097, 214, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[36650, 1104, 254, 4, 61, "Input",
  InitializationCell->True],
Cell[36907, 1110, 306, 5, 61, "Input",
  InitializationCell->True],
Cell[37216, 1117, 232, 5, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[37451, 1124, 242, 5, 61, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[37718, 1133, 257, 4, 61, "Input",
  InitializationCell->True],
Cell[37978, 1139, 208, 3, 42, "Output"]
}, Open  ]],
Cell[38201, 1145, 294, 5, 61, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[38520, 1154, 262, 4, 75, "Input",
  InitializationCell->True],
Cell[38785, 1160, 196, 3, 70, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[39018, 1168, 327, 6, 75, "Input",
  InitializationCell->True],
Cell[39348, 1176, 235, 3, 70, "Output"]
}, Open  ]],
Cell[39598, 1182, 320, 6, 75, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[39955, 1193, 122, 2, 28, "Subsection",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[40080, 1197, 160, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[40243, 1203, 179, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[40425, 1209, 152, 3, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[40580, 1214, 159, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[40742, 1220, 160, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[40905, 1226, 162, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[41070, 1232, 163, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[41236, 1238, 216, 4, 27, "Input",
  InitializationCell->True,
  CellTags->"Interface section"],
Cell[41455, 1244, 176, 3, 27, "Input",
  InitializationCell->True],
Cell[41634, 1249, 183, 4, 27, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[41842, 1257, 153, 3, 27, "Input",
  InitializationCell->True],
Cell[41998, 1262, 101, 2, 70, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[42136, 1269, 158, 3, 27, "Input",
  InitializationCell->True],
Cell[42297, 1274, 105, 2, 70, "Output"]
}, Open  ]],
Cell[42417, 1279, 143, 3, 27, "Input",
  InitializationCell->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[42609, 1288, 61, 1, 37, "Section",
  InitializationCell->True],
Cell[42673, 1291, 131, 3, 30, "Text"],

Cell[CellGroupData[{
Cell[42829, 1298, 97, 1, 44, "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[42951, 1303, 65, 1, 23, "Input",
  InitializationCell->True],
Cell[43019, 1306, 61, 1, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[43107, 1311, 76, 1, 28, "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[43208, 1316, 120, 3, 44, "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[43353, 1323, 77, 2, 27, "Input",
  InitializationCell->True],
Cell[43433, 1327, 39, 1, 70, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[43521, 1334, 86, 1, 28, "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[43632, 1339, 60, 0, 40, "Subsubsection"],
Cell[43695, 1341, 330, 8, 48, "Text"],

Cell[CellGroupData[{
Cell[44050, 1353, 89, 1, 27, "Input"],
Cell[44142, 1356, 59, 1, 70, "Output"]
}, Open  ]],
Cell[44216, 1360, 288, 6, 44, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[44529, 1370, 695, 12, 180, "Input",
  InitializationCell->True],
Cell[45227, 1384, 187, 3, 70, "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[45463, 1393, 53, 0, 26, "Subsubsection"],
Cell[45519, 1395, 384, 6, 44, "Text"],
Cell[45906, 1403, 224, 5, 61, "Input",
  InitializationCell->True],
Cell[46133, 1410, 166, 4, 29, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[46336, 1419, 61, 0, 26, "Subsubsection"],
Cell[46400, 1421, 101, 3, 27, "Text"],

Cell[CellGroupData[{
Cell[46526, 1428, 354, 7, 143, "Input",
  InitializationCell->True],
Cell[46883, 1437, 183, 3, 70, "Message"],
Cell[47069, 1442, 185, 3, 70, "Message"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[47303, 1451, 57, 0, 26, "Subsubsection"],
Cell[47363, 1453, 504, 8, 64, "Text"],
Cell[47870, 1463, 187, 4, 31, "Text"],
Cell[48060, 1469, 700, 15, 95, "Input",
  InitializationCell->True],
Cell[48763, 1486, 344, 6, 47, "Text"],
Cell[49110, 1494, 236, 4, 47, "Text"],
Cell[49349, 1500, 175, 4, 30, "Text"],

Cell[CellGroupData[{
Cell[49549, 1508, 425, 7, 78, "Input",
  InitializationCell->True],
Cell[49977, 1517, 156, 3, 21, "Message"]
}, Open  ]],

Cell[CellGroupData[{
Cell[50170, 1525, 63, 1, 27, "Input"],
Cell[50236, 1528, 57, 1, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[50330, 1534, 61, 1, 27, "Input"],
Cell[50394, 1537, 332, 5, 42, "Output"]
}, Open  ]],
Cell[50741, 1545, 1580, 26, 418, "Input",
  InitializationCell->True],
Cell[52324, 1573, 276, 6, 48, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[52637, 1584, 54, 0, 40, "Subsubsection"],
Cell[52694, 1586, 162, 4, 30, "Text"],
Cell[52859, 1592, 479, 13, 48, "Text"],

Cell[CellGroupData[{
Cell[53363, 1609, 61, 1, 27, "Input"],
Cell[53427, 1612, 333, 5, 42, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[53797, 1622, 190, 4, 24, "Input",
  InitializationCell->True],
Cell[53990, 1628, 366, 5, 42, "Output"]
}, Closed]],
Cell[54371, 1636, 1497, 26, 415, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[55905, 1667, 71, 0, 26, "Subsubsection"],
Cell[55979, 1669, 325, 7, 47, "Text"],
Cell[56307, 1678, 132, 3, 30, "Text"],
Cell[56442, 1683, 542, 11, 112, "Input",
  InitializationCell->True],
Cell[56987, 1696, 215, 5, 30, "Text"],
Cell[57205, 1703, 285, 7, 27, "Input",
  Evaluatable->False],
Cell[57493, 1712, 109, 3, 30, "Text"],
Cell[57605, 1717, 324, 7, 44, "Input",
  InitializationCell->True],
Cell[57932, 1726, 133, 3, 30, "Text"],
Cell[58068, 1731, 927, 18, 146, "Input",
  InitializationCell->True],
Cell[58998, 1751, 131, 3, 30, "Text"],
Cell[59132, 1756, 149, 3, 27, "Input",
  InitializationCell->True],
Cell[59284, 1761, 166, 3, 27, "Input",
  InitializationCell->True],
Cell[59453, 1766, 135, 3, 27, "Input",
  InitializationCell->True],
Cell[59591, 1771, 122, 4, 31, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[59750, 1780, 69, 0, 40, "Subsubsection"],
Cell[59822, 1782, 45, 0, 30, "Text"],
Cell[59870, 1784, 111, 2, 27, "Input",
  InitializationCell->True],
Cell[59984, 1788, 127, 3, 30, "Text"],
Cell[60114, 1793, 358, 7, 112, "Input",
  InitializationCell->True],
Cell[60475, 1802, 146, 3, 27, "Input",
  InitializationCell->True],
Cell[60624, 1807, 144, 3, 27, "Input",
  InitializationCell->True],
Cell[60771, 1812, 48, 0, 30, "Text"],
Cell[60822, 1814, 103, 2, 27, "Input",
  InitializationCell->True],
Cell[60928, 1818, 155, 4, 31, "Text"],
Cell[61086, 1824, 289, 5, 78, "Input",
  InitializationCell->True],
Cell[61378, 1831, 50, 0, 30, "Text"],
Cell[61431, 1833, 138, 3, 27, "Input",
  InitializationCell->True],
Cell[61572, 1838, 90, 2, 27, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[61699, 1845, 51, 0, 26, "Subsubsection"],
Cell[61753, 1847, 58, 0, 27, "Text"],
Cell[61814, 1849, 276, 5, 66, "Input",
  InitializationCell->True],
Cell[62093, 1856, 59, 0, 27, "Text"],
Cell[62155, 1858, 220, 5, 83, "Input",
  InitializationCell->True],
Cell[62378, 1865, 88, 2, 27, "Text"],
Cell[62469, 1869, 210, 5, 32, "Input",
  InitializationCell->True],
Cell[62682, 1876, 247, 5, 32, "Input",
  InitializationCell->True],
Cell[62932, 1883, 94, 2, 27, "Text"],
Cell[63029, 1887, 375, 8, 66, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[63441, 1900, 44, 0, 26, "Subsubsection"],
Cell[63488, 1902, 44, 0, 29, "Text"],
Cell[63535, 1904, 281, 5, 67, "Input",
  InitializationCell->True],
Cell[63819, 1911, 520, 11, 187, "Input",
  InitializationCell->True],
Cell[64342, 1924, 581, 13, 167, "Input",
  InitializationCell->True],
Cell[64926, 1939, 70, 0, 29, "Text"],
Cell[64999, 1941, 134, 3, 27, "Input",
  InitializationCell->True],
Cell[65136, 1946, 66, 0, 29, "Text"],
Cell[65205, 1948, 435, 8, 187, "Input",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[65665, 1960, 317, 6, 167, "Input",
  InitializationCell->True],
Cell[65985, 1968, 188, 3, 70, "Message"]
}, Open  ]],
Cell[66188, 1974, 60, 0, 29, "Text"],
Cell[66251, 1976, 174, 3, 47, "Input",
  InitializationCell->True],
Cell[66428, 1981, 311, 5, 107, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[66776, 1991, 44, 0, 26, "Subsubsection"],
Cell[66823, 1993, 75, 0, 29, "Text"],

Cell[CellGroupData[{
Cell[66923, 1997, 532, 9, 247, "Input",
  InitializationCell->True],
Cell[67458, 2008, 181, 3, 70, "Message"]
}, Open  ]],
Cell[67654, 2014, 185, 4, 46, "Text"],
Cell[67842, 2020, 454, 8, 187, "Input"],
Cell[68299, 2030, 382, 6, 63, "Text"],
Cell[68684, 2038, 284, 5, 87, "Input",
  InitializationCell->True],
Cell[68971, 2045, 49, 0, 29, "Text"],
Cell[69023, 2047, 178, 3, 47, "Input",
  InitializationCell->True],
Cell[69204, 2052, 97, 3, 29, "Text"],
Cell[69304, 2057, 161, 3, 47, "Input",
  InitializationCell->True],
Cell[69468, 2062, 116, 2, 27, "Input",
  InitializationCell->True],
Cell[69587, 2066, 207, 4, 46, "Text"],
Cell[69797, 2072, 2682, 52, 467, "Input",
  Evaluatable->False],
Cell[72482, 2126, 156, 3, 46, "Text"],
Cell[72641, 2131, 2052, 41, 407, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[74730, 2177, 75, 0, 26, "Subsubsection"],
Cell[74808, 2179, 312, 7, 46, "Text"],
Cell[75123, 2188, 101, 3, 29, "Text"],
Cell[75227, 2193, 76, 0, 29, "Text"],
Cell[75306, 2195, 963, 16, 265, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[76306, 2216, 88, 1, 26, "Subsubsection"],
Cell[76397, 2219, 271, 6, 46, "Text"],
Cell[76671, 2227, 270, 6, 87, "Input",
  InitializationCell->True],
Cell[76944, 2235, 236, 6, 87, "Input",
  InitializationCell->True],
Cell[77183, 2243, 248, 6, 87, "Input",
  InitializationCell->True],
Cell[77434, 2251, 250, 6, 87, "Input",
  InitializationCell->True],
Cell[77687, 2259, 242, 6, 87, "Input",
  InitializationCell->True],
Cell[77932, 2267, 242, 6, 87, "Input",
  InitializationCell->True],
Cell[78177, 2275, 246, 6, 87, "Input",
  InitializationCell->True],
Cell[78426, 2283, 254, 6, 87, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[78717, 2294, 108, 1, 26, "Subsubsection"],

Cell[CellGroupData[{
Cell[78850, 2299, 561, 9, 78, "Input",
  InitializationCell->True],
Cell[79414, 2310, 449, 9, 70, "Output"]
}, Open  ]],
Cell[79878, 2322, 223, 5, 27, "Input",
  InitializationCell->True]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{
Cell[80150, 2333, 73, 1, 44, "Subsection",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[80248, 2338, 51, 1, 26, "Input",
  InitializationCell->True],
Cell[80302, 2341, 61, 1, 26, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[80424, 2349, 55, 1, 57, "Section",
  InitializationCell->True],
Cell[80482, 2352, 76, 0, 27, "Text"],

Cell[CellGroupData[{
Cell[80583, 2356, 74, 1, 39, "Subsection",
  InitializationCell->True],
Cell[80660, 2359, 2115, 53, 160, "Input",
  InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{
Cell[82812, 2417, 73, 1, 39, "Subsection",
  InitializationCell->True],
Cell[82888, 2420, 58, 1, 23, "Input",
  InitializationCell->True],
Cell[82949, 2423, 109, 3, 27, "Text"],
Cell[83061, 2428, 246, 6, 58, "Input",
  InitializationCell->True],
Cell[83310, 2436, 293, 7, 41, "Input",
  InitializationCell->True]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[83652, 2449, 38, 0, 37, "Section"],
Cell[83693, 2451, 117, 3, 27, "Text"],

Cell[CellGroupData[{
Cell[83835, 2458, 115, 2, 24, "Input",
  CellTags->"Setup section"],
Cell[83953, 2462, 1535, 25, 182, "Output"]
}, Open  ]],
Cell[85503, 2490, 142, 3, 43, "Text"],

Cell[CellGroupData[{
Cell[85670, 2497, 55, 1, 24, "Input"],
Cell[85728, 2500, 159, 2, 47, "Print"]
}, Open  ]],
Cell[85902, 2505, 139, 3, 27, "Text"],
Cell[86044, 2510, 134, 3, 24, "Input"],

Cell[CellGroupData[{
Cell[86203, 2517, 85, 2, 39, "Subsection"],
Cell[86291, 2521, 112, 2, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[86440, 2528, 83, 2, 39, "Subsection"],
Cell[86526, 2532, 117, 2, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[86680, 2539, 80, 2, 39, "Subsection"],
Cell[86763, 2543, 117, 2, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[86917, 2550, 88, 2, 39, "Subsection"],
Cell[87008, 2554, 115, 2, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[87160, 2561, 87, 2, 39, "Subsection"],
Cell[87250, 2565, 114, 2, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[87401, 2572, 86, 2, 39, "Subsection"],
Cell[87490, 2576, 113, 2, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[87640, 2583, 92, 2, 39, "Subsection"],
Cell[87735, 2587, 119, 2, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[87891, 2594, 89, 2, 39, "Subsection"],
Cell[87983, 2598, 161, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[88181, 2608, 89, 2, 39, "Subsection"],
Cell[88273, 2612, 166, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[88476, 2622, 80, 2, 39, "Subsection"],
Cell[88559, 2626, 114, 2, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[88710, 2633, 84, 2, 39, "Subsection"],
Cell[88797, 2637, 272, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[89106, 2648, 75, 2, 39, "Subsection"],
Cell[89184, 2652, 252, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[89473, 2663, 75, 2, 39, "Subsection"],
Cell[89551, 2667, 111, 2, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[89699, 2674, 84, 2, 39, "Subsection"],
Cell[89786, 2678, 284, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[90107, 2689, 81, 2, 39, "Subsection"],
Cell[90191, 2693, 193, 5, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[90421, 2703, 81, 2, 39, "Subsection"],
Cell[90505, 2707, 866, 15, 153, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[91408, 2727, 86, 2, 39, "Subsection"],
Cell[91497, 2731, 218, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[91752, 2742, 86, 2, 39, "Subsection"],
Cell[91841, 2746, 168, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[92046, 2756, 86, 2, 39, "Subsection"],
Cell[92135, 2760, 171, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[92343, 2770, 87, 2, 39, "Subsection"],
Cell[92433, 2774, 231, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[92701, 2785, 84, 2, 39, "Subsection"],
Cell[92788, 2789, 184, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[93009, 2799, 82, 2, 39, "Subsection"],
Cell[93094, 2803, 234, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[93365, 2814, 88, 2, 39, "Subsection"],
Cell[93456, 2818, 190, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[93683, 2828, 83, 2, 39, "Subsection"],
Cell[93769, 2832, 182, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[93988, 2842, 83, 2, 39, "Subsection"],
Cell[94074, 2846, 199, 5, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[94310, 2856, 81, 2, 39, "Subsection"],
Cell[94394, 2860, 197, 5, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[94628, 2870, 80, 2, 39, "Subsection"],
Cell[94711, 2874, 246, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[94994, 2885, 80, 2, 39, "Subsection"],
Cell[95077, 2889, 241, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[95355, 2900, 82, 2, 39, "Subsection"],
Cell[95440, 2904, 179, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[95656, 2914, 81, 2, 39, "Subsection"],
Cell[95740, 2918, 174, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[95951, 2928, 80, 2, 39, "Subsection"],
Cell[96034, 2932, 306, 6, 42, "Message"],
Cell[96343, 2940, 153, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[96533, 2950, 89, 2, 39, "Subsection"],
Cell[96625, 2954, 273, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[96935, 2965, 94, 2, 39, "Subsection"],
Cell[97032, 2969, 283, 6, 28, "Message"],
Cell[97318, 2977, 380, 8, 75, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[97735, 2990, 84, 2, 39, "Subsection"],
Cell[97822, 2994, 214, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[98073, 3005, 91, 2, 39, "Subsection"],
Cell[98167, 3009, 187, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[98391, 3019, 105, 2, 39, "Subsection"],
Cell[98499, 3023, 168, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[98704, 3033, 86, 2, 39, "Subsection"],
Cell[98793, 3037, 254, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[99084, 3048, 98, 2, 39, "Subsection"],
Cell[99185, 3052, 216, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[99438, 3063, 94, 2, 39, "Subsection"],
Cell[99535, 3067, 208, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[99780, 3078, 91, 2, 39, "Subsection"],
Cell[99874, 3082, 225, 6, 43, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[100136, 3093, 79, 2, 39, "Subsection"],
Cell[100218, 3097, 162, 5, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[100417, 3107, 32, 0, 39, "Subsection"],
Cell[100452, 3109, 172, 4, 43, "Text"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[100673, 3119, 76, 1, 37, "Section",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[100774, 3124, 97, 1, 43, "Subsection",
  CellTags->"Examples section"],
Cell[100874, 3127, 360, 7, 44, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[101259, 3138, 456, 10, 27, "Input",
  CellTags->"Examples section"],
Cell[101718, 3150, 135, 1, 26, "Output"]
}, Open  ]],
Cell[101868, 3154, 66, 0, 29, "Text"],

Cell[CellGroupData[{
Cell[101959, 3158, 83, 1, 27, "Input"],
Cell[102045, 3161, 45, 0, 26, "Output"]
}, Open  ]],
Cell[102105, 3164, 185, 5, 31, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[102315, 3173, 66, 1, 27, "Input",
  CellTags->"Examples section"],
Cell[102384, 3176, 55, 1, 26, "Output"]
}, Open  ]],
Cell[102454, 3180, 120, 4, 29, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[102599, 3188, 85, 2, 27, "Input",
  CellTags->"Examples section"],
Cell[102687, 3192, 122, 1, 22, "Print"]
}, Open  ]],
Cell[102824, 3196, 209, 5, 29, "Text",
  CellTags->"Examples section"],
Cell[103036, 3203, 253, 7, 23, "InputOnly",
  CellTags->"Examples section"],
Cell[103292, 3212, 297, 6, 44, "Text",
  CellTags->"Examples section"],
Cell[103592, 3220, 363, 7, 46, "Text",
  CellTags->"Examples section"],
Cell[103958, 3229, 184, 5, 31, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[104167, 3238, 124, 3, 27, "Input",
  CellTags->"Examples section"],
Cell[104294, 3243, 2589, 59, 60, "Output"]
}, Open  ]],
Cell[106898, 3305, 235, 7, 31, "Text",
  CellTags->"Examples section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[107170, 3317, 124, 4, 43, "Subsection",
  CellTags->"mfsInterpret"],
Cell[107297, 3323, 442, 9, 46, "Text"],

Cell[CellGroupData[{
Cell[107764, 3336, 72, 1, 27, "Input"],
Cell[107839, 3339, 1808, 29, 38, "Print"],
Cell[109650, 3370, 514, 11, 22, "Print"]
}, Open  ]],
Cell[110179, 3384, 281, 6, 46, "Text"],

Cell[CellGroupData[{
Cell[110485, 3394, 30, 0, 27, "Input"],
Cell[110518, 3396, 43, 0, 26, "Output"]
}, Open  ]],
Cell[110576, 3399, 134, 4, 31, "Text"],

Cell[CellGroupData[{
Cell[110735, 3407, 55, 1, 27, "Input"],
Cell[110793, 3410, 46, 0, 26, "Output"]
}, Open  ]],
Cell[110854, 3413, 283, 6, 46, "Text"],

Cell[CellGroupData[{
Cell[111162, 3423, 164, 4, 27, "Input"],
Cell[111329, 3429, 25014, 799, 177, 10454, 615, "GraphicsData", "PostScript", \
"Graphics"],
Cell[136346, 4230, 149, 4, 33, "Output"]
}, Open  ]],
Cell[136510, 4237, 75, 0, 27, "Text"],

Cell[CellGroupData[{
Cell[136610, 4241, 53, 1, 24, "Input"],
Cell[136666, 4244, 69, 1, 33, "Output"]
}, Open  ]],
Cell[136750, 4248, 280, 6, 43, "Text"],
Cell[137033, 4256, 166, 4, 43, "Text"],

Cell[CellGroupData[{
Cell[137224, 4264, 92, 2, 24, "Input"],
Cell[137319, 4268, 265, 5, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[137621, 4278, 88, 2, 24, "Input"],
Cell[137712, 4282, 337, 6, 49, "Output"]
}, Open  ]],
Cell[138064, 4291, 57, 0, 27, "Text"],

Cell[CellGroupData[{
Cell[138146, 4295, 168, 4, 24, "Input"],
Cell[138317, 4301, 29040, 875, 246, 10869, 646, "GraphicsData", "PostScript", \
"Graphics"],
Cell[167360, 5178, 149, 4, 33, "Output"]
}, Open  ]],
Cell[167524, 5185, 476, 8, 75, "Text"],
Cell[168003, 5195, 198, 4, 43, "Text"],
Cell[168204, 5201, 350, 7, 60, "Text"],
Cell[168557, 5210, 75, 2, 24, "Input"],
Cell[168635, 5214, 190, 4, 43, "Text"],
Cell[168828, 5220, 125, 3, 27, "Text"],
Cell[168956, 5225, 320, 8, 45, "Text"],

Cell[CellGroupData[{
Cell[169301, 5237, 77, 1, 24, "Input"],
Cell[169381, 5240, 195, 4, 35, "Print"],
Cell[169579, 5246, 8786, 177, 228, "Print"],
Cell[178368, 5425, 1808, 29, 59, "Print"],
Cell[180179, 5456, 514, 11, 35, "Print"]
}, Open  ]],
Cell[180708, 5470, 38, 0, 27, "Text"],
Cell[180749, 5472, 115, 2, 24, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[180901, 5479, 87, 1, 39, "Subsection",
  CellTags->"Examples section"],
Cell[180991, 5482, 438, 9, 59, "Text"],

Cell[CellGroupData[{
Cell[181454, 5495, 105, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[181562, 5498, 401, 11, 59, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[181988, 5513, 103, 2, 24, "Input",
  CellTags->"Examples section"],
Cell[182094, 5517, 1163, 18, 81, "Output"]
}, Open  ]],
Cell[183272, 5538, 181, 5, 28, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[183478, 5547, 187, 4, 24, "Input",
  CellTags->"Examples section"],
Cell[183668, 5553, 45, 0, 34, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[183750, 5558, 143, 3, 24, "Input",
  CellTags->"Examples section"],
Cell[183896, 5563, 59, 0, 33, "Output"]
}, Open  ]],
Cell[183970, 5566, 189, 7, 28, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[184184, 5577, 139, 3, 24, "Input",
  CellTags->"Examples section"],
Cell[184326, 5582, 186, 5, 22, "Message"]
}, Open  ]],
Cell[184527, 5590, 144, 4, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[184696, 5598, 268, 7, 24, "Input",
  CellTags->"Examples section"],
Cell[184967, 5607, 280, 6, 34, "Output"]
}, Open  ]],
Cell[185262, 5616, 168, 6, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[185455, 5626, 265, 7, 24, "Input",
  CellTags->"Examples section"],
Cell[185723, 5635, 65, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[185837, 5642, 105, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[185945, 5645, 154, 4, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[186124, 5653, 106, 2, 24, "Input",
  CellTags->"Examples section"],
Cell[186233, 5657, 240, 4, 33, "Output"]
}, Open  ]],
Cell[186488, 5664, 149, 4, 28, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[186662, 5672, 87, 2, 24, "Input",
  CellTags->"Examples section"],
Cell[186752, 5676, 288, 3, 59, "Print"]
}, Open  ]],
Cell[187055, 5682, 238, 5, 44, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[187318, 5691, 227, 6, 24, "Input",
  CellTags->"Examples section"],
Cell[187548, 5699, 1234, 23, 128, "Output"]
}, Open  ]],
Cell[188797, 5725, 293, 6, 44, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[189115, 5735, 402, 10, 24, "Input",
  CellTags->"Examples section"],
Cell[189520, 5747, 2382, 60, 144, "Output"]
}, Open  ]],
Cell[191917, 5810, 459, 12, 44, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[192401, 5826, 98, 2, 24, "Input",
  CellTags->"Examples section"],
Cell[192502, 5830, 28776, 901, 177, 11362, 682, "GraphicsData", "PostScript", \
"Graphics"],
Cell[221281, 6733, 149, 4, 33, "Output"]
}, Open  ]],
Cell[221445, 6740, 121, 4, 28, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[221591, 6748, 138, 3, 24, "Input",
  CellTags->"Examples section"],
Cell[221732, 6753, 181, 5, 22, "Message"]
}, Open  ]],
Cell[221928, 6761, 237, 6, 44, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[222190, 6771, 169, 5, 24, "Input",
  CellTags->"Examples section"],
Cell[222362, 6778, 1915, 41, 143, "Output"]
}, Open  ]],
Cell[224292, 6822, 241, 6, 44, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[224558, 6832, 142, 3, 24, "Input",
  CellTags->"Examples section"],
Cell[224703, 6837, 82, 2, 33, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[224834, 6845, 117, 2, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[224954, 6849, 194, 7, 28, "Text"],
Cell[225151, 6858, 711, 18, 76, "Text"],
Cell[225865, 6878, 448, 13, 24, "Input"],
Cell[226316, 6893, 56, 0, 27, "Text"],

Cell[CellGroupData[{
Cell[226397, 6897, 95, 2, 24, "Input"],
Cell[226495, 6901, 670, 15, 82, "Output"]
}, Open  ]],
Cell[227180, 6919, 125, 4, 28, "Text"],
Cell[227308, 6925, 347, 9, 24, "Input"],

Cell[CellGroupData[{
Cell[227680, 6938, 73, 1, 24, "Input"],
Cell[227756, 6941, 31, 0, 33, "Output"]
}, Open  ]],
Cell[227802, 6944, 173, 4, 43, "Text"],
Cell[227978, 6950, 290, 7, 24, "Input"],

Cell[CellGroupData[{
Cell[228293, 6961, 73, 1, 24, "Input"],
Cell[228369, 6964, 31, 0, 33, "Output"]
}, Open  ]],
Cell[228415, 6967, 242, 8, 28, "Text"],
Cell[228660, 6977, 116, 3, 24, "Input"],
Cell[228779, 6982, 41, 0, 27, "Text"],

Cell[CellGroupData[{
Cell[228845, 6986, 73, 1, 24, "Input"],
Cell[228921, 6989, 31, 0, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[229013, 6996, 156, 6, 39, "Subsection",
  CellTags->"Examples section"],
Cell[229172, 7004, 803, 14, 106, "Text",
  CellTags->"Examples section"],
Cell[229978, 7020, 155, 4, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[230158, 7028, 80, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[230241, 7031, 192, 6, 28, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[230458, 7041, 474, 10, 41, "Input",
  CellTags->"Examples section"],
Cell[230935, 7053, 142, 1, 49, "Output"]
}, Open  ]],
Cell[231092, 7057, 274, 8, 24, "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[231391, 7069, 139, 3, 24, "Input",
  CellTags->"Examples section"],
Cell[231533, 7074, 151, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[231733, 7083, 82, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[231818, 7086, 802, 24, 77, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[232645, 7114, 87, 2, 24, "Input",
  CellTags->"Examples section"],
Cell[232735, 7118, 134, 1, 47, "Print"]
}, Open  ]],
Cell[232884, 7122, 468, 11, 60, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[233377, 7137, 251, 6, 24, "Input",
  CellTags->"Examples section"],
Cell[233631, 7145, 147, 3, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[233815, 7153, 199, 5, 24, "Input",
  CellTags->"Examples section"],
Cell[234017, 7160, 45, 0, 33, "Output"]
}, Open  ]],
Cell[234077, 7163, 486, 14, 60, "Text",
  CellTags->"Examples section"],
Cell[234566, 7179, 536, 14, 24, "Input",
  CellTags->"Examples section"],
Cell[235105, 7195, 266, 9, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[235396, 7208, 352, 9, 24, "Input",
  CellTags->"Examples section"],
Cell[235751, 7219, 663, 15, 151, "Output"]
}, Open  ]],
Cell[236429, 7237, 360, 11, 44, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[236814, 7252, 851, 20, 58, "Input",
  CellTags->"Examples section"],
Cell[237668, 7274, 790, 18, 175, "Output"]
}, Open  ]],
Cell[238473, 7295, 397, 12, 44, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[238895, 7311, 739, 19, 58, "Input",
  CellTags->"Examples section"],
Cell[239637, 7332, 2462, 58, 167, "Output"]
}, Open  ]],
Cell[242114, 7393, 519, 13, 60, "Text",
  CellTags->"Examples section"],
Cell[242636, 7408, 589, 16, 24, "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[243250, 7428, 350, 9, 24, "Input",
  CellTags->"Examples section"],
Cell[243603, 7439, 319, 9, 59, "Output"]
}, Open  ]],
Cell[243937, 7451, 83, 1, 27, "Text",
  CellTags->"Examples section"],
Cell[244023, 7454, 784, 19, 58, "Input",
  CellTags->"Examples section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[244844, 7478, 86, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[244933, 7481, 221, 5, 43, "Text",
  CellTags->"Examples section"],
Cell[245157, 7488, 178, 4, 27, "Text",
  CellTags->"Examples section"],
Cell[245338, 7494, 257, 7, 24, "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[245620, 7505, 235, 6, 24, "Input",
  CellTags->"Examples section"],
Cell[245858, 7513, 2505, 59, 167, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[248400, 7577, 354, 9, 24, "Input",
  CellTags->"Examples section"],
Cell[248757, 7588, 430, 11, 90, "Output"]
}, Open  ]],
Cell[249202, 7602, 262, 6, 41, "Text",
  CellTags->"Examples section"],
Cell[249467, 7610, 332, 9, 24, "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[249824, 7623, 311, 8, 24, "Input",
  CellTags->"Examples section"],
Cell[250138, 7633, 567, 15, 151, "Output"]
}, Open  ]],
Cell[250720, 7651, 227, 7, 27, "Text",
  CellTags->"Examples section"],
Cell[250950, 7660, 339, 9, 24, "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[251314, 7673, 140, 3, 24, "Input",
  CellTags->"Examples section"],
Cell[251457, 7678, 184, 4, 33, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[251690, 7688, 80, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[251773, 7691, 533, 12, 60, "Text",
  CellTags->"Examples section"],
Cell[252309, 7705, 664, 17, 41, "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[252998, 7726, 123, 3, 24, "Input",
  CellTags->"Examples section"],
Cell[253124, 7731, 758, 13, 95, "Output"]
}, Open  ]],
Cell[253897, 7747, 185, 6, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[254107, 7757, 91, 2, 24, "Input",
  CellTags->"Examples section"],
Cell[254201, 7761, 135, 1, 47, "Print"]
}, Open  ]],

Cell[CellGroupData[{
Cell[254373, 7767, 447, 11, 24, "Input",
  CellTags->"Examples section"],
Cell[254823, 7780, 3000, 74, 209, "Output"]
}, Open  ]],
Cell[257838, 7857, 221, 5, 44, "Text"],

Cell[CellGroupData[{
Cell[258084, 7866, 694, 19, 41, "Input"],
Cell[258781, 7887, 2526, 56, 145, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[261368, 7950, 133, 5, 39, "Subsection",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[261526, 7959, 64, 0, 28, "Subsubsection"],
Cell[261593, 7961, 279, 9, 43, "Text",
  CellTags->"Examples section"],
Cell[261875, 7972, 343, 10, 24, "Input",
  CellTags->"Examples section"],
Cell[262221, 7984, 394, 11, 25, "Input",
  CellTags->"Examples section"],
Cell[262618, 7997, 637, 16, 39, "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[263280, 8017, 190, 5, 24, "Input",
  CellTags->"Examples section"],
Cell[263473, 8024, 1067, 28, 76, "Output"]
}, Open  ]],
Cell[264555, 8055, 262, 7, 44, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[264842, 8066, 144, 3, 24, "Input",
  CellTags->"Examples section"],
Cell[264989, 8071, 35, 0, 33, "Output"]
}, Open  ]],
Cell[265039, 8074, 91, 1, 27, "Text",
  CellTags->"Examples section"],
Cell[265133, 8077, 346, 10, 24, "Input",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[265504, 8091, 144, 3, 24, "Input",
  CellTags->"Examples section"],
Cell[265651, 8096, 65, 0, 33, "Output"]
}, Open  ]],
Cell[265731, 8099, 79, 1, 27, "Text",
  CellTags->"Examples section"],
Cell[265813, 8102, 199, 5, 24, "Input",
  CellTags->"Examples section"],
Cell[266015, 8109, 74, 1, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[266114, 8114, 103, 2, 24, "Input",
  CellTags->"Examples section"],
Cell[266220, 8118, 1219, 18, 81, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[267488, 8142, 52, 0, 28, "Subsubsection"],
Cell[267543, 8144, 183, 4, 44, "Text"],

Cell[CellGroupData[{
Cell[267751, 8152, 172, 4, 24, "Input"],
Cell[267926, 8158, 30, 0, 33, "Output"]
}, Open  ]],
Cell[267971, 8161, 134, 3, 27, "Text"],
Cell[268108, 8166, 150, 4, 24, "Input"],
Cell[268261, 8172, 269, 7, 24, "Input"],
Cell[268533, 8181, 102, 3, 27, "Text"],

Cell[CellGroupData[{
Cell[268660, 8188, 107, 2, 24, "Input"],
Cell[268770, 8192, 173, 3, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[268980, 8200, 468, 11, 41, "Input"],
Cell[269451, 8213, 27464, 1016, 395, 12612, 828, "GraphicsData", \
"PostScript", "Graphics"],
Cell[296918, 9231, 149, 4, 33, "Output"]
}, Open  ]],
Cell[297082, 9238, 70, 0, 27, "Text"],
Cell[297155, 9240, 356, 8, 58, "Input"],
Cell[297514, 9250, 304, 8, 24, "Input"],

Cell[CellGroupData[{
Cell[297843, 9262, 70, 1, 24, "Input"],
Cell[297916, 9265, 348, 6, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[298301, 9276, 73, 1, 24, "Input"],
Cell[298377, 9279, 130, 3, 33, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[298544, 9287, 76, 1, 24, "Input"],
Cell[298623, 9290, 100, 2, 33, "Output"]
}, Open  ]],
Cell[298738, 9295, 89, 3, 27, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[298864, 9303, 79, 0, 28, "Subsubsection"],
Cell[298946, 9305, 384, 7, 60, "Text"],
Cell[299333, 9314, 200, 5, 24, "Input"],

Cell[CellGroupData[{
Cell[299558, 9323, 82, 1, 24, "Input"],
Cell[299643, 9326, 151, 3, 33, "Output"]
}, Open  ]],
Cell[299809, 9332, 243, 5, 43, "Text"],
Cell[300055, 9339, 340, 7, 60, "Text"],

Cell[CellGroupData[{
Cell[300420, 9350, 70, 1, 24, "Input"],
Cell[300493, 9353, 137, 3, 33, "Output"]
}, Open  ]],
Cell[300645, 9359, 113, 3, 27, "Text"],

Cell[CellGroupData[{
Cell[300783, 9366, 149, 3, 24, "Input"],
Cell[300935, 9371, 105, 2, 33, "Output"]
}, Open  ]],
Cell[301055, 9376, 114, 4, 28, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[301206, 9385, 59, 0, 28, "Subsubsection"],
Cell[301268, 9387, 270, 6, 43, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[301563, 9397, 312, 8, 24, "Input",
  CellTags->"Examples section"],
Cell[301878, 9407, 1088, 19, 111, "Output"]
}, Open  ]],
Cell[302981, 9429, 128, 4, 27, "Text",
  CellTags->"Examples section"]
}, Open  ]],

Cell[CellGroupData[{
Cell[303146, 9438, 55, 0, 28, "Subsubsection"],
Cell[303204, 9440, 170, 4, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[303399, 9448, 302, 8, 58, "Input",
  CellTags->"Examples section"],
Cell[303704, 9458, 61, 0, 33, "Output"]
}, Open  ]],
Cell[303780, 9461, 209, 7, 27, "Text",
  CellTags->"Examples section"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[304038, 9474, 84, 1, 39, "Subsection"],
Cell[304125, 9477, 130, 3, 27, "Text"],

Cell[CellGroupData[{
Cell[304280, 9484, 48, 0, 24, "Input"],
Cell[304331, 9486, 889, 19, 97, "Output"]
}, Open  ]],
Cell[305235, 9508, 193, 4, 43, "Text"],

Cell[CellGroupData[{
Cell[305453, 9516, 63, 1, 24, "Input"],
Cell[305519, 9519, 235, 3, 59, "Print"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[305803, 9528, 102, 1, 39, "Subsection",
  CellTags->"Examples section"],
Cell[305908, 9531, 361, 7, 59, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[306294, 9542, 118, 2, 15, "Input",
  CellTags->"Examples section"],
Cell[306415, 9546, 1587, 25, 173, "Output"]
}, Open  ]],
Cell[308017, 9574, 233, 5, 43, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[308275, 9583, 84, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[308362, 9586, 128, 4, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[308515, 9594, 97, 2, 24, "Input",
  CellTags->"Examples section"],
Cell[308615, 9598, 147, 1, 70, "Print"]
}, Open  ]],

Cell[CellGroupData[{
Cell[308799, 9604, 231, 6, 24, "Input",
  CellTags->"Examples section"],
Cell[309033, 9612, 205, 5, 70, "Message"],
Cell[309241, 9619, 65, 1, 70, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[309343, 9625, 96, 2, 24, "Input",
  CellTags->"Examples section"],
Cell[309442, 9629, 61, 0, 70, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[309540, 9634, 223, 4, 24, "Input",
  CellTags->"Examples section"],
Cell[309766, 9640, 61, 0, 70, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[309876, 9646, 85, 1, 22, "Subsubsection",
  CellTags->"Examples section"],
Cell[309964, 9649, 128, 4, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[310117, 9657, 90, 2, 15, "Input",
  CellTags->"Examples section"],
Cell[310210, 9661, 176, 2, 52, "Print"]
}, Open  ]],

Cell[CellGroupData[{
Cell[310423, 9668, 118, 2, 15, "Input",
  CellTags->"Examples section"],
Cell[310544, 9672, 38, 0, 29, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[310631, 9678, 86, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[310720, 9681, 117, 3, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[310862, 9688, 100, 2, 15, "Input",
  CellTags->"Examples section"],
Cell[310965, 9692, 168, 2, 52, "Print"]
}, Open  ]],

Cell[CellGroupData[{
Cell[311170, 9699, 194, 5, 32, "Input",
  CellTags->"Examples section"],
Cell[311367, 9706, 134, 3, 29, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[311538, 9714, 188, 5, 32, "Input",
  CellTags->"Examples section"],
Cell[311729, 9721, 103, 2, 29, "Output"]
}, Open  ]],
Cell[311847, 9726, 210, 5, 43, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[312082, 9735, 259, 6, 49, "Input",
  CellTags->"Examples section"],
Cell[312344, 9743, 298, 9, 43, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[312691, 9758, 73, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[312767, 9761, 153, 4, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[312945, 9769, 186, 4, 15, "Input",
  CellTags->"Examples section"],
Cell[313134, 9775, 6409, 143, 292, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[319592, 9924, 109, 1, 28, "Subsubsection",
  CellTags->"Examples section"],
Cell[319704, 9927, 345, 9, 60, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[320074, 9940, 95, 2, 15, "Input",
  CellTags->"Examples section"],
Cell[320172, 9944, 125, 1, 52, "Print"]
}, Open  ]],

Cell[CellGroupData[{
Cell[320334, 9950, 173, 4, 15, "Input",
  CellTags->"Examples section"],
Cell[320510, 9956, 30, 0, 29, "Output"]
}, Open  ]],
Cell[320555, 9959, 72, 1, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[320652, 9964, 61, 1, 15, "Input",
  CellTags->"Examples section"],
Cell[320716, 9967, 30, 0, 29, "Output"]
}, Open  ]],
Cell[320761, 9970, 154, 4, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[320940, 9978, 130, 3, 48, "InputOnly",
  CellTags->"Examples section"],
Cell[321073, 9983, 1892, 29, 96, "Print"],
Cell[322968, 10014, 514, 11, 37, "Print"]
}, Open  ]],
Cell[323497, 10028, 139, 4, 27, "Text",
  CellTags->"Examples section"],

Cell[CellGroupData[{
Cell[323661, 10036, 204, 6, 29, "Input",
  CellTags->"Examples section"],
Cell[323868, 10044, 110, 2, 29, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[324051, 10054, 67, 1, 37, "Section",
  CellTags->"palette"],
Cell[324121, 10057, 509, 9, 75, "Text"],
Cell[324633, 10068, 2864, 84, 202, "Input",
  Evaluatable->True,
  CellGroupingRules->"InputGrouping",
  PageBreakAbove->True,
  PageBreakWithin->False,
  CounterIncrements->"Input"],
Cell[327500, 10154, 269, 6, 44, "Text"],
Cell[327772, 10162, 281, 5, 59, "Text"],
Cell[328056, 10169, 281, 5, 59, "Text"],

Cell[CellGroupData[{
Cell[328362, 10178, 58, 1, 15, "Input"],
Cell[328423, 10181, 88, 1, 37, "Print"]
}, Open  ]],
Cell[328526, 10185, 167, 4, 28, "Text"],
Cell[328696, 10191, 1003, 33, 116, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[329736, 10229, 31, 0, 37, "Section"],
Cell[329770, 10231, 153, 4, 30, "Text",
  CellTags->"Wolfram book"],
Cell[329926, 10237, 181, 6, 30, "Text",
  CellTags->"Maeder book"],
Cell[330110, 10245, 191, 3, 38, "Program"],
Cell[330304, 10250, 64, 1, 30, "Text",
  CellTags->"MAD manual"],
Cell[330371, 10253, 161, 3, 38, "Program"]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

